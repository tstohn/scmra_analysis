(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2700888,      52049]
NotebookOptionsPosition[   2666007,      51487]
NotebookOutlinePosition[   2666403,      51503]
CellTagsIndexPosition[   2666360,      51500]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Which", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$HomeDirectory", "\[Equal]", "\"\</Users/t.stohn\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\</Users/t.stohn/Desktop/Projects/MRA/scMRA-analysis\>\"", "]"}], ",",
     "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", "\"\<Are you on a different computer as usual?\>\"", 
     "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.5720905237826347`*^9, {3.572093855028393*^9, 3.572094009478897*^9}, {
   3.572716340102994*^9, 3.572716376462246*^9}, {3.57271655633514*^9, 
   3.572716588558361*^9}, 3.572716646105364*^9, 3.572718441462943*^9, {
   3.572719970738448*^9, 3.572719981076567*^9}, {3.572720164104289*^9, 
   3.572720173378044*^9}, {3.5816062545982*^9, 3.581606343863*^9}, 
   3.5816067952130003`*^9, {3.581606899507*^9, 3.5816069137362003`*^9}, {
   3.5821169586624765`*^9, 3.582116988005476*^9}, {3.5825430457016172`*^9, 
   3.582543078612165*^9}, {3.590755275428776*^9, 3.590755284246554*^9}, {
   3.590755316471106*^9, 3.590755337404765*^9}, 3.6022348194936523`*^9, 
   3.602234957382904*^9, {3.602237477673463*^9, 3.6022374886971397`*^9}, {
   3.602237541329368*^9, 3.602237608907344*^9}, {3.603091017350206*^9, 
   3.603091059377866*^9}, {3.760780662001924*^9, 3.760780692169632*^9}, {
   3.769845366495174*^9, 3.7698453665603657`*^9}, {3.769845485792183*^9, 
   3.769845486069428*^9}, {3.7698455163574333`*^9, 3.769845534107368*^9}, {
   3.769846508287513*^9, 3.769846517893176*^9}, {3.778834808139308*^9, 
   3.778834808608552*^9}, {3.854790883851129*^9, 3.854790885824538*^9}, {
   3.85479096067878*^9, 3.854790973450862*^9}, 3.85479124008594*^9, 
   3.855394130593239*^9, 3.8553941621393003`*^9, {3.870354065940226*^9, 
   3.870354077183702*^9}, {3.870354169459717*^9, 3.8703541752320347`*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"a53e8fb2-b43f-4a72-bdd3-af2ff5780968"],

Cell[CellGroupData[{

Cell["Model definition", "Section",
 CellChangeTimes->{{3.758436079854013*^9, 
  3.7584360831081133`*^9}},ExpressionUUID->"81977dc5-1250-4cb9-92f9-\
69081d5b42f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TMAX", "=", "1000"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7752941105833406`*^9, 3.775294116592102*^9}, {
  3.775798314260988*^9, 3.775798318488574*^9}, {3.775798731660646*^9, 
  3.775798736903961*^9}, {3.775813020317924*^9, 3.775813025311809*^9}, {
  3.775813071227412*^9, 3.77581307371948*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"22cba57e-5028-4056-92e4-b7c7a510f4da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"totalProteinContraints", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SosInactive", "\[Rule]", " ", 
       RowBox[{"SosTot", "-", " ", 
        RowBox[{"SosActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"RasInactive", "\[Rule]", 
       RowBox[{"RasTot", "-", 
        RowBox[{"RasActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"Raf1Inactive", "\[Rule]", " ", 
       RowBox[{"Raf1Tot", "-", 
        RowBox[{"Raf1Active", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"MekInactive", "\[Rule]", 
       RowBox[{"MekTot", "-", 
        RowBox[{"MekActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ErkInactive", "\[Rule]", 
       RowBox[{"ErkTot", "-", 
        RowBox[{"ErkActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"P90RskInactive", "\[Rule]", 
       RowBox[{"P90RskTot", "-", 
        RowBox[{"P90RskActive", "[", "t", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PI3KInactive", "\[Rule]", 
       RowBox[{"PI3KTot", "-", " ", 
        RowBox[{"PI3KActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"AktInactive", "\[Rule]", 
       RowBox[{"AktTot", "-", 
        RowBox[{"AktActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"C3GInactive", "\[Rule]", 
       RowBox[{"C3GTot", "-", 
        RowBox[{"C3GActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"Rap1Inactive", "\[Rule]", 
       RowBox[{"Rap1Tot", "-", 
        RowBox[{"Rap1Active", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"bRafInactive", "\[Rule]", 
       RowBox[{"bRafTot", "-", 
        RowBox[{"bRafActive", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"odes", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"boundEGFReceptor", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{"reaction0", "-", "reaction20"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"freeEGFReceptor", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction28", "-", "reaction29", "-", "reaction0"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"SosActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction1", "-", "reaction2", "-", "reaction13"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"RasActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction3", "-", "reaction4"}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{
        RowBox[{"Raf1Active", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction5", "-", "reaction6", "-", "reaction19"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"MekActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction7", "+", "reaction27", "-", "reaction8"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"ErkActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction9", "-", "reaction10"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"P90RskActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction11", "-", "reaction12"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"PI3KActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction14", "+", "reaction15", "-", "reaction16"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"AktActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction17", "-", "reaction18"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"C3GActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction21", "-", "reaction22"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Rap1Active", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction23", "-", "reaction24"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"bRafActive", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"reaction25", "-", "reaction26", " ", "+", "reaction30"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vars", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "boundEGFReceptor", ",", "\[IndentingNewLine]", "freeEGFReceptor", ",", 
      "\[IndentingNewLine]", "SosActive", ",", "\[IndentingNewLine]", 
      "RasActive", ",", "\[IndentingNewLine]", "Raf1Active", ",", 
      "\[IndentingNewLine]", "MekActive", ",", "\[IndentingNewLine]", 
      "ErkActive", ",", "\[IndentingNewLine]", "P90RskActive", ",", 
      "\[IndentingNewLine]", "PI3KActive", ",", "\[IndentingNewLine]", 
      "AktActive", ",", "\[IndentingNewLine]", "C3GActive", ",", 
      "\[IndentingNewLine]", "Rap1Active", ",", "\[IndentingNewLine]", 
      "bRafActive"}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rates", " ", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reaction0", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"$EGF", "+", "freeEGFReceptor"}], "\[Rule]", 
          "boundEGFReceptor"}], ";"}], "*)"}], 
       RowBox[{
        RowBox[{"reaction0k1", "*", "EGF", "*", 
         RowBox[{"freeEGFReceptor", "[", "t", "]"}]}], "-", 
        RowBox[{"reaction0k2", "*", 
         RowBox[{"boundEGFReceptor", "[", "t", "]"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction1", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"SosInactive", "=", 
          RowBox[{">", "SosActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction1Kcat", "*", 
        RowBox[{"boundEGFReceptor", "[", "t", "]"}], "*", 
        RowBox[{"SosInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction1km", "+", "SosInactive"}], ")"}]}]}]}], ",", 
      RowBox[{"reaction2", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"SosActive", "=", 
          RowBox[{">", "SosInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction2k1", "*", 
        RowBox[{"SosActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"reaction3", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"RasInactive", "=", 
          RowBox[{">", "RasActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction3Kcat", "*", 
        RowBox[{"SosActive", "[", "t", "]"}], "*", 
        RowBox[{"RasInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction3km", "+", "RasInactive"}], ")"}]}]}]}], ",", 
      RowBox[{"reaction4", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"RasActive", "=", 
          RowBox[{">", "RasInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction4Kcat", "*", "RasGapActive", "*", 
        RowBox[{
         RowBox[{"RasActive", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction4km", "+", 
           RowBox[{"RasActive", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction5", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Raf1Inactive", "=", 
          RowBox[{">", "Raf1Active"}]}], ";"}], "*)"}], 
       RowBox[{"reaction5Kcat", "*", 
        RowBox[{"RasActive", "[", "t", "]"}], "*", 
        RowBox[{"Raf1Inactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction5km", "+", "Raf1Inactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction6", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Raf1Active", "=", 
          RowBox[{">", "Raf1Inactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction6Kcat", "*", "Raf1PPtase", "*", 
        RowBox[{
         RowBox[{"Raf1Active", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction6km", "+", 
           RowBox[{"Raf1Active", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction7", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"MekInactive", "=", 
          RowBox[{">", "MekActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction7Kcat", "*", 
        RowBox[{"Raf1Active", "[", "t", "]"}], "*", 
        RowBox[{"MekInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction7km", "+", "MekInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction8", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"MekActive", "=", 
          RowBox[{">", "MekInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction8Kcat", "*", "PP2AActive", "*", 
        RowBox[{
         RowBox[{"MekActive", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction8km", "+", 
           RowBox[{"MekActive", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction9", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ErkInactive", "=", 
          RowBox[{">", "ErkActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction9Kcat", "*", 
        RowBox[{"MekActive", "[", "t", "]"}], "*", 
        RowBox[{"ErkInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction9km", "+", "ErkInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction10", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ErkActive", "=", 
          RowBox[{">", "ErkInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction10Kcat", "*", "PP2AActive", "*", 
        RowBox[{
         RowBox[{"ErkActive", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction10km", "+", 
           RowBox[{"ErkActive", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction11", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"P90RskInactive", "=", 
          RowBox[{">", "P90RskActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction11Kcat", "*", 
        RowBox[{"ErkActive", "[", "t", "]"}], "*", 
        RowBox[{"P90RskInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction11km", "+", "P90RskInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction12", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"P90RskActive", "=", 
          RowBox[{">", "P90RskInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction12k1", "*", 
        RowBox[{"P90RskActive", "[", "t", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction13", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"SosActive", "=", 
          RowBox[{">", "SosInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction13Kcat", "*", 
        RowBox[{"P90RskActive", "[", "t", "]"}], "*", 
        RowBox[{
         RowBox[{"SosActive", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction13km", "+", 
           RowBox[{"SosActive", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction14", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PI3KInactive", "=", 
          RowBox[{">", "PI3KActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction14Kcat", "*", 
        RowBox[{"boundEGFReceptor", "[", "t", "]"}], "*", 
        RowBox[{"PI3KInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction14km", "+", "PI3KInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction15", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PI3KInactive", "=", 
          RowBox[{">", "PI3KActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction15Kcat", "*", 
        RowBox[{"RasActive", "[", "t", "]"}], "*", 
        RowBox[{"PI3KInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction15km", "+", "PI3KInactive"}], ")"}]}]}]}], ",", 
      RowBox[{"reaction16", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PI3KActive", "=", 
          RowBox[{">", "PI3KInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction16k1", "*", 
        RowBox[{"PI3KActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"reaction17", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"AktInactive", "=", 
          RowBox[{">", "AktActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction17Kcat", "*", 
        RowBox[{"PI3KActive", "[", "t", "]"}], "*", 
        RowBox[{"AktInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction17km", "+", "AktInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction18", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"AktActive", "=", 
          RowBox[{">", "AktInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction18k1", "*", 
        RowBox[{"AktActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"reaction19", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Raf1Active", "=", 
          RowBox[{">", "Raf1Inactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction19Kcat", "*", 
        RowBox[{"AktActive", "[", "t", "]"}], "*", 
        RowBox[{
         RowBox[{"Raf1Active", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction19km", "+", 
           RowBox[{"Raf1Active", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction20", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"boundEGFReceptor", "=", 
          RowBox[{">", "degradedEGFReceptor"}]}], ";"}], "*)"}], 
       RowBox[{"reaction20k1", "*", 
        RowBox[{"boundEGFReceptor", "[", "t", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction21", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C3GInactive", "=", 
          RowBox[{">", "C3GActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction21kcat", "*", 
        RowBox[{"boundEGFReceptor", "[", "t", "]"}], "*", 
        RowBox[{"C3GInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction21km", "+", "C3GInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction22", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C3GActive", "=", 
          RowBox[{">", "C3GInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction22k1", "*", 
        RowBox[{"C3GActive", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"reaction23", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Rap1Inactive", "=", 
          RowBox[{">", "Rap1Active"}]}], ";"}], "*)"}], 
       RowBox[{"reaction23kcat", "*", 
        RowBox[{"C3GActive", "[", "t", "]"}], "*", 
        RowBox[{"Rap1Inactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction23km", "+", "Rap1Inactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction24", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Rap1Active", "=", 
          RowBox[{">", "Rap1Inactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction24kcat", "*", "Rap1Gap", "*", 
        RowBox[{
         RowBox[{"Rap1Active", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction24km", "+", 
           RowBox[{"Rap1Active", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction25", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"bRafInactive", "=", 
          RowBox[{">", "bRafActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction25kcat", "*", 
        RowBox[{"Rap1Active", "[", "t", "]"}], "*", 
        RowBox[{"bRafInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction25km", "+", "bRafInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction26", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"bRafActive", "=", 
          RowBox[{">", "bRafInactive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction26kcat", "*", "Raf1PPtase", "*", 
        RowBox[{
         RowBox[{"bRafActive", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"reaction26km", "+", 
           RowBox[{"bRafActive", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction27", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"MekInactive", "=", 
          RowBox[{">", "MekActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction27kcat", "*", 
        RowBox[{"bRafActive", "[", "t", "]"}], "*", 
        RowBox[{"MekInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction27km", "+", "MekInactive"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction28", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"$proEGFReceptor", "=", 
          RowBox[{">", "freeEGFReceptor"}]}], ";"}], "*)"}], "reaction28v"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"reaction29", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"freeEGFReceptor", "=", 
          RowBox[{">", "degradedEGFReceptor"}]}], ";"}], "*)"}], 
       RowBox[{"reaction29k1", "*", 
        RowBox[{"freeEGFReceptor", "[", "t", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction30", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"bRafInactive", "=", 
          RowBox[{">", "bRafActive"}]}], ";"}], "*)"}], 
       RowBox[{"reaction30kcat", "*", 
        RowBox[{"RasActive", "[", "t", "]"}], "*", 
        RowBox[{"bRafInactive", "/", 
         RowBox[{"(", 
          RowBox[{"reaction30km", "+", "bRafInactive"}], ")"}]}]}]}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pars", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reaction0k1", "\[Rule]", "0.000021"}], ",", " ", 
      RowBox[{"reaction0k2", "\[Rule]", "0.121008"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction1Kcat", "\[Rule]", "694.731"}], ",", 
      RowBox[{"reaction1km", "\[Rule]", "6086070"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction2k1", "\[Rule]", "2.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"reaction3Kcat", "\[Rule]", "32.344"}], ",", 
      RowBox[{"reaction3km", "\[Rule]", "35954.3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction4Kcat", "\[Rule]", "1509.36"}], ",", 
      RowBox[{"reaction4km", "\[Rule]", "1432410"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction5Kcat", "\[Rule]", "0.884096"}], ",", 
      RowBox[{"reaction5km", "\[Rule]", "62464.6"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction6Kcat", "\[Rule]", "0.126329"}], ",", 
      RowBox[{"reaction6km", "\[Rule]", "1061.71"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction7Kcat", "\[Rule]", "185.759"}], ",", 
      RowBox[{"reaction7km", "\[Rule]", "4768350"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction8Kcat", "\[Rule]", "2.83243"}], ",", 
      RowBox[{"reaction8km", "\[Rule]", "518753"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction9Kcat", "\[Rule]", "9.85367"}], ",", 
      RowBox[{"reaction9km", "\[Rule]", "1007340"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction10Kcat", "\[Rule]", "8.8912"}], ",", 
      RowBox[{"reaction10km", "\[Rule]", "3496490"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction11Kcat", "\[Rule]", "0.0213697"}], ",", 
      RowBox[{"reaction11km", "\[Rule]", "763523"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction12k1", "\[Rule]", "0.005"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction13Kcat", "\[Rule]", "1611.97"}], ",", 
      RowBox[{"reaction13km", "\[Rule]", "896896"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction14Kcat", "\[Rule]", "10.6737"}], ",", 
      RowBox[{"reaction14km", "\[Rule]", "184912"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction15Kcat", "\[Rule]", "0.0771067"}], ",", 
      RowBox[{"reaction15km", "\[Rule]", "272056"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction16k1", "\[Rule]", "0.005"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"reaction16k1", "\[Rule]", "0.1"}], ","}], 
       RowBox[{"(*", 
        RowBox[{
        "Increase", " ", "inactivation", " ", "of", " ", "PI3K", " ", 
         "compared", " ", "to", " ", "original", " ", "model", " ", "to", " ",
          "avoid", " ", "very", " ", "high", " ", 
         RowBox[{"PI3K", "/", "AKT"}]}], "*)"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"reaction17Kcat", "\[Rule]", "0.0566279"}], ",", 
      RowBox[{"reaction17km", "\[Rule]", "653951"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction18k1", "\[Rule]", "0.005"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction19Kcat", "\[Rule]", "15.1212"}], ",", 
      RowBox[{"reaction19km", "\[Rule]", "119355"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction20k1", "\[Rule]", "0.2"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"reaction21kcat", "\[Rule]", "694.731"}], ",", 
      RowBox[{"reaction21km", "\[Rule]", "6086070"}], ",", 
      RowBox[{"reaction22k1", "\[Rule]", "2.5"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"reaction23kcat", "\[Rule]", "32.344"}], ",", 
      RowBox[{"reaction23km", "\[Rule]", "35954.3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction24kcat", "\[Rule]", "1509.36"}], ",", 
      RowBox[{"reaction24km", "\[Rule]", "1432410"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction25kcat", "\[Rule]", "0.884096"}], ",", 
      RowBox[{"reaction25km", "\[Rule]", "62464.6"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction26kcat", "\[Rule]", "0.126329"}], ",", 
      RowBox[{"reaction26km", "\[Rule]", "1061.71"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction27kcat", "\[Rule]", "185.759"}], ",", 
      RowBox[{"reaction27km", "\[Rule]", "4768350"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction28v", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
      RowBox[{"reaction29k1", "\[Rule]", "0.00125"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"reaction30kcat", "\[Rule]", "0.884096"}], ",", 
      RowBox[{"reaction30km", "\[Rule]", "62464.6"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"SosTot", "\[Rule]", " ", "120000"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RasTot", "\[Rule]", " ", "120000"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Raf1Tot", "\[Rule]", " ", "120000"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MekTot", "\[Rule]", "600000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ErkTot", "\[Rule]", "600000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"P90RskTot", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"PI3KTot", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AktTot", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"C3GTot", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Rap1Tot", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"bRafTot", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"EGF", "\[Rule]", " ", "10002000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PP2AActive", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Raf1PPtase", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"RasGapActive", "\[Rule]", "120000"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rap1Gap", "\[Rule]", "120000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"proEGFReceptor", "\[Rule]", "1"}]}], "\n", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"EGF", "[", "0", "]"}], "==", "10002000"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"boundEGFReceptor", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"freeEGFReceptor", "[", "0", "]"}], "\[Equal]", "80000"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SosActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RasActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Raf1Active", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MekActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ErkActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P90RskActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PI3KActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AktActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"C3GActive", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Rap1Active", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bRafActive", "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.758368401718534*^9, 3.75836842192854*^9}, {
   3.758368452979803*^9, 3.758368706568068*^9}, {3.758368863607737*^9, 
   3.758368881337934*^9}, {3.758370558446731*^9, 3.758370571148329*^9}, {
   3.75837117041667*^9, 3.758371170742331*^9}, {3.758433564827529*^9, 
   3.75843363220401*^9}, {3.758433825876631*^9, 3.7584338273585453`*^9}, {
   3.775294108057804*^9, 3.775294215359248*^9}, {3.775294260650421*^9, 
   3.775294312460228*^9}, {3.77529434409822*^9, 3.775294353407401*^9}, 
   3.7752974064384527`*^9, {3.775297573624961*^9, 3.7752975749609127`*^9}, {
   3.7753021881577463`*^9, 3.775302191056394*^9}, {3.775302541782295*^9, 
   3.775302568069993*^9}, 3.775302675001273*^9, {3.775797899091964*^9, 
   3.775797918624996*^9}, 3.7757986378764057`*^9, 3.775810206710545*^9, {
   3.7758163726880302`*^9, 3.775816374570148*^9}, 3.775817787992299*^9, {
   3.7758178787352047`*^9, 3.7758179089871483`*^9}, {3.7758181985629663`*^9, 
   3.7758181986731033`*^9}, {3.778836181804102*^9, 3.7788361854685373`*^9}, {
   3.803293494963338*^9, 3.803293545195985*^9}, {3.803370793874227*^9, 
   3.8033707952999477`*^9}, {3.803370843254156*^9, 3.803370843814076*^9}, {
   3.805520490378397*^9, 3.8055204973073063`*^9}, {3.805520556738489*^9, 
   3.80552055852181*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"d7a6ecc5-109f-4e34-a318-2e4a1f6cd4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totalProteins", " ", "=", " ", 
  RowBox[{"totalProteinContraints", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",\

 CellLabel->
  "In[600]:=",ExpressionUUID->"be5e864e-4740-4e25-adcf-24f4f65d28fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "SosTot", ",", "RasTot", ",", "Raf1Tot", ",", "MekTot", ",", "ErkTot", ",", 
   "P90RskTot", ",", "PI3KTot", ",", "AktTot", ",", "C3GTot", ",", "Rap1Tot", 
   ",", "bRafTot"}], "}"}]], "Output",
 CellChangeTimes->{
  3.805535823971548*^9, 3.805537409240896*^9, 3.805710214078039*^9, 
   3.806394378393737*^9, 3.80682483504352*^9, 3.8547904101647778`*^9, 
   3.854790864021475*^9, 3.854791249454137*^9, 3.8553891008579407`*^9, {
   3.8553941459390697`*^9, 3.8553941663373528`*^9}, 3.855916007152878*^9, 
   3.856592757422632*^9, 3.858833268023988*^9, 3.85883369721856*^9, 
   3.864808299218437*^9, 3.867739849125621*^9, 3.867739977158786*^9, {
   3.867741248577331*^9, 3.8677412596643553`*^9}, 3.867830665254498*^9, 
   3.872848098708187*^9, 3.8738797579914837`*^9, 3.8738822646323233`*^9, 
   3.874120555210355*^9},
 CellLabel->
  "Out[600]=",ExpressionUUID->"9c10d157-f5b1-4675-a37e-aad5ff6ff79f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"odes", "/.", "rates"}], "/.", "totalProteinContraints"}], ",", 
     "  ", "init", ",", " ", "vars"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758441574787812*^9, 3.7584415764196787`*^9}, {
  3.778836211815405*^9, 3.7788362132224293`*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"1aa3da3e-94d8-4bd9-84be-4ec7e4097c84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.603106341259335*^9, 
  3.603106342505563*^9}},ExpressionUUID->"daf320ca-eeb2-4721-a6ea-\
65eaf7a63be0"],

Cell[CellGroupData[{

Cell["Time dynamics and Steady state solutions", "Subsection",
 CellChangeTimes->{{3.603442218815778*^9, 
  3.6034422359546213`*^9}},ExpressionUUID->"65c9bd97-da81-4c7e-bba0-\
93b2c86d59f6"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "appendT", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"appendT", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendT", "[", "symbol_", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "symbol", "]"}], "<>", "\"\<[t]\>\""}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[602]:=",ExpressionUUID->"4d940341-b63d-46b8-a330-7e370aee995f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "tsol", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsol", "[", 
   RowBox[{"sys_", ",", "pars_", ",", 
    RowBox[{"tm_", ":", "TMAX"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"sys", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         ",", 
        RowBox[{
        "sys", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "]"}], "/.", "pars"}], ",", 
     RowBox[{"sys", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tm"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}], "//", "Flatten"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsol", "::", "usage"}], "=", 
  "\"\<tsol[system, parameters, tmax (optional)]: Time simulation of the \
whole system from (arbitratry) initial conditions. Only used to find \
estimation of steady state.\>\""}]}], "Input",
 CellChangeTimes->{{3.603096698160143*^9, 3.603096737780909*^9}, {
   3.603096771098012*^9, 3.603096774145797*^9}, {3.6030968141717253`*^9, 
   3.603096824797596*^9}, {3.6030968743809023`*^9, 3.603096882309187*^9}, {
   3.603096941507784*^9, 3.603096997265943*^9}, {3.603097777362899*^9, 
   3.6030978110221853`*^9}, {3.603097877744981*^9, 3.60309796357376*^9}, {
   3.603105240461142*^9, 3.603105257508815*^9}, {3.6031083830490713`*^9, 
   3.603108388077209*^9}, {3.613453863025984*^9, 3.613453944566304*^9}, {
   3.760863343570771*^9, 3.7608633644561663`*^9}, {3.760869969899531*^9, 
   3.760869971846375*^9}, {3.7742586820231133`*^9, 3.774258692932534*^9}, {
   3.774604167669375*^9, 3.774604196186942*^9}, {3.775798236725366*^9, 
   3.7757982790581913`*^9}, 3.7757983109757853`*^9, 3.7757985591877413`*^9, {
   3.775813030736105*^9, 3.775813031442215*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"0ddef444-feb5-438d-a8df-a5a101c04e5f"],

Cell[BoxData["\<\"tsol[system, parameters, tmax (optional)]: Time simulation \
of the whole system from (arbitratry) initial conditions. Only used to find \
estimation of steady state.\"\>"], "Output",
 CellChangeTimes->{
  3.613454823173605*^9, 3.613972492961863*^9, 3.67394918983817*^9, 
   3.75845560877376*^9, 3.760780741793804*^9, 3.760783761471507*^9, 
   3.7607838131815157`*^9, 3.7607839939707727`*^9, 3.760784257062057*^9, 
   3.760793172126699*^9, 3.7608625011397*^9, 3.760863078126648*^9, {
   3.7608633519524937`*^9, 3.76086336497327*^9}, 3.7608635443736887`*^9, 
   3.760864069398807*^9, 3.760869972139113*^9, 3.76087020406814*^9, 
   3.7742529854817123`*^9, 3.7742555820302677`*^9, 3.7742556979174557`*^9, 
   3.774258083211858*^9, 3.77425871758029*^9, 3.774603586377582*^9, 
   3.774603964000259*^9, 3.774604003581238*^9, 3.774604080219029*^9, 
   3.7746041829650583`*^9, 3.774604319439898*^9, 3.774604434727748*^9, 
   3.774604544191844*^9, 3.774605184227256*^9, 3.774609467112488*^9, 
   3.774609640543899*^9, 3.774612739103167*^9, 3.774614211536015*^9, 
   3.77468363951048*^9, 3.7746837196698523`*^9, 3.774683934879291*^9, 
   3.774687767670514*^9, 3.774688214408074*^9, 3.774690537589759*^9, 
   3.774695166484953*^9, 3.774696769514943*^9, 3.774696805787702*^9, 
   3.774696860574191*^9, 3.774697807381254*^9, 3.774866009283545*^9, 
   3.774869478542172*^9, 3.774870996119203*^9, 3.774935059723208*^9, 
   3.775190356822875*^9, 3.7751909308605556`*^9, 3.775191111817136*^9, 
   3.775191261658331*^9, 3.775193416146681*^9, 3.775194171832053*^9, 
   3.7751959359998007`*^9, 3.775203479630756*^9, 3.775203673458109*^9, 
   3.77520563499227*^9, 3.775291725349798*^9, 3.775294087305966*^9, 
   3.775300568000827*^9, {3.775538295933199*^9, 3.775538306241819*^9}, 
   3.775550426813855*^9, 3.775797204016859*^9, 3.775798530071854*^9, 
   3.775798596525591*^9, 3.7758097510754757`*^9, 3.775810227316929*^9, 
   3.7758130072609587`*^9, 3.775813085413281*^9, 3.7758178058947773`*^9, {
   3.7758178667249613`*^9, 3.775817887416108*^9}, 3.778835770234667*^9, 
   3.778836487576013*^9, 3.779015351820923*^9, 3.779461217107357*^9, 
   3.779612937237853*^9, 3.7921341299125767`*^9, 3.7922225367193937`*^9, 
   3.8032939797546577`*^9, 3.803294340335343*^9, 3.803294559977284*^9, 
   3.80329490381525*^9, 3.803369475018114*^9, 3.8054494172390223`*^9, 
   3.805449732516222*^9, 3.8055176162997513`*^9, 3.805517933132169*^9, 
   3.805519243654335*^9, 3.8055192950438538`*^9, 3.805520899706892*^9, 
   3.805533230723274*^9, 3.805535753182279*^9, 3.8057102175299473`*^9, 
   3.806394380224018*^9, 3.80682484026898*^9, 3.854790418398732*^9, 
   3.854790458305475*^9, 3.8547912567342243`*^9, 3.855389109950839*^9, 
   3.8553941723824997`*^9, 3.855916014431964*^9, 3.856592772044866*^9, 
   3.858833702976853*^9, 3.864808361247663*^9, 3.867739854365556*^9, 
   3.867739982801908*^9, 3.867741262403184*^9, 3.867830668038928*^9, 
   3.8728481043527117`*^9, 3.873879766973219*^9, {3.8738822600425653`*^9, 
   3.873882269750423*^9}, 3.874120572009995*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"7559d7ed-c5ed-4295-8fe8-dca552519a74"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xt", "[", 
   RowBox[{"sys_", ",", "pars_", ",", " ", "tval_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"appendT", "/@", 
      RowBox[{"sys", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
      ")"}], "/.", 
    RowBox[{"tsol", "[", 
     RowBox[{"sys", ",", " ", "pars", ",", "tval"}], "]"}]}], "/.", 
   RowBox[{"t", "\[Rule]", "tval"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xt", "::", "usage"}], "=", 
   "\"\<xt[sys, pars, t] gives the numerical value of the variables of the \
ODE system as vector\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.774696688259644*^9, 3.7746967545599823`*^9}, {
  3.775798537306233*^9, 3.775798565653714*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"8e703ca8-a3e2-4b7f-950e-a25cc823c111"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ss", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ss", "[", 
   RowBox[{"sys_", ",", "pars_", ",", 
    RowBox[{"tm_", ":", "TMAX"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tmptsol", "=", 
       RowBox[{"tsol", "[", 
        RowBox[{"sys", ",", "pars", ",", " ", "tm"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "approx", ",", "\[IndentingNewLine]", 
      "sscondition"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"approx", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "sys", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "sys", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "//",
               "appendT"}], ")"}], "/.", 
            RowBox[{"t", "\[Rule]", "TMAX"}]}], "/.", "tmptsol"}], "//", 
          "Flatten"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sscondition", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"0", "==", 
          RowBox[{
           RowBox[{
           "sys", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], "/.",
         "pars"}], "/.", 
       RowBox[{
        RowBox[{"x_", "[", "t", "]"}], "\[Rule]", "x"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FindRoot", "[", 
      RowBox[{"sscondition", ",", "approx"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ss", "::", "usage"}], "=", 
  "\"\<ss[system, parameters, tmax]. Find steady state the of system. \n\
system = {{ODEs}, {Initial conditions}, {variables}}\nParameter = {p_i -> \
value,...}\ntmax = Time to which dynamic simulation is run\>\""}]}], "Input",
 CellChangeTimes->{{3.603103377294406*^9, 3.603103385415*^9}, {
   3.603104679367614*^9, 3.603104842129476*^9}, 3.603104874259015*^9, {
   3.603105026708247*^9, 3.603105027203876*^9}, {3.6031050661599503`*^9, 
   3.603105198418222*^9}, {3.603105285230548*^9, 3.6031055829009047`*^9}, {
   3.603105630370411*^9, 3.6031056331359787`*^9}, {3.6031056829218683`*^9, 
   3.603105716445657*^9}, {3.603105877702746*^9, 3.6031059152855597`*^9}, {
   3.603105958572847*^9, 3.603105971111545*^9}, 3.603106062719968*^9, {
   3.6031061196925383`*^9, 3.603106146839695*^9}, {3.603106272503593*^9, 
   3.603106275200645*^9}, {3.6031063216257563`*^9, 3.603106326236353*^9}, {
   3.603108341452672*^9, 3.603108352898981*^9}, {3.603108389967256*^9, 
   3.603108394127317*^9}, {3.603108903795843*^9, 3.603109080513775*^9}, {
   3.603111342585432*^9, 3.603111355409048*^9}, {3.613453949956562*^9, 
   3.613454089320724*^9}, {3.774604201269392*^9, 3.774604203355578*^9}, {
   3.7746043799629717`*^9, 3.774604382749298*^9}, {3.7746044481409473`*^9, 
   3.774604449818872*^9}, {3.7746045043271847`*^9, 3.774604507384468*^9}, {
   3.77469479046248*^9, 3.774694793611025*^9}, {3.775293734933773*^9, 
   3.775293753067712*^9}, {3.775798296295113*^9, 3.77579830645194*^9}, 
   3.775813037992464*^9, {3.805518130973845*^9, 3.8055182209747458`*^9}, {
   3.805518255803184*^9, 3.805518257609277*^9}, {3.8055192474809723`*^9, 
   3.805519247684326*^9}, {3.805519342816934*^9, 3.8055193470985603`*^9}, {
   3.8566075888192053`*^9, 3.856607593212604*^9}, {3.856607630024252*^9, 
   3.8566076909799747`*^9}},
 CellLabel->
  "In[610]:=",ExpressionUUID->"c545e61d-526c-40c8-8857-27297e308b74"],

Cell[BoxData["\<\"ss[system, parameters, tmax]. Find steady state the of \
system. \\nsystem = {{ODEs}, {Initial conditions}, {variables}}\\nParameter = \
{p_i -> value,...}\\ntmax = Time to which dynamic simulation is run\"\>"], \
"Output",
 CellChangeTimes->{
  3.61345482320726*^9, 3.613972493019868*^9, 3.673949189869842*^9, 
   3.758455610165609*^9, 3.760780741880048*^9, 3.760783762493457*^9, 
   3.760783814265065*^9, 3.760783996105652*^9, 3.760784258217167*^9, 
   3.760793172193079*^9, 3.760862501259657*^9, 3.760863078191965*^9, 
   3.760864069456468*^9, 3.760870204153427*^9, 3.7742529855020037`*^9, 
   3.77425558203866*^9, 3.7742556979290037`*^9, 3.774257561447158*^9, 
   3.7742580832229643`*^9, 3.77460358639174*^9, 3.774603964010271*^9, 
   3.774604003590192*^9, 3.774604080228283*^9, {3.774604198278775*^9, 
   3.7746042041458597`*^9}, 3.774604286903831*^9, {3.774604364162685*^9, 
   3.774604383119527*^9}, {3.774604435615446*^9, 3.774604450202314*^9}, 
   3.77460450796875*^9, 3.7746045442052307`*^9, 3.7746051842376337`*^9, 
   3.774609467127747*^9, 3.774609640559761*^9, 3.7746127391170263`*^9, 
   3.774614211553692*^9, 3.774683639522893*^9, 3.774683719678588*^9, 
   3.774683934891346*^9, 3.774687768986651*^9, 3.774688216538444*^9, 
   3.774690539885982*^9, 3.774694794066966*^9, 3.7746951664982986`*^9, 
   3.774696769571075*^9, 3.7746968058388367`*^9, 3.774696860624612*^9, 
   3.774697807429164*^9, 3.77486600931649*^9, 3.774869478602851*^9, 
   3.77487099617013*^9, 3.7749350597953377`*^9, 3.775190356890768*^9, 
   3.7751909309141397`*^9, 3.7751911118929787`*^9, 3.7751912617243423`*^9, 
   3.775193416202684*^9, 3.7751941718930483`*^9, 3.7751959360553093`*^9, 
   3.775203479680039*^9, 3.775203673521785*^9, 3.775205635126461*^9, 
   3.7752917253926153`*^9, 3.775294087363186*^9, 3.775300568039702*^9, {
   3.7755382959748573`*^9, 3.775538306279908*^9}, 3.775550426861425*^9, 
   3.7757972040516577`*^9, 3.775798596589305*^9, 3.7758097511338387`*^9, 
   3.77581022741641*^9, 3.7758130073100224`*^9, 3.775813085472218*^9, 
   3.7758178059347897`*^9, {3.775817866842696*^9, 3.7758178874772673`*^9}, 
   3.778835770271092*^9, 3.778836487632848*^9, 3.779015351870707*^9, 
   3.77946121716468*^9, 3.779612937312693*^9, 3.792134129938384*^9, 
   3.792222536755177*^9, 3.803293979807684*^9, 3.803294340382292*^9, 
   3.80329456003651*^9, 3.803294903872278*^9, 3.8033694750283327`*^9, 
   3.80544941730619*^9, 3.805449732527811*^9, 3.8055176163621607`*^9, 
   3.805517933143639*^9, {3.8055181351516237`*^9, 3.805518142986363*^9}, {
   3.8055182032153997`*^9, 3.805518221773348*^9}, 3.805518258294311*^9, {
   3.805519243711032*^9, 3.805519248204508*^9}, 3.805519295097806*^9, 
   3.805519347700231*^9, 3.805520899760858*^9, 3.805533230780751*^9, 
   3.8055357531922073`*^9, 3.805710217585574*^9, 3.806394380233684*^9, 
   3.806824840331308*^9, 3.85479041843712*^9, 3.854790458314733*^9, 
   3.854791256761434*^9, 3.855389109978203*^9, 3.855394172391498*^9, 
   3.855916014451523*^9, 3.85659277205413*^9, 3.856607635882805*^9, 
   3.856607691719038*^9, 3.8588337029859343`*^9, 3.864808361277174*^9, 
   3.8677398544056177`*^9, 3.86773998286432*^9, 3.867741262449853*^9, 
   3.867830668148911*^9, 3.87284810438731*^9, 3.873879767006466*^9, {
   3.873882260074294*^9, 3.873882269778593*^9}, 3.874120572048588*^9},
 CellLabel->
  "Out[612]=",ExpressionUUID->"8bbd82a4-ad6e-4c58-868e-ba2e4c149820"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jacobian and local responses", "Subsection",
 CellChangeTimes->{{3.778841340139679*^9, 
  3.7788413462717257`*^9}},ExpressionUUID->"dfec77a8-ed1e-45ca-862f-\
46b934e65828"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "rij", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rij", "[", 
   RowBox[{"SYS_", ",", "PARS_", ",", "NODEi_", ",", "NODEj_", ",", 
    RowBox[{"DELTA_", ":", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"REFSS", "=", 
       RowBox[{"ss", "[", 
        RowBox[{"SYS", ",", "PARS"}], "]"}]}], ",", "\[IndentingNewLine]", 
      "dIN", ",", "dSS"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dIN", "=", 
      RowBox[{
       RowBox[{"DeleteCases", "[", 
        RowBox[{"REFSS", ",", 
         RowBox[{"NODEi", "\[Rule]", "_"}]}], "]"}], "/.", 
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"NODEj", "\[Rule]", "\[Xi]_"}], ",", " ", 
         RowBox[{"NODEj", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "DELTA"}], ")"}], "\[Xi]"}]}]}], "]"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"dSS", "=", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Steady", " ", "state", " ", "condition"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"NODEi", "'"}], "[", "t", "]"}], "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ToRules", "/@", 
              RowBox[{
              "SYS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
              "]"}]}], "/.", 
           RowBox[{
            RowBox[{"x_", "[", "t", "]"}], "\[Rule]", "x"}]}], "/.", "PARS"}],
          "/.", "dIN"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"NODEi", ",", 
          RowBox[{"NODEi", "/.", "REFSS"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["NODEj", "NODEi"], "/.", "REFSS"}], ")"}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NODEi", "/.", "dSS"}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"NODEi", "/.", "REFSS"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NODEj", "/.", "dIN"}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"NODEj", "/.", "REFSS"}], ")"}]}]]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rij", "::", "usage"}], "=", 
   "\"\<Calculate the local response coeffiecients of module MOD to a \
perturbation in node PERTURB at steady state REFSS;\[IndentingNewLine]Output: \
r_MOD_PERTURB \[Rule] \!\(\*FractionBox[SubscriptBox[\(x\), \(PERTRURB\)], \
SubscriptBox[\(x\), \(MOD\)]]\)\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\
\(x\), \(MOD\)]\), \(\[PartialD]\*SubscriptBox[\(x\), \(PERTURB\)]\)]\); \
scaled value.\>\""}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.778841368098446*^9, 3.778841376446031*^9}, {
   3.778841430811089*^9, 3.778841445882066*^9}, {3.778841482500297*^9, 
   3.778841519940414*^9}, {3.77884156230789*^9, 3.778841570587756*^9}, {
   3.778841785575466*^9, 3.7788419123646517`*^9}, {3.778842002163433*^9, 
   3.7788423517815523`*^9}, {3.778842414707809*^9, 3.7788424568489437`*^9}, {
   3.778842522287917*^9, 3.778842571608571*^9}, {3.77884260223158*^9, 
   3.778842698284235*^9}, {3.778842739629922*^9, 3.778842755721092*^9}, {
   3.7788429597263193`*^9, 3.77884322366641*^9}, {3.77884344047565*^9, 
   3.778843464358844*^9}, {3.7788435020142*^9, 3.7788438836028214`*^9}, {
   3.778843986764708*^9, 3.778843987790235*^9}, {3.778844032119439*^9, 
   3.778844054142997*^9}, {3.778844117045034*^9, 3.778844118269782*^9}, {
   3.778844268739081*^9, 3.77884434154988*^9}, {3.778844399298736*^9, 
   3.778844502743822*^9}, {3.778844541240282*^9, 3.778844875918462*^9}, {
   3.778844908273267*^9, 3.7788452918561563`*^9}, {3.7788453342691717`*^9, 
   3.7788453456750298`*^9}, {3.778845390326475*^9, 3.778845423003581*^9}, {
   3.778845459775073*^9, 3.778845534551446*^9}, {3.778845613531328*^9, 
   3.778845615947936*^9}, {3.778845806102077*^9, 3.778845807366349*^9}, 
   3.7796130041669827`*^9, {3.792222478881235*^9, 3.792222501392295*^9}, {
   3.792222551487215*^9, 3.792222553412257*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"689dd2fc-d2bf-42af-92d0-fe9fe1a43a5f"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "si", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"si", "[", 
   RowBox[{"SYS_", ",", " ", "PARS_", ",", "NODE_", ",", 
    RowBox[{"DELTA_", ":", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"REFSS", "=", 
       RowBox[{"ss", "[", 
        RowBox[{"SYS", ",", "PARS"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"NODEtot", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "NODE", "]"}], ",", " ", 
          RowBox[{"\"\<Active\>\"", "->", "\"\<Tot\>\""}]}], "]"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "dIN", ",", " ", "dPARS", ",", "dSS"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dPARS", "=", 
      RowBox[{"PARS", "/.", 
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"NODEtot", "\[Rule]", "x_"}], ",", 
         RowBox[{"NODEtot", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "DELTA"}], ")"}], "x"}]}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dIN", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"REFSS", ",", 
        RowBox[{"NODE", "\[Rule]", "_"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"dSS", "=", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Steady", " ", "state", " ", "condition", " ", "for", " ", "NODE"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"NODE", "'"}], "[", "t", "]"}], "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ToRules", "/@", 
              RowBox[{
              "SYS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
              "]"}]}], "/.", 
           RowBox[{
            RowBox[{"x_", "[", "t", "]"}], "\[Rule]", "x"}]}], "/.", "dIN"}], 
         "/.", "dPARS"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"NODE", ",", 
          RowBox[{"NODE", "/.", "REFSS"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["NODEtot", 
       RowBox[{"NODE", "/.", "REFSS"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NODE", "/.", "dSS"}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"NODE", "/.", "REFSS"}], ")"}]}], 
       RowBox[{"DELTA", "*", "NODEtot"}]]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["NODEtot", "NODE"], "*", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"NODE", "'"}], "[", "t", "]"}], "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"ToRules", "/@", 
             RowBox[{
             "SYS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "]"}]}], "/.", 
          RowBox[{
           RowBox[{"x_", "[", "t", "]"}], "\[Rule]", "x"}]}], ",", 
         "NODEtot"}], "]"}]}], "/.", "REFSS"}], "/.", "PARS"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"si", "::", "usage"}], "=", 
   "\"\<Calculate the sensitiity of node NODE to changes in the amount of \
total protein;\[IndentingNewLine]Output: \!\(\*SubscriptBox[\(s\), \
\(NODE\)]\) \[Rule] \!\(\*FractionBox[SubscriptBox[\(NODE\), \(TOT\)], \
SubscriptBox[\(NODE\), \
\(Active\)]]\)\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(NODE\), \
\(ACTIVE\)]\), \(\[PartialD]\*SubscriptBox[\(NODE\), \(TOT\)]\)]\); scaled \
value.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.7922234766671267`*^9, 3.792223594564337*^9}, 
   3.792223636751087*^9, {3.7922238666442537`*^9, 3.7922238818686037`*^9}, {
   3.79222397919086*^9, 3.792224092941552*^9}, {3.792224202008216*^9, 
   3.792224247719995*^9}, {3.792224301483783*^9, 3.7922245715796556`*^9}, {
   3.7922246084703417`*^9, 3.7922246470205393`*^9}, {3.792224708832077*^9, 
   3.792224914523349*^9}, {3.805520034743845*^9, 3.80552020483005*^9}, {
   3.805520235996426*^9, 3.805520277178418*^9}, 3.805533389053164*^9, {
   3.805535365690179*^9, 3.805535497870167*^9}, {3.805535603797222*^9, 
   3.805535655520029*^9}, {3.805535688934907*^9, 3.805535707735688*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"f28fef82-e595-4148-900b-582e1f6bcff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perform perturbations", "Subsection",
 CellChangeTimes->{{3.774257192442572*^9, 
  3.774257202341362*^9}},ExpressionUUID->"98c1e72b-ca77-427c-9119-\
17f7a6e53f0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "perturbPar", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"appendT", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perturbPar", "[", 
   RowBox[{"pars_", ",", " ", "perturb_", ",", " ", "delta_"}], "]"}], ":=", 
  RowBox[{"pars", "/.", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rule", "[", 
       RowBox[{
        RowBox[{"#", "\[Rule]", "val_"}], ",", " ", 
        RowBox[{"#", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "delta"}], ")"}], "*", "val"}]}]}], "]"}], "&"}],
      "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "perturb", "}"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perturbPar", "::", "usage"}], "=", 
  "\"\<perturbPar[pars, perturb, delta] changes the parameter perturb \
(1+delta)perturb.\nperturb can be a signle parameter or a list of parameters.\
\>\""}]}], "Input",
 CellChangeTimes->{{3.77425720719136*^9, 3.77425725866014*^9}, {
  3.774936539334002*^9, 3.774936539480163*^9}, {3.774936627670867*^9, 
  3.7749366686521873`*^9}, {3.774936760634293*^9, 3.774936810336238*^9}, {
  3.774936900663353*^9, 3.774936905702173*^9}},
 CellLabel->
  "In[619]:=",ExpressionUUID->"721fcabb-071b-4123-a443-53689f0228e5"],

Cell[BoxData["\<\"perturbPar[pars, perturb, delta] changes the parameter \
perturb (1+delta)perturb.\\nperturb can be a signle parameter or a list of \
parameters.\"\>"], "Output",
 CellChangeTimes->{
  3.7742572594983053`*^9, 3.774257568751923*^9, 3.774258083306151*^9, 
   3.77460358644536*^9, 3.774604003662117*^9, 3.7746040802870293`*^9, 
   3.7746042113293056`*^9, 3.774604544319316*^9, 3.7746051843662863`*^9, 
   3.774609467254929*^9, 3.7746096407070913`*^9, 3.774612739237678*^9, 
   3.7746142117059517`*^9, 3.774683639745861*^9, 3.774683719754953*^9, 
   3.774683935057061*^9, 3.774688246211268*^9, 3.77468833859299*^9, 
   3.774690622250596*^9, {3.7746937184926643`*^9, 3.774693733278825*^9}, 
   3.774695166564488*^9, 3.774696860688032*^9, 3.774697807488803*^9, 
   3.774866009362502*^9, 3.77486947868088*^9, 3.774870996231559*^9, 
   3.7749350598767157`*^9, 3.7749365403157187`*^9, 3.774936584481061*^9, 
   3.7749366332406893`*^9, 3.774936671631789*^9, 3.774936778909111*^9, 
   3.7749369065635643`*^9, 3.775190356979547*^9, 3.7751909317025833`*^9, 
   3.775191111982181*^9, 3.775191262685132*^9, 3.775193416282058*^9, 
   3.7751941719674683`*^9, 3.775195936149928*^9, 3.775203479755356*^9, 
   3.7752036737770233`*^9, 3.7752056352359962`*^9, 3.775291725444285*^9, 
   3.7752940890499973`*^9, 3.7753005680979424`*^9, {3.775538296043995*^9, 
   3.7755383063461323`*^9}, 3.775550426924515*^9, 3.7757972041008673`*^9, 
   3.7757985966558723`*^9, 3.7758097512019243`*^9, 3.7758102275262537`*^9, 
   3.7758130073990307`*^9, 3.775813085546507*^9, 3.775817806000532*^9, {
   3.775817867159774*^9, 3.775817887558098*^9}, 3.792134359244987*^9, 
   3.792222536791128*^9, 3.8032939802115107`*^9, 3.803294340741794*^9, 
   3.803294560444268*^9, 3.8032949042615557`*^9, 3.805449424230772*^9, 
   3.805449732942007*^9, 3.8055176167130203`*^9, 3.805517946626642*^9, {
   3.805519244512808*^9, 3.8055192637083273`*^9}, 3.805519295529048*^9, 
   3.805520899827017*^9, 3.805533230842663*^9, 3.8055357532554703`*^9, 
   3.805710217656294*^9, 3.806394380303496*^9, 3.806824840415616*^9, 
   3.854790418486616*^9, 3.8547904583541193`*^9, 3.854791256802642*^9, 
   3.855389110020833*^9, 3.855394172423147*^9, 3.855916014491413*^9, 
   3.8565927720918913`*^9, 3.8588337030182133`*^9, 3.864808361308714*^9, 
   3.867739854458029*^9, 3.8677399829398737`*^9, 3.867741262526947*^9, 
   3.867830668238056*^9, 3.8728481045785437`*^9, 3.873879767054305*^9, {
   3.8738822601201963`*^9, 3.873882269812127*^9}, 3.8741205721149673`*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"1f80567d-3981-4062-ae3a-ac294188c202"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maximumActive", "[", 
    RowBox[{"sys_", ",", "pars_", ",", "tval_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "\[Rule]", " ", 
       RowBox[{"FindMaxValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "t", "]"}], "/.", 
            RowBox[{"tsol", "[", 
             RowBox[{"sys", ",", "pars"}], "]"}]}], ",", 
           RowBox[{"t", ">", "0"}], ",", 
           RowBox[{"t", "<", "tval"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"4", ",", "tval"}], "]"}]}], "}"}]}], "]"}]}], ")"}], 
     "&"}], "/@", 
    RowBox[{"sys", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maximumActive", "::", "usage"}], "=", 
  "\"\<maximumActive[sys,pars] returns the maximally active level of each \
node. Can be used to scale the tc-MRA equations\>\"", " "}]}], "Input",
 CellChangeTimes->{{3.7758106352916822`*^9, 3.775810714118639*^9}},
 CellLabel->
  "In[623]:=",ExpressionUUID->"89070ae3-6bbf-4a33-9f33-9153df014b24"],

Cell[BoxData["\<\"maximumActive[sys,pars] returns the maximally active level \
of each node. Can be used to scale the tc-MRA equations\"\>"], "Output",
 CellChangeTimes->{
  3.775810718440982*^9, 3.775813007413673*^9, 3.775813085599105*^9, 
   3.775817806015334*^9, {3.775817867181842*^9, 3.7758178876210117`*^9}, 
   3.7921343618339767`*^9, 3.792222536798868*^9, 3.803293980252001*^9, 
   3.8032943407791843`*^9, 3.8032945604849043`*^9, 3.80329490430091*^9, 
   3.805449424291882*^9, 3.805449732981159*^9, 3.805517616762751*^9, 
   3.805517946697379*^9, {3.805519244554181*^9, 3.805519263762051*^9}, 
   3.805519295570322*^9, 3.805520899884369*^9, 3.805533230850745*^9, 
   3.805535753264409*^9, 3.805710217712104*^9, 3.806394380312214*^9, 
   3.806824840421713*^9, 3.854790418513896*^9, 3.8547904583606*^9, 
   3.85479125682659*^9, 3.8553891100260687`*^9, 3.855394172429517*^9, 
   3.855916014496482*^9, 3.856592772096813*^9, 3.858833703023652*^9, 
   3.864808361314662*^9, 3.8677398544893703`*^9, 3.8677399829613*^9, 
   3.867741262552579*^9, 3.867830668273007*^9, 3.872848104590906*^9, 
   3.873879767075918*^9, {3.873882260150395*^9, 3.873882269834318*^9}, 
   3.874120572123332*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"07a87382-a69e-4e21-adff-aa3ef464fd70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateStochasticProteinAmounts", "[", 
    RowBox[{"pars_", ",", "MU_", ",", "SIGMA_"}], "]"}], ":=", 
   RowBox[{"pars", "/.", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"#", "\[Rule]", "\[Xi]_"}], ",", 
         RowBox[{"#", "\[Rule]", " ", 
          RowBox[{"\[Xi]", "*", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"MU", ",", "SIGMA"}], "]"}], "]"}]}]}]}], "]"}], "&"}], "/@",
       "totalProteins"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generateStochasticProteinAmounts", "::", "usage"}], "=", 
  "\"\<generateStochasticProteinAmounts[pars,\[Mu],\[Sigma]] returns pars \
with total protein abundances multiplied by a ramdon factor sampled \
LogNormalDistribution[\[Mu],\[Sigma]]\>\""}]}], "Input",
 CellChangeTimes->{{3.854790503505199*^9, 3.854790651511569*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"9650946d-9a2d-4249-87a7-49d1526de989"],

Cell[BoxData["\<\"generateStochasticProteinAmounts[pars,\[Mu],\[Sigma]] \
returns pars with total protein abundances multiplied by a ramdon factor \
sampled LogNormalDistribution[\[Mu],\[Sigma]]\"\>"], "Output",
 CellChangeTimes->{
  3.854790654011923*^9, 3.8547912568316317`*^9, 3.855389110047017*^9, 
   3.855394172436178*^9, 3.8559160145153227`*^9, 3.856592772101466*^9, 
   3.8588337030284357`*^9, 3.864808361339532*^9, 3.8677398545001802`*^9, 
   3.867739983005948*^9, 3.867741262561872*^9, 3.867830668292157*^9, 
   3.872848104609378*^9, 3.87387976708724*^9, {3.873882260158827*^9, 
   3.873882269840919*^9}, 3.874120572151753*^9},
 CellLabel->
  "Out[626]=",ExpressionUUID->"1758e228-7991-44bc-92e2-929465e6985c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "pi", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pi", "[", 
   RowBox[{
   "SYS_", ",", " ", "PARS_", ",", "NODE_", ",", "PARTSOPERTURB_", ",", 
    RowBox[{"DELTA_", ":", "0.1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"REFSS", "=", 
       RowBox[{"ss", "[", 
        RowBox[{"SYS", ",", "PARS"}], "]"}]}], ",", "\[IndentingNewLine]", 
      "dIN", ",", " ", "dPARS", ",", "dSS"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dPARS", "=", 
      RowBox[{"perturbPar", "[", 
       RowBox[{"PARS", ",", " ", "PARTSOPERTURB", ",", "DELTA"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"dIN", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"REFSS", ",", 
        RowBox[{"NODE", "\[Rule]", "_"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"dSS", "=", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Steady", " ", "state", " ", "condition", " ", "for", " ", "NODE"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"NODE", "'"}], "[", "t", "]"}], "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ToRules", "/@", 
              RowBox[{
              "SYS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
              "]"}]}], "/.", 
           RowBox[{
            RowBox[{"x_", "[", "t", "]"}], "\[Rule]", "x"}]}], "/.", "dIN"}], 
         "/.", "dPARS"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"NODE", ",", 
          RowBox[{"NODE", "/.", "REFSS"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"NODE", "/.", "dSS"}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"NODE", "/.", "REFSS"}], ")"}]}], 
      RowBox[{"NODE", "/.", "REFSS"}]]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["NODEtot", "NODE"], "*", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"NODE", "'"}], "[", "t", "]"}], "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"ToRules", "/@", 
             RowBox[{
             "SYS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "]"}]}], "/.", 
          RowBox[{
           RowBox[{"x_", "[", "t", "]"}], "\[Rule]", "x"}]}], ",", 
         "NODEtot"}], "]"}]}], "/.", "REFSS"}], "/.", "PARS"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"si", "::", "usage"}], "=", 
   "\"\<Calculate the sensitiity of node NODE to a direct perturbation;\
\[IndentingNewLine]Output: \!\(\*SubscriptBox[\(p\), \(NODE, \
PERTURBATION\)]\) \[Rule] \!\(\*FractionBox[SubscriptBox[\(P\), \(m\)], \
SubscriptBox[\(NODE\), \
\(Active\)]]\)\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(NODE\), \
\(ACTIVE\)]\), \(\[PartialD]\*SubscriptBox[\(p\), \
\(m\)]\)]\)\!\(\*FractionBox[\(\[Laplacian]\*SubscriptBox[\(p\), \(m\)]\), \
SubscriptBox[\(p\), \(m\)]]\); scaled value.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8677583598868628`*^9, 3.867758408759124*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"55b5ae0f-c660-4cba-a942-90739eeb2ace"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Perform the single-cell simulations", "Section",
 CellChangeTimes->{{3.778835773894161*^9, 
  3.778835789351692*^9}},ExpressionUUID->"b1b9003a-cc49-43bd-b011-\
7d10c49c5245"],

Cell[CellGroupData[{

Cell["Model exploration", "Subsection",
 CellChangeTimes->{{3.805524252117078*^9, 
  3.80552426033963*^9}},ExpressionUUID->"7786a800-0401-466b-b972-\
9bca6efddee6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ts", " ", "=", " ", 
   RowBox[{
    RowBox[{"tsol", "[", 
     RowBox[{"sys", ",", " ", "pars", ",", " ", "TMAX"}], "]"}], "//", 
    "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "t", "]"}], "&"}], "/@", "vars"}], "/.", "ts"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Text", "[", "#", "]"}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}], "&"}], "/@", 
      "vars"}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.803294999466432*^9, 3.803295000481344*^9}, 
   3.803369501815761*^9, {3.8033696203770037`*^9, 3.803369676455965*^9}, {
   3.803370471178133*^9, 3.8033704716952*^9}, {3.803370728175802*^9, 
   3.803370752468999*^9}, {3.8033708077053556`*^9, 3.8033708342796297`*^9}, {
   3.805449438092085*^9, 3.8054494383379087`*^9}, {3.805449535177211*^9, 
   3.8054495561342077`*^9}, 3.805449649854373*^9, 3.805449778392365*^9, 
   3.805520666824204*^9},
 CellLabel->
  "In[630]:=",ExpressionUUID->"cca4dad6-73b7-4497-90b1-10d5ff46002d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0Xk81AkfB3CxOXaXHVPjalJpqDSOGQaDX9/vmDGeaSNbOliFsNu+1rHJ
UWiFQruk2HpyJDQoFNHhqHgcqS2PI3Ymq9qWdqv9aS7HUHg8f3xen38+r/c/
n3UHoneEa2poaIQu5f89/eJRF+Nn8ZZrPYvffp2pwqESk6M8aRoYVdQGFtQ8
QKT1HTCR5sHCztoO7WeFaPS7oR5FUAx7b102stSMwXjfaomWtBz8BqIsdXz9
MKTxcfViThW0MJ8vP1Qmwm1GE8c+8GuBp70tgx3phcXumVc+JNeD48Af2YlU
LzR8b5w3K2mAVpWUxvsoxIxLV5Jm2LcgaVltgUomxI++3PCpnDtQ4UWvN30t
xDeNAS4K/l14uPbiyb/6hPjyrk/0pKQDxi8VU/srhFhIMw47vLwLQqq9Xu0u
EqJf1Mu9SnY3WAcMFv95Roi/rvnBQ57TA6b6cQO6yUK8nXaWRvKfwL2q/vnc
HUIUMt49V0gGoVF5zyxTQ4hiX5+9N6KeQvPmJ+Kvpz1x2bGGwR+WD4HIQ0Pp
SHri3eHEHhl7GLa7Xp2dkngiK/OzGxM5Enhy5l+z9XWeSH/HPPGWPwoG7DQj
vWBPnJU4n5NL/oSDsS4x7C4BNrF1g6s2jcGonJ7X2yzA+Byp9f6kMcjro8sj
6wSo9Dja/th8HNi5nbn3CwX47lrLP5Xhr6HDm1CVHBLgaDrhsU/1N7CSh5X+
awXYbseXPTKYgJ6pvWGVqXzs5FeJB8pV0L/u6MpPd3og/WXzXweY89Cfyi9Y
tR1xZURQtQ5fC1+tVtezVhGYxxK2+uzSxdwCnqyulYvPLti3Kyj6mN4MzG6l
E/4sTunTNDXEIgf9+SovRzT+ZexU/sUVmGVrcWlBzcJMP9GWwWkavha2z1kZ
2uNhblnQozQT9Ml98ol2IhMFsrnEqDEz7OWxZjlxmzDV/asQM5fVWOhGHWl4
aoWu1wtu/ti2BoNHX5yP2MbACLXi+EP9dViUmPKdimOBs5spL2x2WWAQdDOy
OGvRvaa29Pz59bgwMLquZpKOCurW4N0dDCR0SngJJmY4nh28O0bHCjkOE3ui
/Y1RJEsQvXbagKXK9T1f0GhIhuoevpmyEeckyjbGW+rS/8aamR2bcDLoan+2
riFSe61O18usMYHjW+Y9Y4D0rDpfJycmOr8JbB2a/wwvbOZSVnxrgwaNUSn7
Tunhr2Y8juqsLb5hjhe1heugK73jjN1vdrhMZJhQuWc5GmiVx4ak2WOriJEq
rNBC89Q17v5WLNTOOE2oP9FEPcvA2zt6WFjyoD96plgDbQnTuoR9bHRSD51w
/XsBYl5QO7dqOKCf5oLm97UfQabK3iW64IBi04BYYngOvOweFIpsHPHxpdK4
XNdZuK9y+zDzX0c8/JJOf1w3A1FM9shAOActcbu897tpIN6HDfnrOeGR3iaa
A2sKPBkm3vrlTuhGabvjYjcJG4//dKTD2Rkp1f7xR3xUYB3ObbMcccY7+YyT
pfFKCL9/8MTNQy6YXpgdF9WlgLbSoTAFjYsn9bnELVMFTF5ZnLG7w0Wz5Ohq
0ww5hFrW6BV6u2Jym5su63M5KKzznRrkrvj88i9nD9nKoEn84dVUlhs++/K6
OiDyPQQI1qObuTvW9d1vNOqegFWRmc227e5Yc8Ro1TfrJ4D2acQN7z0EjqTI
XccvkiDmH0uU+xNI2R9h1VhEAvvYaX5+IIGdxz246QUk+Mjrh6UhBBo3nB60
OkdCxm9Ts6ERBA4WlHQkZZOgLk/xSEwlMH3jfkpgEgkjbvlPK2sIzLn3cIvS
n4SDceJi0XUCm7KjJ8b3kDB9/VY4WU/gxqCSeukuEqgW0hnWbQJXUEUxnV+R
8KXuavq9dgJre7sHK0Qk3B2qDHs6TOCD4A1ZF7kkbDVosomXEvg9p8u1zJkE
qdejaZPfCdQ+Oqau4JAw2fJP1v4/CDzlk3augUWCTZn9tbfvCCx1t+dJNy15
I7z47AkCpXl9OL5hyVu5E+zkBD4LuOylsCThm8y4gdippT3vPwcNLJa89oxC
YzWBZq9mUs3XkpA29+/QljkCe1RupXbmJFAcrzL3zROo0aLVyaOTUBLZMrW4
SOCa2O63fmYk/A+86OJf
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVV3c01/0XFymadmayKyMj27f3q5BKVMpTKqNQUfgSMirjkZaoaJD9eFSI
rKzIqlApsqLHyMhe3+/3Y5T8/P6653XOva9777n3dc+5UqfdLBzZ2djYBJex
sf3fUp211bK3U3a4f+V60K+8gjTFC/vubAsm7RchPNqeBwh+Pi3cdp9syu7J
u59QB6EOXm4eo1gi5bF8z7f1zfA+mNbK0ZZMhhL5Ev8W/o5TuR/SFu88JUdd
pz6Iafdgv9DYlV+GGSToaKLoFZ4+xBpcf/br8kvy/bmM2YXEAfCOb7g/15pD
8m/2ncP4IEITnvnPqOeTbsozI5ptBL8P6jqy7hSQZUPSTLf/RuHBXmfOGCwi
333nU6RvjWMw97jOlOFrohkxVFnFOQkbxxGpifgy0uc1K/U7ZxLOq8uuUZfL
Ceu42PEs8ynIOoT6eaVVEPE/cXMJ7VPoem3uxmytJCfSjqnbH5tGjOAGh4uc
1UT65N8OjrXTOOLadWxa/S3RtLDSGldhYP37p2budu+IyvIAyN5ioE6Svmvy
znvy/VegI893Bq756Gi7ldSQhW8uDYlyTKCBTWl8sJbsiTwQl36WiV9baje5
CH0gb2YNrKaSmXgVfE9w1PAjOXFoTk6yjQl6h9Wq8+6fyHq6ZsaXlSwobpde
HIqvJzXvmgbuqbMwEDbMOPfxM2E5Ged3H2Phi4cVk3H5C5kLrzmi4s+CSkKp
ay5/A2EP5o/qjmbh9gepIY+0BrLDyGbF4XwWBmeu2avvbCSZ7mGCbZ9Y2C07
/N9UayM5xN1UX9TLQspB82PZrl+JQK3SoN4MC8uu5DTSOZuIbGGl/SMuCjbP
hcxUY5vIL9EsHU5hCq+b/d5PqDeTXhsd9nw5CiLsXTuzapvJB6tZz0Y1Ct4q
hq9d7VrIHpGU4RADCk3Hn2qpzLSQ1dM/P00YU1C7vjp77E4rKXFhLdMwpxCe
66b4QraNLHZa4LwlhdGur/9eKGkj6u00u5wTFPau0dmkZPGN7D4Rnix5ikKq
TmzMyOA3EpHT+Pu9I4XljmyC6QHt5Oe5zkNlThRO3XOIcBbqIIf9LCP5XSiU
ldZwb33RQSJtC3lb3SiIDyuFDBl+J34Hk+KEPCj4Cd3786z9O/kqEhTdeZFC
6y6Wzzn3/8gnMYaanheF7W5WDAWuTlJ7qtxbw5vC/SelLj/jO8nTAimfr0t4
8r3UYKpmF+k2+89a+hIFM+a102c+dpEX3pJBCkvYksdr/L5aN4GK3eWhJf8Q
+afp05e7ya5tW41cl3COwbdzFjXdpC/msEbJUr4ei9XyOfw9ZL4/QKzZkwKP
E62X17aH1GorWpQv1bcjwC3RPa2HyKdrlwYu1e/yIMm6gdVDHJzW/SfiTiE2
/auo2s4fJLo3sDV8qd+5Vu0Hk60/yDsjRZsNFygUqnPZPd3SS6wlJfw4nZfm
dadtq41/Lxl5yPO86SyF6V2+5R829hFBf3tFSXsKwy+KR1Id+4kFZ+Pcg2MU
nnHdfmVd0E8WporXly/N64z9iSAB7gFS8313dKsFhV7h30LBGQOkLt90R+N+
Ct//pu2yZvwk3Oc9ilaAQkzn2rUCxoNENnyXYebSfhzT7WytezhInFNM7U10
KTSPX3XR0RsiRyw7dA6oU6i3Kn/MHzRM/PyzcwtlKJRvM5yoXTdGIk3VzCkO
Cldv8RcH2o2RK2Y9X8oWWTDo7w3Rzhkjb069GvH5xUJRTIjov5bjJLux07pi
moUcznfGgbETJD5uSiChm4VGF1lzMcEpYv08VsC5iAW1J2G5FG2KnJP9naub
x8LdGqZw45kpsqC6wX42kwVzmbe9NwqnSAXfFrNdKSzUtTn6Uiemyer220Mc
4SxUGT5NaUhmkLXO/VckbFhQDc8amqlhkMyYxSntJf3GtxWobJxgkP00p8yd
Fiz4uNQUOusziWn18VTp3Ut6fjT0kaOJSX65mZoJK7MQM6zI0uSkCM9eL9eq
GSa4NLfrnVSkyF9la2pqJ5nwCjAICD5EkZN6OvSyISYOCphxf46jSHPOj3se
HUxw7nCVOKc1Q6YCreI5y5buzb2XxjFnZ8l8G19cSwATnR2Ft8rvzJKEM6fX
V1xiwlS+4vNA7iyRNaD9jHZjQr6kwUqDbY48HWtlCtky0dE37fLx8RyR1HFh
B42J3TqaD//UzpPfcf86WVMMiHcVDZxWWiC/jEUP+J5kgI3h/rj20AK5cqD8
zR0LBvpWbN2nemmBSEuJR0TtYeCFSsyLhYoFot/RNeq7nYEdV/08Hx/9Q6oc
96k/W82ArYQ+e33wIpn/rhFTVDCNBuXO8NhRNrQ9NLZYXDkNgQu2aSsNOZB7
NmH1qahJ3FfbXWJuyQVr7oiI+33D2NZhZUI7xwVqolE5oH4YH0Ncvir6cyE8
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
D0yrZK4=
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
BLhp5/tTkeRcMvf3LwX2MRuaF3yo+B83lCb4
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Q6mi2U1nxRy5GNEawcxHR0fvRHBD7hy5f4dTgfcjDeabNl749/ovqWYPueJp
Q8PDJGoHZewvCTBvydfYTIPcOzNZa+F5Ut21UqRMmYaF3S63c3zmSfjCyfur
VtJw/1RUpdb8PLm10aIirzQPkl1P+n00Fom+TLDZPs48rJgMz31tv0hc6kt0
P07nopdFzUorapHUsQimcXzPxd21tLuLLxfJ0cjfzV2ludgSFx2Zu+MfWfsm
8Z2ZWy68pAxWvk9aIl5rjP420HPQrNmZzhhagZC3utXHWS5AcL/XbVYTZtzZ
+KvCsSgTaqxXa+12MOPZxnPOeumZwJX+H3lBzPhW/7BWOTwT+9uDJTSymTH5
X+95Hb1M1JjGnrbrY0ZVrme/YM05RErlheSlroKgJfXf1+4MtLz/oK3esBoS
i8MzrXvS8StQeHvk99X4oVkfuksnHf9W7Qx6PrUa9rPtYWtXpEPNoPvqdikW
jEkuxVXQziDpxqhgZAgLhEIprGdbTkM7Yc3sM15WVJwuYrvidAqZ680rbJ3Z
sPrz+peZF9KwrsPNghrAhkIK+37jsDQ0JAe3qMew4dSvpnsGVmlgac8eZLvM
BrmoaF6OpVTExPVIVA8t5909mHj2p8LvbUKsXjI7Cq4qrD/gmAKmg9lsSjns
GOh605yzPgWXpG9mC95mx/O7mx4z8aagPbzxzngj+7JPfTle8O44tolKfyuS
4IDer4LaRevj0PWvoMqWcqB4d230O6dktHA3vuau5UB1Y9bQkm4ywsp/OC+2
c8BjnwxbqFgybnNyhHz5x4FQ+msdpq5jkHngeinbihPbdr/d+HP/MbAtTf9j
+8EJzjH5PousJHzO1aoa5+XC+JKH4TeWRNBaingOKXJhg0pd/PPhBOzkVvb6
q8+FStvO0x8+Jiz7ndS/lb5cUBb5Xpd7NQHfQzgMBR9xobi53jrFJAG/THvL
dN24YVNXtO2baDxuxXuxVgRzQ3uSlf3xUBz2Pf3iQpK4kcTx8NrPqjgMrWue
tijiBvPgk4f2++IwJl6p47bIjZYeuwTll0fxZyynOOYyDzz9lg4IxsXiibrA
0tIjHnw+E/eeZ0csovek2ya/Webbhza6aMVioSN5+PQkDyqjcvlf9sQgoadc
qFGeFzckr7XObYtB8vtrjt8jedEr2dDksi4apwrjG1eK8WG10g49TbnDsNoQ
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
clM=
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/RTZ+w==
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
Dft/5rrAUA==
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#8"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#9"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVkXs4lHkDhkUlKckh8knLYkuEweT0+j1MsuyyJBVFSbbahJRRQrEOpWhp
c05olhopVJQk6SDTpsZp3tFGPlmHZGgYp7W+vj+e677u67r/e7T3hWwNlJaS
kjr8df+npKvpme55jl1BuSTsyklNqi1f/aQ9HUcqCng1NpNcAtU3+9TpdNK8
uOmJW1grWfVupZzi5jwyrCKrUOUxSNjuXIEMXUR8lO+4bmdNEf87r7jzKSWk
uXnM80OzDH5c9Tl6lnWTcJg6+sGey5Fnm3R9NqqcHDSbeGzvqYKVI2rp04JK
QootY4u7NZB49fqpScY9Utafa0n0tPGPu1XgREo1yXFc7HDHSQ9h0jw38cAD
IsxyU5NqX4+BOz6WY6xaktmT+e8UbyP8Aj9pi/LryI7t5+RqlBn4Rb4uQRJV
T7jfFGzRGzdHd61byLiggazRqOgnTjbIUVXbf2zRMxJV03WOX22HbcHdO78w
npMDL9LfGGywB29tqMNoSiPx63iTfXaZIxJOWG4KefiS/L7C0Td/jRPAlzIc
GWgiI1XFsYUsZ1TFpakOs/4k55tuh4T96YrQd95LDx99TcwY44k6au7YYK4z
P5jfTJ6Gxx5M8vDA2zDvcXHUW6JjbavD7/HEFt2h92OCFiId+myv6JA3OO5u
OyuCW8kt3RGh9QcfLIiubAld1EYcdbKCGX67Udse2ShitBOLud0mP4XugWmS
fMXnFAEZet30B0+8D5pDhvGDrL+IzBM7E81/DmFasOnyqOC/5OrUpPSKnuO4
z1iyt2R9L2lzfCQtOBoOdgpt4Heql5xI9ZUNlWHji8PJ+ldaH4kz+zdPyboI
DJXVfCoO7COD17J3JUedxF+/Ug6+4n5yWKIVzkIM6o1ZoiaFz+TGQoGGUD4e
T1klHH6RmJy/H8BKN02FZveDv/cZzpH67I6KzMosqATt4cqyZBAt2RabsbQQ
6aZbHrp5LYHcsmCTEPViCLNM6scUl+MyVba54AUX5zmn30ivXgkJ80bQYPNt
qP3ee+7SFWVcH3A6Ve5TiaRtznYtElVkevUJNly9i2NWhXua4tRxzXL5yNUV
1dgsmokM7tVA9PYhiwGPB4i19fDXsFyDj16ZOaHxD2F9K/tuzOO1yFFT7+nv
eYSgqbEzL5drg35npqwrV4/pDYpdRl46yFs3x/VlPoFt6c2CjIxvod0VVpq2
qwFjSi57tzfoIrn7m6rnvzzFxwt7t4fJ6iN5Nq47MvUZnEURzn3M72CvE9/N
znuO4YAlx+6eXgfnf30PJdS9+Pq/mnRSw3qII3knG+lGKL3WTy0XGaBgcA2z
8/1LaJ697c5kGqK3ozyCLWlC1gYrReUDRli6QKly/QwPPA17C3HaRqyadl99
RfIK1poNvxl3GEPsyZlSWfwaCjJFx/3jTBBsGndq/YJmaMWutfXWN0WLy44L
7QpvIKe3u2proynSRNc4KUvfYiO1+naELwOpUvuDnv76FmFdSk9dpMwwEOvs
Kb2YD5H4gpdzlhnS5jQuRsTw4WT8IsfZyByCAavwM2I+6sQ2s5PN5rB4sevR
1qMtCDZkdPIDLSBkJuTl97WAGtnf5i3HxK4TP6w8s68VjrrqrsuLvvqKSf35
9lasO5N8omHTJjw3Vsk12dIGg0Crx3qdm7Cs8HhMTV0bAusOxt89aonpU818
vY3teFzQtn9M1Qq2B4bHq/9ox/j1+Unjait85HLlRKs7EKBXKpfjag3j741q
f0zowJjBJWblqDV2xA87Zkx14D5ntmfirA0cREFBBgEC+Gz+FjZatsjOUIsu
5QnwnyNJDzbW24JdHP7lgxUN1aVBFa47KNztkzl0rYAGhxUdOepN4bbWTfmg
IhqM6FTWpd0UBqiFueYcGm6j5e20PwU7s8bTz0toJHZMTAcEUbi3qsz/71s0
popOO0TGUsjkFibpPqLRaXOptbj0ay8d5Z8upHEwnJPnfItCjWNW7s53NCS3
7gUOl1Pg3Ytq0HpPQ0mHnjStojDxXWEH9wONH5as0XxUT6GQe0S9oZ9GbVvx
/tZ2Cnd6H0t/nqDhonDfiE1T+D64Rq5ykgbt1CRRf0dB6Hdujj1NY7zm01m/
DxT8EktKpeZoGBWalA0OUTCMmdFWXihEbac9+8JnCi8byy4KFgnhouJJjEcp
OBXYDOXKCvFzUjj/+ASFQKWhQF15IcbrE3PUpigQ5rKkgWVCxM1kBtTMUAib
k798U0EIRfMbhr5zFDSMhi6GKgqRf6RmYn6egldySYS5khD/A7luM+E=
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#10"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
O6tgQIYG/wE+/ZNJ
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#11"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
g7Je+lTfGBX+A2fCd84=
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#12"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7753845#13"]& ]}, {{{}, {
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 697.8066628066993}], 
           Offset[{0, 0}, {30.6, 697.8066628066993}], 
           Offset[{0., 0.}, {30.9125, 697.8066628066993}], 
           Offset[{0., 0.}, {30.9125, 697.8066628066993}], 
           Offset[{0., 0.}, {31.225, 697.8066628066993}], 
           Offset[{0, 0}, {33.025, 208274.0872356823}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            208274.0872356823}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 208274.0872356823}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            208274.0872356823}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 697.8066628066993}], 
           Offset[{0, 0}, {30.6, 697.8066628066993}], 
           Offset[{0., 0.}, {30.9125, 697.8066628066993}], 
           Offset[{0., 0.}, {30.9125, 697.8066628066993}], 
           Offset[{0., 0.}, {31.225, 697.8066628066993}], 
           Offset[{0, 0}, {33.025, 208274.0872356823}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            208274.0872356823}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 208274.0872356823}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            208274.0872356823}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{105., 12.000000000000023`}, {33.025, 208274.0872356823}], 
           Offset[{105., -11.999999999999977`}, {33.025, 208274.0872356823}], 
           Offset[{10., -11.999999999999998`}, {33.025, 208274.0872356823}], 
           Offset[{10., 12.000000000000002`}, {33.025, 208274.0872356823}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["boundEGFReceptor", TextForm]], "InlineText",
              ExpressionUUID->"6e7fe75e-8315-4dcf-9ed1-8f2352d6507a"],
             Text[$CellContext`boundEGFReceptor]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{57.5, 1.27675647831893*^-14}, {33.025, 208274.0872356823}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 0.8782143178792728}], 
           Offset[{0, 0}, {30.6, 0.8782143178792728}], 
           Offset[{0., 0.}, {30.9125, 0.8782143178792728}], 
           Offset[{0., 0.}, {30.9125, 0.8782143178792728}], 
           Offset[{0., 0.}, {31.225, 0.8782143178792728}], 
           Offset[{0, 0}, {33.025, 15909.67976419385}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            15909.67976419385}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 15909.67976419385}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            15909.67976419385}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 0.8782143178792728}], 
           Offset[{0, 0}, {30.6, 0.8782143178792728}], 
           Offset[{0., 0.}, {30.9125, 0.8782143178792728}], 
           Offset[{0., 0.}, {30.9125, 0.8782143178792728}], 
           Offset[{0., 0.}, {31.225, 0.8782143178792728}], 
           Offset[{0, 0}, {33.025, 15909.67976419385}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            15909.67976419385}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 15909.67976419385}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            15909.67976419385}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{95., 12.000000000000021`}, {33.025, 15909.67976419385}], 
           Offset[{95., -11.999999999999979`}, {33.025, 15909.67976419385}], 
           Offset[{10., -11.999999999999996`}, {33.025, 15909.67976419385}], 
           Offset[{10., 12.000000000000004`}, {33.025, 15909.67976419385}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["freeEGFReceptor", TextForm]], "InlineText",
              ExpressionUUID->"b43222a7-cf40-471d-84db-84db5a58ae7c"],
             Text[$CellContext`freeEGFReceptor]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{52.5, 1.1657341758564144*^-14}, {33.025, 15909.67976419385}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 259.10000382023856`}], 
           Offset[{0, 0}, {30.6, 259.10000382023856`}], 
           Offset[{0., 0.}, {30.9125, 259.10000382023856`}], 
           Offset[{0., 0.}, {30.9125, 259.10000382023856`}], 
           Offset[{0., 0.}, {31.225, 259.10000382023856`}], 
           Offset[{0, 0}, {33.025, 167771.80170703717`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            167771.80170703717`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            167771.80170703717`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            167771.80170703717`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 259.10000382023856`}], 
           Offset[{0, 0}, {30.6, 259.10000382023856`}], 
           Offset[{0., 0.}, {30.9125, 259.10000382023856`}], 
           Offset[{0., 0.}, {30.9125, 259.10000382023856`}], 
           Offset[{0., 0.}, {31.225, 259.10000382023856`}], 
           Offset[{0, 0}, {33.025, 167771.80170703717`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            167771.80170703717`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            167771.80170703717`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            167771.80170703717`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{60., 12.000000000000012`}, {33.025, 167771.80170703717`}], 
           Offset[{60., -11.999999999999988`}, {33.025, 167771.80170703717`}],
            Offset[{10.000000000000004`, -11.999999999999998`}, {33.025, 
            167771.80170703717`}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {33.025, 
            167771.80170703717`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["SosActive", TextForm]], "InlineText",ExpressionUUID->
              "c32b4143-b03e-4a86-8754-c551eeac7d4e"],
             Text[$CellContext`SosActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{35., 7.771561172376096*^-15}, {33.025, 167771.80170703717}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 51.01537478323439}], 
           Offset[{0, 0}, {30.6, 51.01537478323439}], 
           Offset[{0., 0.}, {30.9125, 51.01537478323439}], 
           Offset[{0., 0.}, {30.9125, 51.01537478323439}], 
           Offset[{0., 0.}, {31.225, 51.01537478323439}], 
           Offset[{0, 0}, {33.025, 127402.74657900968`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            127402.74657900968`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            127402.74657900968`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            127402.74657900968`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 51.01537478323439}], 
           Offset[{0, 0}, {30.6, 51.01537478323439}], 
           Offset[{0., 0.}, {30.9125, 51.01537478323439}], 
           Offset[{0., 0.}, {30.9125, 51.01537478323439}], 
           Offset[{0., 0.}, {31.225, 51.01537478323439}], 
           Offset[{0, 0}, {33.025, 127402.74657900968`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            127402.74657900968`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            127402.74657900968`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            127402.74657900968`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{61., 12.000000000000012`}, {33.025, 127402.74657900968`}], 
           Offset[{61., -11.999999999999988`}, {33.025, 127402.74657900968`}],
            Offset[{10.000000000000004`, -11.999999999999998`}, {33.025, 
            127402.74657900968`}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {33.025, 
            127402.74657900968`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["RasActive", TextForm]], "InlineText",ExpressionUUID->
              "8bc4c9fb-052c-4a14-8cb6-3f16f84fda47"],
             Text[$CellContext`RasActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{35.5, 7.882583474838611*^-15}, {33.025, 127402.74657900968}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 1.70010576898339}], 
           Offset[{0, 0}, {30.6, 1.70010576898339}], 
           Offset[{0., 0.}, {30.9125, 1.70010576898339}], 
           Offset[{0., 0.}, {30.9125, 1.70010576898339}], 
           Offset[{0., 0.}, {31.225, 1.70010576898339}], 
           Offset[{0, 0}, {33.025, 46876.56823300308}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            46876.56823300308}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 46876.56823300308}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            46876.56823300308}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 1.70010576898339}], 
           Offset[{0, 0}, {30.6, 1.70010576898339}], 
           Offset[{0., 0.}, {30.9125, 1.70010576898339}], 
           Offset[{0., 0.}, {30.9125, 1.70010576898339}], 
           Offset[{0., 0.}, {31.225, 1.70010576898339}], 
           Offset[{0, 0}, {33.025, 46876.56823300308}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            46876.56823300308}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 46876.56823300308}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            46876.56823300308}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {33.025, 46876.56823300308}], 
           Offset[{64., -11.999999999999986`}, {33.025, 46876.56823300308}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {33.025, 
            46876.56823300308}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {33.025, 
            46876.56823300308}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["Raf1Active", TextForm]], "InlineText",ExpressionUUID->
              "327b9ee7-bc0a-4fb3-af91-c657d49d999b"],
             Text[$CellContext`Raf1Active]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, {33.025, 46876.56823300308}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 1248.2817277643853`}], 
           Offset[{0, 0}, {30.6, 1248.2817277643853`}], 
           Offset[{0., 0.}, {30.9125, 1248.2817277643853`}], 
           Offset[{0., 0.}, {30.9125, 1248.2817277643853`}], 
           Offset[{0., 0.}, {31.225, 1248.2817277643853`}], 
           Offset[{0, 0}, {33.025, 289089.786162817}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 289089.786162817}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 289089.786162817}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            289089.786162817}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 1248.2817277643853`}], 
           Offset[{0, 0}, {30.6, 1248.2817277643853`}], 
           Offset[{0., 0.}, {30.9125, 1248.2817277643853`}], 
           Offset[{0., 0.}, {30.9125, 1248.2817277643853`}], 
           Offset[{0., 0.}, {31.225, 1248.2817277643853`}], 
           Offset[{0, 0}, {33.025, 289089.786162817}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 289089.786162817}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 289089.786162817}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            289089.786162817}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{62., 12.000000000000014`}, {33.025, 289089.786162817}], 
           Offset[{62., -11.999999999999986`}, {33.025, 289089.786162817}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {33.025, 
            289089.786162817}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {33.025, 
            289089.786162817}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["MekActive", TextForm]], "InlineText",ExpressionUUID->
              "a21af862-fbb2-40f1-a7c0-cf692f74f9f5"],
             Text[$CellContext`MekActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{36., 7.993605777301127*^-15}, {33.025, 289089.786162817}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 24702.897002174832`}], 
           Offset[{0, 0}, {30.6, 24702.897002174832`}], 
           Offset[{0., 0.}, {30.9125, 24702.897002174832`}], 
           Offset[{0., 0.}, {30.9125, 24702.897002174832`}], 
           Offset[{0., 0.}, {31.225, 24702.897002174832`}], 
           Offset[{0, 0}, {33.025, 423386.0594101675}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            423386.0594101675}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 423386.0594101675}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            423386.0594101675}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 24702.897002174832`}], 
           Offset[{0, 0}, {30.6, 24702.897002174832`}], 
           Offset[{0., 0.}, {30.9125, 24702.897002174832`}], 
           Offset[{0., 0.}, {30.9125, 24702.897002174832`}], 
           Offset[{0., 0.}, {31.225, 24702.897002174832`}], 
           Offset[{0, 0}, {33.025, 423386.0594101675}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            423386.0594101675}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 423386.0594101675}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            423386.0594101675}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{58., 12.000000000000012`}, {33.025, 423386.0594101675}], 
           Offset[{58., -11.999999999999988`}, {33.025, 423386.0594101675}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {33.025, 
            423386.0594101675}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {33.025, 
            423386.0594101675}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["ErkActive", TextForm]], "InlineText",ExpressionUUID->
              "e095c4a8-5185-4626-82fe-803e5fa0159e"],
             Text[$CellContext`ErkActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{34., 7.549516567451064*^-15}, {33.025, 423386.0594101675}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 18732.061443142105`}], 
           Offset[{0, 0}, {30.6, 18732.061443142105`}], 
           Offset[{0., 0.}, {30.9125, 18732.061443142105`}], 
           Offset[{0., 0.}, {30.9125, 18732.061443142105`}], 
           Offset[{0., 0.}, {31.225, 18732.061443142105`}], 
           Offset[{0, 0}, {33.025, 379687.8605734122}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            379687.8605734122}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 379687.8605734122}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            379687.8605734122}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 18732.061443142105`}], 
           Offset[{0, 0}, {30.6, 18732.061443142105`}], 
           Offset[{0., 0.}, {30.9125, 18732.061443142105`}], 
           Offset[{0., 0.}, {30.9125, 18732.061443142105`}], 
           Offset[{0., 0.}, {31.225, 18732.061443142105`}], 
           Offset[{0, 0}, {33.025, 379687.8605734122}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            379687.8605734122}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 379687.8605734122}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            379687.8605734122}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{78., 12.000000000000018`}, {33.025, 379687.8605734122}], 
           Offset[{78., -11.999999999999982`}, {33.025, 379687.8605734122}], 
           Offset[{10., -11.999999999999996`}, {33.025, 379687.8605734122}], 
           Offset[{10., 12.000000000000004`}, {33.025, 379687.8605734122}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["P90RskActive", TextForm]], "InlineText",ExpressionUUID->
              "3be1510d-fd95-42aa-abc5-210aa00f6b25"],
             Text[$CellContext`P90RskActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{44., 9.769962616701378*^-15}, {33.025, 379687.8605734122}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 114041.81866676336`}], 
           Offset[{0, 0}, {30.6, 114041.81866676336`}], 
           Offset[{0., 0.}, {30.9125, 114041.81866676336`}], 
           Offset[{0., 0.}, {30.9125, 114041.81866676336`}], 
           Offset[{0., 0.}, {31.225, 114041.81866676336`}], 
           Offset[{0, 0}, {33.025, 555494.872865061}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 555494.872865061}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 555494.872865061}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            555494.872865061}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 114041.81866676336`}], 
           Offset[{0, 0}, {30.6, 114041.81866676336`}], 
           Offset[{0., 0.}, {30.9125, 114041.81866676336`}], 
           Offset[{0., 0.}, {30.9125, 114041.81866676336`}], 
           Offset[{0., 0.}, {31.225, 114041.81866676336`}], 
           Offset[{0, 0}, {33.025, 555494.872865061}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 555494.872865061}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 555494.872865061}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            555494.872865061}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{65., 12.000000000000014`}, {33.025, 555494.872865061}], 
           Offset[{65., -11.999999999999986`}, {33.025, 555494.872865061}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {33.025, 
            555494.872865061}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {33.025, 
            555494.872865061}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["PI3KActive", TextForm]], "InlineText",ExpressionUUID->
              "1564ee68-45e4-4a52-afca-08d4d20702fc"],
             Text[$CellContext`PI3KActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37.5, 8.326672684688674*^-15}, {33.025, 555494.872865061}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 25672.81980312833}], 
           Offset[{0, 0}, {30.6, 25672.81980312833}], 
           Offset[{0., 0.}, {30.9125, 25672.81980312833}], 
           Offset[{0., 0.}, {30.9125, 25672.81980312833}], 
           Offset[{0., 0.}, {31.225, 25672.81980312833}], 
           Offset[{0, 0}, {33.025, 464195.28291679866`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            464195.28291679866`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            464195.28291679866`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            464195.28291679866`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 25672.81980312833}], 
           Offset[{0, 0}, {30.6, 25672.81980312833}], 
           Offset[{0., 0.}, {30.9125, 25672.81980312833}], 
           Offset[{0., 0.}, {30.9125, 25672.81980312833}], 
           Offset[{0., 0.}, {31.225, 25672.81980312833}], 
           Offset[{0, 0}, {33.025, 464195.28291679866`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            464195.28291679866`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            464195.28291679866`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            464195.28291679866`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{58., 12.000000000000012`}, {33.025, 464195.28291679866`}], 
           Offset[{58., -11.999999999999988`}, {33.025, 464195.28291679866`}],
            Offset[{10.000000000000004`, -11.999999999999998`}, {33.025, 
            464195.28291679866`}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {33.025, 
            464195.28291679866`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["AktActive", TextForm]], "InlineText",ExpressionUUID->
              "d3217c79-8667-4ff1-a420-391215f1c0c8"],
             Text[$CellContext`AktActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{34., 7.549516567451064*^-15}, {33.025, 464195.28291679866}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 3721.932927083764}], 
           Offset[{0, 0}, {30.6, 3721.932927083764}], 
           Offset[{0., 0.}, {30.9125, 3721.932927083764}], 
           Offset[{0., 0.}, {30.9125, 3721.932927083764}], 
           Offset[{0., 0.}, {31.225, 3721.932927083764}], 
           Offset[{0, 0}, {33.025, 330767.6608123383}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            330767.6608123383}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 330767.6608123383}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            330767.6608123383}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 3721.932927083764}], 
           Offset[{0, 0}, {30.6, 3721.932927083764}], 
           Offset[{0., 0.}, {30.9125, 3721.932927083764}], 
           Offset[{0., 0.}, {30.9125, 3721.932927083764}], 
           Offset[{0., 0.}, {31.225, 3721.932927083764}], 
           Offset[{0, 0}, {33.025, 330767.6608123383}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            330767.6608123383}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 330767.6608123383}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            330767.6608123383}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {33.025, 330767.6608123383}], 
           Offset[{64., -11.999999999999986`}, {33.025, 330767.6608123383}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {33.025, 
            330767.6608123383}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {33.025, 
            330767.6608123383}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["C3GActive", TextForm]], "InlineText",ExpressionUUID->
              "963d0bf5-69e1-450b-88b8-6c0ed3840efd"],
             Text[$CellContext`C3GActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, {33.025, 330767.6608123383}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 732.2289615931138}], 
           Offset[{0, 0}, {30.6, 732.2289615931138}], 
           Offset[{0., 0.}, {30.9125, 732.2289615931138}], 
           Offset[{0., 0.}, {30.9125, 732.2289615931138}], 
           Offset[{0., 0.}, {31.225, 732.2289615931138}], 
           Offset[{0, 0}, {33.025, 248542.81761664603`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            248542.81761664603`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            248542.81761664603`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            248542.81761664603`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 732.2289615931138}], 
           Offset[{0, 0}, {30.6, 732.2289615931138}], 
           Offset[{0., 0.}, {30.9125, 732.2289615931138}], 
           Offset[{0., 0.}, {30.9125, 732.2289615931138}], 
           Offset[{0., 0.}, {31.225, 732.2289615931138}], 
           Offset[{0, 0}, {33.025, 248542.81761664603`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            248542.81761664603`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            248542.81761664603`}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 
            248542.81761664603`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{67., 12.000000000000016`}, {33.025, 248542.81761664603`}], 
           Offset[{67., -11.999999999999984`}, {33.025, 248542.81761664603`}],
            Offset[{10.000000000000004`, -11.999999999999998`}, {33.025, 
            248542.81761664603`}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {33.025, 
            248542.81761664603`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["Rap1Active", TextForm]], "InlineText",ExpressionUUID->
              "1a6e1d08-0124-4975-8c9f-2e9f591400b8"],
             Text[$CellContext`Rap1Active]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{38.5, 8.548717289613705*^-15}, {33.025, 248542.81761664603}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 33.027979201112565`}], 
           Offset[{0, 0}, {30.6, 33.027979201112565`}], 
           Offset[{0., 0.}, {30.9125, 33.027979201112565`}], 
           Offset[{0., 0.}, {30.9125, 33.027979201112565`}], 
           Offset[{0., 0.}, {31.225, 33.027979201112565`}], 
           Offset[{0, 0}, {33.025, 87143.51069295825}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            87143.51069295825}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 87143.51069295825}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            87143.51069295825}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {30.6, 33.027979201112565`}], 
           Offset[{0, 0}, {30.6, 33.027979201112565`}], 
           Offset[{0., 0.}, {30.9125, 33.027979201112565`}], 
           Offset[{0., 0.}, {30.9125, 33.027979201112565`}], 
           Offset[{0., 0.}, {31.225, 33.027979201112565`}], 
           Offset[{0, 0}, {33.025, 87143.51069295825}], 
           Offset[{5., 1.1102230246251565`*^-15}, {33.025, 
            87143.51069295825}], 
           Offset[{10., 2.220446049250313*^-15}, {33.025, 87143.51069295825}],
            Offset[{10., 2.220446049250313*^-15}, {33.025, 
            87143.51069295825}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {33.025, 87143.51069295825}], 
           Offset[{64., -11.999999999999986`}, {33.025, 87143.51069295825}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {33.025, 
            87143.51069295825}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {33.025, 
            87143.51069295825}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["bRafActive", TextForm]], "InlineText",ExpressionUUID->
              "de4af012-54ac-489b-86a2-139257730d01"],
             Text[$CellContext`bRafActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, {33.025, 87143.51069295825}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 137.8}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {1.660339536761178*^-38, 551785.2506930712}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8677398999598303`*^9, 3.8677399271679068`*^9}, 
   3.867739990630151*^9, 3.8677412673451843`*^9, 3.867830673316201*^9, 
   3.874120626599527*^9},
 CellLabel->
  "Out[631]=",ExpressionUUID->"6a6067ab-cad9-4702-9f96-1cbd42cb9c06"]
}, Open  ]],

Cell["\<\
Most of the dynamics occurs in the first 30/60 minutes, so we' ll focus on \
that timeframe. The accumulation of active Akt might be a typo in the Orton \
model (e.g. too low degradation rate?) but it is present in the original \
model, so we keep it.  

Note that the fraction of Active protein in steady state is very low for most \
proteins.\
\>", "Text",
 CellChangeTimes->{{3.805449639524042*^9, 3.8054496655477448`*^9}, {
  3.8055243096470757`*^9, 
  3.8055243478003674`*^9}},ExpressionUUID->"9df1116f-1d28-498b-9c51-\
e272ef71ae7d"],

Cell[CellGroupData[{

Cell[BoxData["totalProteinContraints"], "Input",
 CellChangeTimes->{{3.805535794109249*^9, 3.805535803521688*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"f3d0f751-7ba8-4232-a694-dc5806316019"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SosInactive", "\[Rule]", 
    RowBox[{"SosTot", "-", 
     RowBox[{"SosActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"RasInactive", "\[Rule]", 
    RowBox[{"RasTot", "-", 
     RowBox[{"RasActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"Raf1Inactive", "\[Rule]", 
    RowBox[{"Raf1Tot", "-", 
     RowBox[{"Raf1Active", "[", "t", "]"}]}]}], ",", 
   RowBox[{"MekInactive", "\[Rule]", 
    RowBox[{"MekTot", "-", 
     RowBox[{"MekActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"ErkInactive", "\[Rule]", 
    RowBox[{"ErkTot", "-", 
     RowBox[{"ErkActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"P90RskInactive", "\[Rule]", 
    RowBox[{"P90RskTot", "-", 
     RowBox[{"P90RskActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"PI3KInactive", "\[Rule]", 
    RowBox[{"PI3KTot", "-", 
     RowBox[{"PI3KActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"AktInactive", "\[Rule]", 
    RowBox[{"AktTot", "-", 
     RowBox[{"AktActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"C3GInactive", "\[Rule]", 
    RowBox[{"C3GTot", "-", 
     RowBox[{"C3GActive", "[", "t", "]"}]}]}], ",", 
   RowBox[{"Rap1Inactive", "\[Rule]", 
    RowBox[{"Rap1Tot", "-", 
     RowBox[{"Rap1Active", "[", "t", "]"}]}]}], ",", 
   RowBox[{"bRafInactive", "\[Rule]", 
    RowBox[{"bRafTot", "-", 
     RowBox[{"bRafActive", "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.805535795030183*^9, 3.805535803779601*^9}, 
   3.8057102533789177`*^9, 3.8063943857213306`*^9, 3.867739927391642*^9, 
   3.8677399909126587`*^9, 3.867741267472377*^9, 3.867830673445664*^9, 
   3.874120626666391*^9},
 CellLabel->
  "Out[632]=",ExpressionUUID->"a5006ecc-7066-4b33-9d9a-7c906a973c24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"vars", "\[LeftDoubleBracket]", 
     RowBox[{"3", ";;", 
      RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"ss", "[", 
       RowBox[{"sys", ",", "pars"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"3", ";;", 
        RowBox[{"-", "1"}]}], ",", "2"}], "\[RightDoubleBracket]"}], 
     RowBox[{"totalProteins", "/.", "pars"}]]}], "}"}], "//", 
  "Thread"}]], "Input",
 CellChangeTimes->{{3.805519330926353*^9, 3.8055193337340193`*^9}, {
   3.805519441130892*^9, 3.805519489564823*^9}, 3.805524279283243*^9},
 CellLabel->
  "In[633]:=",ExpressionUUID->"50d447ea-ad81-4e56-83ec-9f305671fac2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"SosActive", ",", "0.004235070728930253`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RasActive", ",", "0.0008334477199879624`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Raf1Active", ",", "0.00002047296919021706`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"MekActive", ",", "0.0014895286402650666`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ErkActive", ",", "0.017807349984237646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"P90RskActive", ",", "0.049460509234979654`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"PI3KActive", ",", "0.8395702710729025`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"AktActive", ",", "0.6199272245031094`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"C3GActive", ",", "0.02190735048531199`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Rap1Active", ",", "0.004309078389404582`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"bRafActive", ",", "0.0002144718557891272`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.805519334103747*^9, 3.805519350822995*^9}, {
   3.80551944620597*^9, 3.805519489835187*^9}, 3.8055242645877657`*^9, 
   3.8055243528505774`*^9, {3.805535740627503*^9, 3.805535758127445*^9}, 
   3.8055358295552473`*^9, 3.805710253440957*^9, 3.8063943858033257`*^9, 
   3.8677399274447947`*^9, 3.867739990970396*^9, 3.867741267502224*^9, 
   3.867830673481207*^9, 3.874120626697877*^9},
 CellLabel->
  "Out[633]=",ExpressionUUID->"30b2654a-ded6-4781-b394-98e9201f24f5"]
}, Open  ]],

Cell["\<\
On the other hand, at the transient peak, most proteins are for a \
considerable part in their Active state\
\>", "Text",
 CellChangeTimes->{{3.805524884739826*^9, 
  3.805524926967589*^9}},ExpressionUUID->"ae555601-8a08-432c-8520-\
feb1f46c7f82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vars", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"FindMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "t", "]"}], "/.", "ts"}], ",", 
             RowBox[{"t", ">", "0"}], ",", 
             RowBox[{"t", "<", "TMAX"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "30"}], "}"}]}], "]"}], "&"}], "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;", 
          RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
      RowBox[{"totalProteins", "/.", "pars"}]]}], "}"}], "//", "Thread"}], "//",
   "Quiet"}]], "Input",
 CellChangeTimes->{{3.805524481876089*^9, 3.8055245072709227`*^9}, {
  3.805524540817678*^9, 3.805524657700551*^9}, {3.805524723945057*^9, 
  3.805524877559203*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"25a1af78-4bf0-44eb-a1f7-36050fdd4758"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"SosActive", ",", "0.7668239039272869`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RasActive", ",", "0.14694638265842677`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Raf1Active", ",", "0.015083021685480466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"MekActive", ",", "0.5418615120037605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ErkActive", ",", "0.9196421059490232`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"P90RskActive", ",", "0.15655693672996984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"PI3KActive", ",", "0.9981499490573846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"AktActive", ",", "0.6199248433262955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"C3GActive", ",", "0.7671087369618755`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Rap1Active", ",", "0.14699952278399062`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"bRafActive", ",", "0.12153055134408876`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.805524804739049*^9, 3.805524877974453*^9}, 
   3.805535832292469*^9, 3.805710253706685*^9, 3.8063943863252287`*^9, 
   3.867739927936274*^9, 3.86773999126167*^9, 3.867741267783132*^9, 
   3.867830673776064*^9, 3.874120626895463*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"ea55bf35-5a1c-41ef-b41e-6ecb7d333138"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate ground truth", "Subsection",
 CellChangeTimes->{
  3.778845822425968*^9, {3.792134256137236*^9, 
   3.7921342729608173`*^9}},ExpressionUUID->"b11acb72-1b4b-45d7-be92-\
b9082bf9ad49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rloc", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "pars", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{"rloc", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7788458264564943`*^9, 3.778845829867251*^9}, {
  3.792134137916449*^9, 3.792134140615864*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"6537e9ba-67c4-4e0f-a852-9ff3303f5c15"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0", "0", 
      RowBox[{"-", "0.8070518419426879`"}], "0", "0", "0", "0", "0"},
     {"0.9998774019578067`", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1.0013925331456877`", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", 
      RowBox[{"-", "0.3987184142289482`"}], "0", "0", "0"},
     {"0", "0", "0.08717387716936029`", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0.9132208908673157`"},
     {"0", "0", "0", "0.9916778180122657`", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0.956689667370709`", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
     {"0", "0.00017625871707822256`", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0.39608093354256296`", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0.9993602219089815`", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0.16598591229270446`", "0", "0", "0", "0", "0", "0", "0", 
      "0.8581777862370672`", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7788458332705708`*^9, {3.779015345189871*^9, 3.779015358525372*^9}, 
   3.779461222633794*^9, 3.792134143323745*^9, 3.792222543936777*^9, {
   3.803293974678451*^9, 3.803293983628214*^9}, 3.8032943441620502`*^9, 
   3.805449678539679*^9, 3.805449792431737*^9, 3.805517625843753*^9, {
   3.80551794034273*^9, 3.805517951885871*^9}, 3.8055192370654716`*^9, 
   3.805519271904965*^9, 3.80551930257866*^9, 3.8055195183052464`*^9, 
   3.805520519050095*^9, 3.805520606454056*^9, 3.805520916434843*^9, 
   3.805524963345998*^9, 3.8055358360022783`*^9, 3.8057102585165787`*^9, 
   3.806394388435004*^9, {3.858833682693018*^9, 3.858833709026898*^9}, 
   3.864808369081913*^9, 3.8677399969169188`*^9, 3.867741274784189*^9, 
   3.867830677151931*^9, 3.874120629081767*^9},
 CellLabel->
  "Out[636]//MatrixForm=",ExpressionUUID->"9dd80535-6753-4d37-b5cd-\
cbe993c9f110"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rDS", " ", "=", " ", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToString", "/@", 
            RowBox[{"vars", "\[LeftDoubleBracket]", 
             RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
           RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], 
         ",", "#"}], "]"}], "&"}], "/@", "rloc"}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/rloc-true.tsv\>\"", ",", 
   "\[IndentingNewLine]", "rDS"}], "]"}]}], "Input",
 CellChangeTimes->{{3.779015391645734*^9, 3.779015433114097*^9}, {
   3.7790154696344147`*^9, 3.7790154715775957`*^9}, {3.779016897064324*^9, 
   3.7790169593802*^9}, 3.805449830220989*^9, {3.805535843183301*^9, 
   3.805535844606086*^9}, {3.867831678863562*^9, 3.867831685980115*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"3ac8bdd8-c836-484f-bc94-7dd01a0cb239"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Sos" -> <|
        "Sos" -> -1, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, 
         "P90Rsk" -> -0.8070518419426879, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0,
          "Rap1" -> 0, "bRaf" -> 0|>, 
       "Ras" -> <|
        "Sos" -> 0.9998774019578067, "Ras" -> -1, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Raf1" -> <|
        "Sos" -> 0, "Ras" -> 1.0013925331456877`, "Raf1" -> -1, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> -0.3987184142289482,
          "C3G" -> 0, "Rap1" -> 0, "bRaf" -> 0|>, 
       "Mek" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0.08717387716936029, "Mek" -> -1, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0.9132208908673157|>, 
       "Erk" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0.9916778180122657, 
         "Erk" -> -1, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "P90Rsk" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 
         0.956689667370709, "P90Rsk" -> -1, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 
         0, "Rap1" -> 0, "bRaf" -> 0|>, 
       "PI3K" -> <|
        "Sos" -> 0, "Ras" -> 0.00017625871707822256`, "Raf1" -> 0, "Mek" -> 0,
          "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> -1, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Akt" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0.39608093354256296`, "Akt" -> -1, "C3G" -> 0, "Rap1" -> 
         0, "bRaf" -> 0|>, 
       "C3G" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> -1, "Rap1" -> 0, "bRaf" -> 0|>, 
       "Rap1" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0.9993602219089815, 
         "Rap1" -> -1, "bRaf" -> 0|>, 
       "bRaf" -> <|
        "Sos" -> 0, "Ras" -> 0.16598591229270446`, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0.8581777862370672, "bRaf" -> -1|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[15]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[15]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Path" -> {}, "DisplayedRowCount" -> 
     11, "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, 
     "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sos"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sos"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Ras"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Ras"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Raf1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Raf1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mek"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mek"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Erk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Erk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "P90Rsk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "P90Rsk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PI3K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PI3K"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Akt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Akt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C3G"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C3G"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rap1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rap1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.807052"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ras"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999877"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raf1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00139"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.398718"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mek"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0871739"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Erk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.991678"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P90Rsk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.95669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PI3K"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000176259"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Akt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.396081"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C3G"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Rap1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["bRaf", 
                  Style[
                  "bRaf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bRaf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.165986"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.858178"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{773., {189.134033203125, 194.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{773., {189.134033203125, 194.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.779015419919606*^9, 3.7790154340125923`*^9}, 
   3.779015472602995*^9, {3.779016916460848*^9, 3.779016960690318*^9}, 
   3.779461232070685*^9, 3.792134148682335*^9, 3.803294169448946*^9, 
   3.805449831217766*^9, 3.805519525600965*^9, 3.805520614952973*^9, 
   3.805535844983801*^9, 3.80571025868709*^9, 3.806394388922275*^9, 
   3.864808369800664*^9, 3.867739997724963*^9, 3.867741275271461*^9, 
   3.867830677481188*^9, 3.874120629217711*^9},
 CellLabel->
  "Out[637]=",ExpressionUUID->"fcc21fbc-daf6-40dc-8364-1c4e26714b4b"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/rloc-true.tsv\"\>"], "Output",
 CellChangeTimes->{{3.779015419919606*^9, 3.7790154340125923`*^9}, 
   3.779015472602995*^9, {3.779016916460848*^9, 3.779016960690318*^9}, 
   3.779461232070685*^9, 3.792134148682335*^9, 3.803294169448946*^9, 
   3.805449831217766*^9, 3.805519525600965*^9, 3.805520614952973*^9, 
   3.805535844983801*^9, 3.80571025868709*^9, 3.806394388922275*^9, 
   3.864808369800664*^9, 3.867739997724963*^9, 3.867741275271461*^9, 
   3.867830677481188*^9, 3.874120629556176*^9},
 CellLabel->
  "Out[638]=",ExpressionUUID->"0f2ea14a-9675-4275-96de-3e9ff8daa3f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sDS", " ", "=", " ", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToString", "/@", 
             RowBox[{"vars", "\[LeftDoubleBracket]", 
              RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
            RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], 
          ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"Length", "[", 
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "]"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"si", "[", 
          RowBox[{"sys", ",", " ", "pars", ",", " ", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/stot-true.tsv\>\"", ",", 
   "\[IndentingNewLine]", "sDS"}], "]"}]}], "Input",
 CellChangeTimes->{{3.779613214880238*^9, 3.779613254444668*^9}, 
   3.792221767965761*^9, 3.7922249951450233`*^9, 3.792225081811797*^9, 
   3.792225119792047*^9, {3.80552030501513*^9, 3.805520305391797*^9}, 
   3.805520371386484*^9, 3.80552054033727*^9, {3.805535864755047*^9, 
   3.8055358666130943`*^9}, 3.867831694897669*^9},
 CellLabel->
  "In[639]:=",ExpressionUUID->"16368f94-1fa2-46a2-b7cc-29712ad1845a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Sos" -> <|
        "Sos" -> 0.9812542885687751, "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Ras" -> <|
        "Sos" -> 0., "Ras" -> 0.23067834781072555`, "Raf1" -> 0., "Mek" -> 0.,
          "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0.,
          "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Raf1" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0.3426013851126338, "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Mek" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0.8899603228395728, 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Erk" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 
         0.636766339707811, "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "P90Rsk" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0.8755443824185987, "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "PI3K" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0.9835595848636581, "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Akt" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0.9741507410451619, "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "C3G" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0.9814683181430985, "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Rap1" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., "Rap1" -> 
         0.23198446799693204`, "bRaf" -> 0.|>, 
       "bRaf" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., "Rap1" -> 0.,
          "bRaf" -> 0.35050741524306905`|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Path" -> {}, "DisplayedRowCount" -> 
     11, "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, 
     "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sos"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sos"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Ras"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Ras"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Raf1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Raf1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mek"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mek"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Erk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Erk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "P90Rsk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "P90Rsk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PI3K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PI3K"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Akt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Akt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C3G"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C3G"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rap1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rap1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.981254"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ras"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.230678"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raf1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.342601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mek"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.88996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Erk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.636766"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P90Rsk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.875544"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PI3K"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.98356"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Akt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.974151"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C3G"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.981468"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Rap1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.231984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["bRaf", 
                  Style[
                  "bRaf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bRaf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{758., {189.134033203125, 194.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{758., {189.134033203125, 194.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.779613201679441*^9, {3.779613245615066*^9, 3.779613255424021*^9}, 
   3.792134152838726*^9, 3.792221707887497*^9, 3.792221768599039*^9, 
   3.7922229844188967`*^9, 3.7922251216344213`*^9, 3.805520308158983*^9, 
   3.805520544082539*^9, {3.80553585809613*^9, 3.8055358674846983`*^9}, 
   3.805710259072503*^9, 3.80639438930759*^9, 3.864808370793738*^9, 
   3.867739998134736*^9, 3.86774127592266*^9, 3.8678306781518507`*^9, 
   3.874120629913969*^9},
 CellLabel->
  "Out[639]=",ExpressionUUID->"40edfbc4-cf03-4000-8cae-1db5d3a5fe56"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/stot-true.tsv\"\>"], "Output",
 CellChangeTimes->{
  3.779613201679441*^9, {3.779613245615066*^9, 3.779613255424021*^9}, 
   3.792134152838726*^9, 3.792221707887497*^9, 3.792221768599039*^9, 
   3.7922229844188967`*^9, 3.7922251216344213`*^9, 3.805520308158983*^9, 
   3.805520544082539*^9, {3.80553585809613*^9, 3.8055358674846983`*^9}, 
   3.805710259072503*^9, 3.80639438930759*^9, 3.864808370793738*^9, 
   3.867739998134736*^9, 3.86774127592266*^9, 3.8678306781518507`*^9, 
   3.874120630224572*^9},
 CellLabel->
  "Out[640]=",ExpressionUUID->"fce2aa26-5b8a-48ee-b0a3-a71213164768"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate 10000 cell population", "Subsection",
 CellChangeTimes->{{3.792134281345787*^9, 3.79213428942452*^9}, 
   3.8565929772908497`*^9},ExpressionUUID->"796ee17a-0575-4207-b627-\
e79682a99425"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pop", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"pars", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", "10000"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77883732571834*^9, 3.778837339915948*^9}, {
   3.792134166814992*^9, 3.792134184779072*^9}, 3.856592973485182*^9},
 CellLabel->
  "In[641]:=",ExpressionUUID->"6798d13e-ad93-4652-9c30-c60b5130c07c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
   RowBox[{
    FractionBox[
     RowBox[{"ErkTot", "/.", 
      AdjustmentBox["pop",
       BoxMargins->{{-0.07122507122507123, 0.07122507122507123}, {0., 0.}}]}],
      "1000"], ",", "\[IndentingNewLine]", "50", ",", "\"\<Probability\>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(Erk\), \(Tot\)]\)\>\"", ",", " ", 
         "\"\<Frequency\>\""}], "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "200"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<figures/simulations/distribution-ErkTot.pdf\>\"", ",", " ", "plt"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.778836650818493*^9, 3.778836931876889*^9}, {
   3.778837240256041*^9, 3.778837302238008*^9}, {3.7788373374129333`*^9, 
   3.778837353841772*^9}, 3.779015494539474*^9, {3.779461249523744*^9, 
   3.779461383933901*^9}, {3.77946150298818*^9, 3.7794615033698463`*^9}, {
   3.7794615481568813`*^9, 3.7794615577469873`*^9}, {3.779608945286282*^9, 
   3.779609004581355*^9}},
 CellLabel->
  "In[642]:=",ExpressionUUID->"653d4040-d3a4-494e-85a1-008851377a34"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
     Opacity[0.]], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{410., 0}, {420., 0.0001}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{40.70999999999995, 45.05956521739125}, {
           29.108170336572865`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0001]& ,
        TagBoxNote->"0.0001"],
       StyleBox["0.0001`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0001, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{420., 0}, {430., 0.0004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{44.05956521739125, 48.409130434782554`}, {
           28.699980764312894`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0004]& ,
        TagBoxNote->"0.0004"],
       StyleBox["0.0004`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0004, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{430., 0}, {440., 0.0005}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{47.409130434782554`, 51.758695652173856`}, {
           28.56391757355957, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0005]& ,
        TagBoxNote->"0.0005"],
       StyleBox["0.0005`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0005, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{440., 0}, {450., 0.0017}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.758695652173856`, 55.10826086956516}, {
           26.931159284519694`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0017]& ,
        TagBoxNote->"0.0017"],
       StyleBox["0.0017`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0017, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{450., 0}, {460., 0.0018}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{54.10826086956516, 58.45782608695646}, {
           26.79509609376637, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0018]& ,
        TagBoxNote->"0.0018"],
       StyleBox["0.0018`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0018, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{460., 0}, {470., 0.003}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.45782608695646, 61.80739130434779}, {
           25.162337804726494`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.003]& ,
        TagBoxNote->"0.003"],
       StyleBox["0.003`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.003, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{470., 0}, {480., 0.0046}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{60.80739130434779, 65.15695652173909}, {
           22.985326752673323`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0046]& ,
        TagBoxNote->"0.0046"],
       StyleBox["0.0046`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0046, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{480., 0}, {490., 0.0084}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{64.15695652173909, 68.50652173913039}, {
           17.814925504047046`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0084]& ,
        TagBoxNote->"0.0084"],
       StyleBox["0.0084`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0084, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{490., 0}, {500., 0.0128}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{67.50652173913039, 71.8560869565217}, {
           11.82814511090083, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0128]& ,
        TagBoxNote->"0.0128"],
       StyleBox["0.0128`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0128, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{500., 0}, {510., 0.0183}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{70.8560869565217, 75.205652173913}, {
           4.3446696194680605`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0183]& ,
        TagBoxNote->"0.0183"],
       StyleBox["0.0183`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0183, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{510., 0}, {520., 0.0254}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{74.205652173913, 
           78.5552173913043}, {-5.315816924017881, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0254]& ,
        TagBoxNote->"0.0254"],
       StyleBox["0.0254`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0254, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{520., 0}, {530., 0.0315}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{77.5552173913043, 
           81.9047826086956}, {-13.615671559970586`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0315]& ,
        TagBoxNote->"0.0315"],
       StyleBox["0.0315`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0315, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{530., 0}, {540., 0.0394}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.9047826086956, 
           85.2543478260869}, {-24.36466362948311, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0394]& ,
        TagBoxNote->"0.0394"],
       StyleBox["0.0394`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0394, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{540., 0}, {550., 0.045}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{84.2543478260869, 
           88.6039130434782}, {-31.984202311669208`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.045]& ,
        TagBoxNote->"0.045"],
       StyleBox["0.045`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.045, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{550., 0}, {560., 0.0567}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{87.6039130434782, 
           91.9534782608695}, {-47.90359562980801, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0567]& ,
        TagBoxNote->"0.0567"],
       StyleBox["0.0567`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0567, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{560., 0}, {570., 0.0611}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{90.9534782608695, 
           95.30304347826083}, {-53.89037602295423, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0611]& ,
        TagBoxNote->"0.0611"],
       StyleBox["0.0611`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0611, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{570., 0}, {580., 0.0645}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{94.30304347826083, 
           98.65260869565213}, {-58.516524508567215`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0645]& ,
        TagBoxNote->"0.0645"],
       StyleBox["0.0645`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0645, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{580., 0}, {590., 0.0678}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{97.65260869565213, 
           102.00217391304344`}, {-63.00660980342687, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0678]& ,
        TagBoxNote->"0.0678"],
       StyleBox["0.0678`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0678, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{590., 0}, {600., 0.064}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{101.00217391304344`, 
           105.35173913043474`}, {-57.83620855480059, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.064]& ,
        TagBoxNote->"0.064"],
       StyleBox["0.064`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.064, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{600., 0}, {610., 0.0677}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{104.35173913043474`, 
           108.70130434782604`}, {-62.87054661267355, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0677]& ,
        TagBoxNote->"0.0677"],
       StyleBox["0.0677`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0677, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{610., 0}, {620., 0.0615}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{107.70130434782604`, 
           112.05086956521734`}, {-54.43462878596752, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0615]& ,
        TagBoxNote->"0.0615"],
       StyleBox["0.0615`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0615, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{620., 0}, {630., 0.0559}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{111.05086956521734`, 
           115.40043478260864`}, {-46.81509010378143, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0559]& ,
        TagBoxNote->"0.0559"],
       StyleBox["0.0559`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0559, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{630., 0}, {640., 0.0542}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{114.40043478260864`, 
           118.74999999999994`}, {-44.502015860974936`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0542]& ,
        TagBoxNote->"0.0542"],
       StyleBox["0.0542`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0542, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{640., 0}, {650., 0.0449}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{117.74999999999994`, 
           122.09956521739124`}, {-31.84813912091589, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0449]& ,
        TagBoxNote->"0.0449"],
       StyleBox["0.0449`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0449, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{650., 0}, {660., 0.0417}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{121.09956521739124`, 
           125.44913043478255`}, {-27.494117016809547`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0417]& ,
        TagBoxNote->"0.0417"],
       StyleBox["0.0417`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0417, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{660., 0}, {670., 0.0341}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{124.44913043478255`, 
           128.79869565217388`}, {-17.153314519556986`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0341]& ,
        TagBoxNote->"0.0341"],
       StyleBox["0.0341`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0341, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{670., 0}, {680., 0.0293}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{127.79869565217388`, 
           132.14826086956518`}, {-10.622281363397484`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0293]& ,
        TagBoxNote->"0.0293"],
       StyleBox["0.0293`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0293, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{680., 0}, {690., 0.0228}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{131.14826086956518`, 
           135.49782608695648`}, {-1.7781739644314811`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0228]& ,
        TagBoxNote->"0.0228"],
       StyleBox["0.0228`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0228, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{690., 0}, {700., 0.0188}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{134.49782608695648`, 138.84739130434778`}, {
           3.6643536657014444`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0188]& ,
        TagBoxNote->"0.0188"],
       StyleBox["0.0188`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0188, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{700., 0}, {710., 0.0151}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.84739130434778`, 142.19695652173908`}, {
           8.698691723574399, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0151]& ,
        TagBoxNote->"0.0151"],
       StyleBox["0.0151`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0151, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{710., 0}, {720., 0.0127}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{141.19695652173908`, 145.54652173913038`}, {
           11.964208301654153`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0127]& ,
        TagBoxNote->"0.0127"],
       StyleBox["0.0127`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0127, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{720., 0}, {730., 0.0091}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.54652173913038`, 148.89608695652169`}, {
           16.862483168773785`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0091]& ,
        TagBoxNote->"0.0091"],
       StyleBox["0.0091`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0091, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{730., 0}, {740., 0.0066}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{147.89608695652169`, 152.245652173913}, {
           20.264062937606862`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0066]& ,
        TagBoxNote->"0.0066"],
       StyleBox["0.0066`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0066, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{740., 0}, {750., 0.0051}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{151.245652173913, 155.5952173913043}, {
           22.305010798906707`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0051]& ,
        TagBoxNote->"0.0051"],
       StyleBox["0.0051`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0051, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{750., 0}, {760., 0.0035}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{154.5952173913043, 158.9447826086956}, {
           24.482021850959878`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0035]& ,
        TagBoxNote->"0.0035"],
       StyleBox["0.0035`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0035, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{760., 0}, {770., 0.0031}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{157.9447826086956, 162.2943478260869}, {
           25.02627461397317, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0031]& ,
        TagBoxNote->"0.0031"],
       StyleBox["0.0031`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0031, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{770., 0}, {780., 0.0022}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{161.2943478260869, 165.64391304347822`}, {
           26.250843330753078`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0022]& ,
        TagBoxNote->"0.0022"],
       StyleBox["0.0022`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0022, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{780., 0}, {790., 0.0014}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{164.64391304347822`, 168.9934782608695}, {
           27.339348856779665`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0014]& ,
        TagBoxNote->"0.0014"],
       StyleBox["0.0014`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0014, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{790., 0}, {800., 0.001}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{167.9934782608695, 172.34304347826082`}, {
           27.883601619792955`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.001]& ,
        TagBoxNote->"0.001"],
       StyleBox["0.001`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.001, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{800., 0}, {810., 0.0005}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{171.34304347826082`, 175.6926086956521}, {
           28.56391757355957, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0005]& ,
        TagBoxNote->"0.0005"],
       StyleBox["0.0005`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0005, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{810., 0}, {820., 0.0003}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{174.6926086956521, 179.04217391304343`}, {
           28.83604395506622, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0003]& ,
        TagBoxNote->"0.0003"],
       StyleBox["0.0003`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0003, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{820., 0}, {830., 0.0006}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{178.04217391304343`, 182.39173913043476`}, {
           28.42785438280625, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0006]& ,
        TagBoxNote->"0.0006"],
       StyleBox["0.0006`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0006, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{830., 0}, {840., 0.0002}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{181.39173913043476`, 185.74130434782603`}, {
           28.972107145819542`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0002]& ,
        TagBoxNote->"0.0002"],
       StyleBox["0.0002`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0002, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{840., 0}, {850., 0.0004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{184.74130434782603`, 189.09086956521736`}, {
           28.699980764312894`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0004]& ,
        TagBoxNote->"0.0004"],
       StyleBox["0.0004`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0004, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{850., 0}, {860., 0.0002}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{188.09086956521736`, 192.44043478260863`}, {
           28.972107145819542`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0002]& ,
        TagBoxNote->"0.0002"],
       StyleBox["0.0002`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0002, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{860., 0}, {870., 0.0001}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.44043478260863`, 195.78999999999996`}, {
           29.108170336572865`, 30.244233527326188`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0001]& ,
        TagBoxNote->"0.0001"],
       StyleBox["0.0001`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0001, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{400.8, 0},
  Frame->{1, 1, 0, 0},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"Frequency\"", FontFamily -> "Helvetica", FontSize -> 8, StripOnInput -> 
       False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SuperscriptBox[\\(Erk\\), \\(Tot\\)]\\)\"", FontFamily -> 
       "Helvetica", FontSize -> 8, StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  PlotRange->{{410., 870.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.856592782821869*^9, 3.856592987511737*^9, 
  3.867740096536152*^9, 3.867741294598105*^9, 3.874120633181057*^9},
 CellLabel->
  "Out[642]=",ExpressionUUID->"e1ddcd92-786c-4b5b-a9c2-a25a095d9868"],

Cell[BoxData["\<\"figures/simulations/distribution-ErkTot.pdf\"\>"], "Output",
 CellChangeTimes->{3.856592782821869*^9, 3.856592987511737*^9, 
  3.867740096536152*^9, 3.867741294598105*^9, 3.874120633525382*^9},
 CellLabel->
  "Out[643]=",ExpressionUUID->"6e2271d7-721f-4cd3-a0b8-fbe61abae0c5"]
}, Open  ]],

Cell["\<\
Simulate the steady state of all 1000 cells.

There is a correlation between total and phospho ERK of 0.43\
\>", "Text",
 CellChangeTimes->{{3.779461513639797*^9, 3.7794615251442633`*^9}, {
  3.8055359573471622`*^9, 3.805535972054809*^9}, {3.80553609349658*^9, 
  3.805536108396332*^9}},ExpressionUUID->"1ffabaa0-448e-44c4-800e-\
d5c059c024fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", "pop"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.778837313230709*^9, 3.778837319709077*^9}, {
   3.778837358355226*^9, 3.778837473903956*^9}, {3.778837671920751*^9, 
   3.778837676802525*^9}, 3.779461509689741*^9},
 CellLabel->
  "In[644]:=",ExpressionUUID->"127a9214-dd55-4d8f-8de9-ff0832ec13cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["ErkTot", "1000"], ",", 
       FractionBox["ErkActive", "1000"]}], "}"}], "/.", "population"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(Erk\), \(Tot\)]\)\>\"", ",", " ", 
        "\"\<Erk-PP\>\""}], "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.778837729731926*^9, 3.7788378557239237`*^9}, {
  3.7794615285058727`*^9, 3.7794618523134212`*^9}, {3.779461899525113*^9, 
  3.779461911242988*^9}, {3.8055359206287947`*^9, 3.805535942895965*^9}, {
  3.805535975539382*^9, 3.80553600893567*^9}, {3.805536050911614*^9, 
  3.805536070913344*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"c7f452ec-6e46-436f-9cab-8c7bba53147f"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
+Pi98P7fE/k0Il+93XLClcKg85ULUc6RuPpq1F/jQ1rYc66zpaw4EgtjA2sW
kfz6qlv0KUGKxoaElL5xSylYtZ3ZMxjCQPrDzqOBFIWfc+0vH31Fw+/wgQcP
/lGYKFvk1dvE4KvXni3J2ykYqMRH+7gz8NF7P4Y6xYXcs0s3D/CEuGz6qvuJ
HBv2J0b2zZksxDknu+TyOgrHOI/n8pqFGOszNzK0lwvb8uy21KcRkOk/GPG0
kI3qOTFL3/0VYvZqW/9PaRTSWAsvvCLPe2376vhWCxY+Opufu6MuwtJRMkk2
t7jIuDw4Q4/Mb+jDZVOrHrJxo0TPtvIJg/yTKTYibQ7sr/z2iRIxOMHyFT0v
40BkUTbf3V2EtJJu4ZdOHu52TOG7uzLYHLThmfJhHtau/9MUTb6PA2/Rj3Ht
HFyOiO04SfrudCq/YjS5/7pHk+qkr0jALVQRSFtqI8ujKP/FRrK/J39qJDym
0P3n64WvHeS12f5vqw9x8PNq17dl2yKw47kj5/4FNtammnt81hfhj46PimAu
B6NXPLG1ShHBym57to8vH6NtYh3GlUXiR8CTmWv5PIzuCV990VmIP1X+eS6k
H9zn/fp9s1KI9D2sitphFv74L8+N7mXgHT9bIm0qwPdtphZyXjE47/xs+XlL
Lbyh2F3CYSEU551llbDZiNK7E9hhQKPQe09T+nlN6MhvWjCPQ6O0YlpDWQIX
k6M6nDPahVBp2OUdEM/Gw0mik6MOiBBrudL8kCYXYdrvJq/YKkTE5jPSv8dw
4Ou9tXOknMGnwlb5FaVaCHyQ29lF+shjZEFMRSMXHBvjrl02IpgZmbjaWfEg
12t36maZBL8P6HvIz+YSbpth93CXCOJjftISIy5CvVmdGxbRWKOln1X9lIKa
ePqRhkViaB1/fp8zicKfX6EzlVUkuFU55kmVuRZaeheGLP4kQnre/WPZKRRi
ugqdJ+2hsWSK+ZYLJhxsmv/B6uNuBi6jXzaOrKFQc3pU5Aa+GC39/gpzc7j4
tnDDy+ORNDwX35T6z08TrN/5jZFNQsjq/4lZOsiBeM6gmRWZ9y3+zTY7fnEx
KkS88lo5jZTDrVsWvuRAeryMRWWiiPBbfUebG4VdJ24t6upn8OJHW2mCmIt2
nafRzoZiJH7V6C3/qoVfgdcvZKVFos+DOy44VhtWx61LRvmLkT/r6k7lRLK/
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
JD9/4HnHxREGK1RX4loU+X5Vmx1z2CLope0uiSC8L9RRa3Ul/XL3QoGRG+nP
M2qtFjVSDN71Hliyvp+F4t2nXzQQfvq71EKleCIfcvsna7dOE+Kf+956s78c
FAuaojbPk4CVPYsfHsDGLJ7yh9s9Eozmep+K3sxDy0iti3CQ9KPH6C0BChTe
OfoY6X0i/MYy7Fycw8WeGYZjjnaR/RKIOrLI863vNA6+/4bwy/sOl6sXuZDz
GzW8wZnBgYczqz/kUDikbBJ1c7UEu/yP6p46y0Nwd0vBo0dh4CtSriECDnJ1
pjXYjmPw0LLXY5Dwj+HbOe07dCNQcLx19NH/NMHmzNjboCXGt+jFqZnfKMSJ
uivPcUQw+vzpxuQZPDQm5G7U8o3Ar7H10/TuUih5eXba96sSfFje+OPgVC1k
8JLHa/aIMHymQk9+Ex9NR+XG6exkQPlWnEgt1IHfiYCl1rpizEz7WNcdy8VA
waMYJ8Izl7zm2huT895r4brhpSHp49R2z00rWZg2M4ry3i4BuyHYeEInOY/2
GQUOh0SwfJtFcoWHXT+fHBV70pht4vOoxION9IDV2f3tNCxWpcksjmdDdXXA
Jc0DDHon2f7MUOPiT+tC9xspNFQksRk1ZwmP75d98GKSCNaf7EtHfSZ5Kf1l
T9wPMVbo19oM0npwbpk+44dfBOrdtf2nVnHRnxlyrcoyHKnrC+OfEH6x9AjW
2t1EY/1/U8XO/iwkDl0JiLSIxEzVfY7yZ7Sg8tLxoHxiJJRlPl25YyDAlKKx
fyYTPv7YFDvNcx3pvxOur28Tftj3KHqyxJkH6xRNDfkvZB+fhL0ZyuRj/BWN
X3eIny/bvXdLvSYXN60fqI2hiH95vVZWJHnLa8xZWvJVBJaP2RKT/7jgltPh
2mFifJnUWpnowcXxQ3U1i4g//YaJ+c/zhO+97j3v+kDD5nRfdjTh+TWT/1y+
LBRjbekh9dwbfIRsV22NiGeglV/Du0P6OiE5/k5rWQReLDOZxr/BxpIOhcuf
xtEQ/BZMK0vXRJv/XoXRUwifDUn9i57MQQtPYtEbIUJNyNQcLSU+Ljdc6/OR
kiDxfeOmxd5crNMpC5lCiWHcF2cuucgBz3uFwepyMVZ7buoSVQnQXPd50Xwj
GqqW8ZWLVDmo/h2XcGQq4bfQ9A73zQIcGZD73cII8cr9Zq7aCzZuP/4yND+K
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
0Zg48bk5Cxf2dwWIcOHL2mf5UzTQtq/965xHFA5CMDnCioOMbOXkQ7IJyLHV
VLoRw0Ssl+bqdn8yj5xDjh01YGOd+9/8+7t5cHSX5uV3qGHx6oLhKUOE75/M
UDZ5y0RK83SFn+5C2O/Nis68qYFrUTdELzMpJPtcmzmV4iAoNnU73ZzCxmil
yz5VdPSeobK+nyN+1/twtYw2Hed2Ff7ZuZTCiSGJv4rnGcie83LmGMnfFXUP
dN5EM+HgIjvB/wgFv8DRTTnPST1xkv8tlxXigOelM6usic9s/vDQajYff3o3
vZU2Z+K9K/Mk5c3HbU/Xbq2bxN8mDtx2Os5DVeNrQ/NZXMQZjZRfliX5qL38
ecZrwg/BCiuLx2NwqC99hVmlOho0h6e93cOHwqjEwWBtNn6qX4PUduLLQ1er
PUn/+Y/tYr03JPWkucGxnMvE0g3bG7aeFUE/T79utth88O+Z9xxoInnb+Jzz
slkTFew7S47zBXBjzHa1J/y016P9zLMMIYT2foXZPC4W1DTfKjzIw5K8quDp
+TQs+Xd5+j89Mg+48+4rRTLQnPPI9uUSISQf242LOuiIOByuGELqY3dK1+Tl
69XBrxTMTkznIe0iy83lNQvfkhSLElX4CJ7vOvjFh46Tl7Prn5hRcNxxJjYy
gNR/i0hjiQHhfYmQvNu1LAzxXAdntfFx1OGBeaIDG4Zf161c18qHar5Cki3x
KYIl4fwzfFhK9jgOqrNwMmaHwRorMr+3Prl0jcfB8DWjkGNzRVg26dOLs2eY
UJTIqHjtyiP3dTBu+ioa8u3cuyY4UJh0p2zYlvTPntAiXw7hBZ20zMazHSys
tDHd0nmND0/fCZHtXxlYppcSfe2eAOen5ErZNHNQl17w+8xzCl9kRUO+jQws
nTPjDn27EDGXuu72bGLjY4De43aS73+3FJl3eNBwNXLt3RDCH+3tunvdiR9m
4sx6rW0UuNPG2yrIPFU0WjM1uJTC4Po/p0S7WTjTZG8RMUrBssfv7F/CA9qM
SUHWnwXY+eL+TEMpTYwZbtbwV4zF7ecH4BbFwLnSuBvb38WgO0CYeP0OHXPn
ft5X7C0CV+lQBm5zoL62ME1tmwAH/X6xy9/S8WSEcS36jhDvxpc17NvOwIZ9
ovFoXx76xqfq7VhJx3vN07u2eREfTdrv3ilNx6xJOyV5jhTotrbZ28h+qt75
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
hamJKRw8XLN7roDwbMaU5Q1fNjHx593qrfOn83F8rk9ud7Q6pNbHyo6d4MG+
IufjnZNMQPpLgO9uIaggVV17VyZMzDf+cVP4//vzVieVf2QhL2Y7Z5Cs37oi
f3CE9Pu3GxKXTcj9KhzcuErYz0DGmoRbK+ZQ+PT+y5PQw2ysnpRvIzjHw1df
o+E0cn+HdW9vPh8hgtLxTvlcFQ70nrppuRP+F+tMnub2lAHBiZSiAo4AykVO
RS52bOhNd5z49f/nJdsuDrNcw0bF5fnDXrmED18deip5gonFiyRd+uv52HV/
7OKPcBpOvj6u1kGjsN+xeufYxv9/X/P0UMX/f2/uPueeEouNySPFIz2BxLed
bdiz9VjQ/NsY2+1I/HzpgQV7n5H8mSe0uF/MB89RwqLzJw2aTrkVbyop9P/R
HDeoYKAnZUSnQF6AfT0prykrJqyKcweeU6S//ga8XDnIxO3G0ysHJQXYFJzN
6vv4H0dnHg/V24dhSZEllUiJmN1a9lS4W6VShGjRJmWPUlKWmTOLSihCRYok
e5tKRQtSqCwlJFokJFFkT+/ze/+cjxlzznme731fV5kz2rBakBxtxOUjMm+O
098oTbym6so4ZXx8il9bwlvBRqdtoPKMBsJncWf1Zp7ShoWEltycSgofg+IN
GctYaIiYPu2eNR8fdN5NnZfPRtHQOaEb6Qf9L2sn7t5P8kWtm1d5lIcXs9+d
1CbzWeLkFnq7nEK7dGqDdBAD3vPiJp7J4EPiYm2syncmcu+MaWUqU6hc6TDH
LpoO/59vXx6ZwkUEb/KXJDU6mgxeefWT/lsYoy4rRs7PmycR8dslDJaBpndh
wUTA7PvPrUm+acnmaaydQsfs0TSxR4Rv2Ou28T85M2A/WybDxo+Hp0/HEsw/
aKD7vI1JdRYFw0dz2xbc1ERBVWntj1U8/J4//XefKguZvtcy3e7w4Lzy/OaK
KnXsNDHxsiX77fihN6LRzyxoh8uvOE58I3Pa3j6zxzR48o91LlAlPOzZqiL/
m+SVmq9c4Q+SB/V+K/VqWKjNu7p0uwKF2RuPcF860CEv2BCZNYfwkO/y9QFy
NDT1l04znkB4SudTxPJMDkJLIX17cSiMuletehajjrNxVwSRNlwUXLQYMZNk
QDdavzyC5Ltq89xDH2axkWd6zKfqzn9/L3BIN/wWAwzf4M2Zm/gYZHz/1FXD
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
AJpM3HVHYy70vk0p3xCpiunV0SUeCXw4tpS8Ka3hYM5Xr6BzC+JxRclMeojs
R7Xsy/H7JH/Oxa1OZbmpIEtrdvbsWAHeuaVV3XNjwmrlA24FCM+NrayvmM6C
n2zTtrVbhTi3SCphU5sG2h+LWFzKolBZ1rpqBjnfBgXTvkgrx8DxtOGjx69Z
aDU52rGKnPc1FZJ3q4s42Ovp0UxpUnA59+h70UEmFl+WCg9xjsHuexmnNWPY
uJF0ebXTHAoVP+I7dixmonXrnLk1hAdf29BbBHwNnHJ31aq7JsA55XjhXRsN
CLbvrPEk67O6Xlul2YeJRKboimRPHtJ758bJWNIRmrRxmSeZl6Gqqu3LvAnv
3bIJZXqTPmrxaX3XRMfle2l7djaQfBuY52x8lonSq+W315A8unTA//k+dxrE
6P2BO45RKN/e67hoI/H/eu0hnTnRWGb234nFqQxIsn22bFlG9r9yny8tgYXA
6/Lhq+cKUUqFm8ZOYiJDN1bW9ScXzZVSTe8GGSikrwlvNTsIwxvltT8dNPDM
9fj62HEuTrfbN8KXhe15Fk2vAwSY35F72GgKBwuv7G4wJf4nel1c+Wkj8ddv
airziY+dt5U8M20jC6auYYuTyfPrDFTmVumzcPp3a/c1BeJ7B34Jqn4SP2la
UyJN+OjYFq3998nzNf/QdNON5D1t1YX4WVU0ZJesUbKrisYdHa9h2aOqOHHZ
1stspQC6kduyZ8YxccKzOTYgkQ+X2Td1zvFoaM4vLXxhzgdP7vw1DysGNp3a
M7n6TDSm6co2t25jYLb5rbk6P3l4XzrH8dQfGn73+gVJ3BGi8L7p+8/k8cMP
fTnTtogLFV9qutdXVWScpWWUHyfnzbt54vN94uvKWdz/jClodEtl+/apYnTc
4O9nwm8r4ot7H+9gY6a4jdvGyoPIKHtV1r5QAz6iD+7Ef6NgM+xifDyNhf39
27NnSZG+OFdt42zOgOq02a8v3OKCKd1XUVqmird9VhEzW/l4OG2DWMUgC00+
jZVTInhYMdlwpyzxsT2JD1U6nvER8tZWddkgeXxKo2n+j0hsWmb75H2ZMmaN
LXZPJH7jrjood1GCBg7NZ0DsCxc/fGzbKi2YePzH8cNXFT5WvtfYl+PFwZk3
qxX//Pv8+JasicFPbHwYy1cOIr57/Xil+9i/z/d4rH8rvBgFB6Ud2zTWqCLr
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
lUKXt3Ix4OeevZ/424K8vLqKXXx8thcxEif8WJNV956uwUPy85VWRsMU1AX6
q567yMXuqqvtJ0xoeNaSvcyIzUdNZ76j037C+9cNZYepMQiv+nxuxTUabj5U
DfeuEqD/sHnXD6EKZjkVfuf8iiT5FNIqlKTA81HmSJcbD78urysaL1eGV97w
luJGPnJGDSPZuXT0XaQfUCO+vZN+rkV1Og3yDT5tLpvJfE45rrYtjYHRE4Hf
1hMfpc9+enfMiY6q94cPbnCKhmvmZv37BaoIi5/f43GI3N9Yr/kIyZuJNbXW
ai5kHpZGSeeT/Vy9tkvxvLoA1d9fxFk1U8FxXOGzVS8Gc00+a22tUIHq/Atf
B4lfXLuU+vTfKAsbBQFbJ8Q5ULww70bFSiqC6g2tblDJ/ibxI6KuMfDSV3ud
wxUOrmr12I20M1CWHF2vco2Hp/q1+ZJBylhbu0827iwPUqumHw8mfpcc80fE
gPjZ6x0ROYqPlCE55jOxmMHDY3XHIeds4lsPQy6uCOYhP/KhXjuZP+32dTsX
uQqwQH5XYRI532Pdqq2DAdF4wQtauuqVCoIWfflxbI4AhjH6CbJ3WLBQiK57
e4qLvNG2nlOaKjj03Dbbh/DPWZNjlgkr2LDtkb3ifY6DoMNPa1pzlFDT8PmM
CuE3LazvrrVhIb3kzsYksg/dTu+UI8WpoLR678ggef43+YPuM1MKHLc8a5P1
5yGBb6IXqElFTUhWcEcl4bvBd7PM6ihoezT9X8VrHh5tzqnI9aXhQuq83eMt
pB9irDNSg1Qxc+7x4kOnuZix863mkwNKWPhA3svvQxRc0heF7pGjwv3IbHOv
Xh6G80xl/Yn/Gc3ZxKVmcLCJY/EmYZSGdV43HiRzuDhTwg5QG6FgIGTL2/nk
+Te83fvZwJCK207fX0TYCXC+a9BChPBU8+K3S79G83Ft7nnbrWyS5yf5PqwU
wtsrKZo/dtJwf3rTs/qDPGy59ND/1zzCK1oHzZTVeYhLWzTVRIXkDV1c80MS
D1dXfNp66CkNld2SZTXtPBy4e6vp4lEabHQuL7ncxccLp+vMPy6qsJR5tW10
ER9a+5ft3EF84fgVO1ODIg4WZ12pl9YlfJSoxfOiC7A6PlfbtYKGXY0rBSNm
XJxT+j19vhQFp0ZmLjYgvFt59LSL6gDxQev7OdN7uFj266+uzU8KSozPz57M
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
8ET7zVioKfx0gHFvMf4HOPq5QA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"Erk-PP\"", FontFamily -> "Helvetica", FontSize -> 8, StripOnInput -> 
       False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SuperscriptBox[\\(Erk\\), \\(Tot\\)]\\)\"", FontFamily -> 
       "Helvetica", FontSize -> 8, StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 861.5127327535652}, {0., 16.695006212508186`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.856592802651841*^9, 3.856600354580922*^9, 
  3.8677404062107267`*^9, 3.867741490382509*^9, 3.874120819829626*^9},
 CellLabel->
  "Out[645]=",ExpressionUUID->"dae502cf-ed33-40ad-9e92-a2fc0918ad2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "ErkTot", "]"}], "/.", "population"}], ",", 
   RowBox[{
    RowBox[{"Log", "[", "ErkActive", "]"}], "/.", "population"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7788379020174294`*^9, 3.7788379943572817`*^9}, {
  3.805536082903675*^9, 3.805536087262745*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"b6a4485f-da09-422b-a4bd-658876158b5d"],

Cell[BoxData["0.46808716014746465`"], "Output",
 CellChangeTimes->{3.856592802688838*^9, 3.856600354758555*^9, 
  3.867740411192937*^9, 3.867741490582913*^9, 3.874120820016341*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"dabb219a-70ab-46d5-88de-7013d04df8a7"]
}, Open  ]],

Cell["\<\
But the correlation between Mek-PP and ERK-PP is much stronger\
\>", "Text",
 CellChangeTimes->{{3.8055361622708282`*^9, 
  3.805536180812765*^9}},ExpressionUUID->"57145b2e-bbd5-4e4b-b35e-\
813869655c81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["MekActive", "1000"], ",", 
       FractionBox["ErkActive", "1000"]}], "}"}], "/.", "population"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(Mek\), \(PP\)]\)\>\"", ",", " ", 
        "\"\<Erk-PP\>\""}], "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.778837680097706*^9, 3.7788377160069857`*^9}, {
  3.7788395923761387`*^9, 3.778839602726198*^9}, {3.80553611857374*^9, 
  3.805536145451161*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"f35f9849-8ff6-481a-b276-175daab6d32b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
TcE/HsfszZ/x4Ujyifgqf5JHV1zuX8wfgPrhJaetSN7X5Je27Xo2AKMJ0Ukn
tlBw95ZLVke/C4AzjbmNNUzqs0g7dVKNAyeW9IdFCmkY7KPp+aNDBCZlSkai
GA1cN+wYWtnJgz9XOs+W7aJjTrx7rU4CDwbEXM7b6tBRX/wuPmRywH2+mG/y
WSqq1th6b3Lnwd1PZbbx5PWxxSNbOBEDcPSKB2YRftP21VeiKnPgYoLePBdj
Gvbe+dXyt3UIss3bj9pZauEy/9K9HewhePYpa6tVjCZy2cJTw6sF8K9DL1by
/+fT/ZB4uthwEJwu7f+buIyGUZe9+YXuJE8jOw8ovmNg8YLiqosDHHhU9OHw
8wQqPuE8vr5tPRemLUr7rfuE8F3WV6bpGw5ky8prPD1OePhOWPTkXy48/5O4
M+kxFX/RddOvewnh4FjUZNYEHcMefhXvtObB+/SfK9eY0XHKCoXIDalcsN6z
pP5mJclD0fmG3ZE8eNRZus9PgYb1Hxw+rrcVgOPbHU0MPxYGeqw8JEf4dEWS
f596Mg1vZdbta/UfgMz7Wdv7l5D5b1DjU186BLr29UN/izSwNfKKm1OJCCRH
N778oK6B7c/Ov6XY8sHqU/XFOzdoWO6mnfGa+KxQi13iRnwk79Yti+7gYTA4
pGxmnqmFFKUpZ6M4PFCx3x3FrWRgtvtHBdXnPEjpNTg3uY+B1mv0V6cqCKGK
tt/nHJOJFx/kjrwv4sPPTOe894TntyiwF+Vc4kDbHoXCxUfouPKcEtA1eGDB
eqecJ01H5+WyvH+/B4FmXWx9yoSKAdrXXa5JCyBlsX140hcGTlu4anuXJJn/
mzpuWHyn4JbZB9P20v/f/+3WD2po+EEpQy+UzAM3SUe7eQIa3uheNclbywPK
RXET9Uoatvzqqfv/efBbO1zT1vQwMULpzlDcVCHIO/sENNmS8x1f3bpdnA/O
Fgfk55K8ce3N2RBwjw/hoOul10rDg/uPpRrksqHc8X3EirMUFOnlfbMk/mQW
PSgXQPjWtoLCDaogvk6VferaSUWLHrXtsluEwJ5yLz9Ik4H+Jt7TuxwGQfFJ
BHMbmQebBz0ebV/Fh4o87qOETSQPjtvle+7mw1ATr+SeAQMfH59iddhXBF/z
qtP+fqTjuc2uehq6pP7/Lj8yfTUVtc7yLA/U9MPcxKzaj/kUrJQ3Kv/xVwjX
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
J/tpTPS4amITXi6Ez1b3PhsSv/DxCSmvL5dAo0GygqYrGzU1hu1eXZLAzzjr
tNOL2Wi7UocVe1cAidBhq0H4YJfHHG76Kg54VaRTFAPVMSDgSPN3bwmU9hx4
5LpGC1Mq9a1nH+uHL/v/fF/5TxO1IXblpBIRHJ/18bFMtgayRz4PtxQJ4OGj
74uet9DxQN2eN82pQjhHpemkVpJ6osfPKtwohlsdO15dJfXavNjkyrZSAWDS
/B/lxGrPxdcvt9zIA131kr3l3+n4rT5/8juHfvheWjfDvk4LFc4NHPM4JYA8
5oIVt4mPJZV1Bfd1CWBMrfOzix4TyxU2/Qz06AKl+dvXS6WrIDOto3yunBDY
qjvP6/XScSlLeWpZEgd+1v8IX2HBxB/XXZJu6PSCg6bny8qNmjjP70N4TIsA
Dp6QK/xG8k5F4ZpHoqUQRienp/dqsbAgz7xKtIXMm+CHASt8mdgWU1TcmskH
2aa6SFWy33/LB5cJY3tBqSfg+mwOGwOUx/gb3XrA8ZDC2K5VVIy0OHA7zJ3w
rgo97C7J96zg0q9/y8n622Kpxq4sbMoJs0qK4IOt9dJ2PcKH4QleszZJJKBe
3VE/vJX40ixh9HSyXyv+dvuZcxj4cuPiCusbErBkNMbYNLKRt2fdwpE9HDjA
yUxZu4SOhqLFz82VeVDz/tg/ihUNjSgJd+YeIf68NfJb72Iq+uH78sv9QnD5
vsy5MIyJw6P+mmxCT9W6q2dUVhD+u1dprZzNh6/H5fKPXqeha8HTnYnEZ6Sv
2zjuW0pBqvfejS8Jj9s0lN0d4xP/fzDdrL6F+OOlPy5SHCZaPa6xfLeCC/tc
nmzjE96bPpz3s/IhHyIvFK8WiCh4qGnv8dB5Arjj6vlhSRwNy2gpPbbGvSA9
6CSMLWPjYZsV48r3Cd/tDeA9aKBi5pMnc3L7+dCkNG6wN5OBm9zE/v4XeXDH
s7eCf4SJs8cK/ijJSiBsblx95jADT6h4LNmiKIb7LbkWT2pY2Nf2sGXkIh/k
w4tivhMfM5dZvmOvMxccU0POBXhRsXb++IpLzj0gndnSNFhLQUbnY+VxChfe
8ruq2w+Q/E2eszzfgQvhz/Rq3xNflRw/qrUgTgiyGxN922SZaJ03d091r5C8
//dqt3o6is2ifV/u7QU5x8X6zTqExz9Huct7C2GZ5Z4/ZxXoqGg+bcWOzULo
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
qeH/AYRKWEE=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"Erk-PP\"", FontFamily -> "Helvetica", FontSize -> 8, StripOnInput -> 
       False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SuperscriptBox[\\(Mek\\), \\(PP\\)]\\)\"", FontFamily -> 
       "Helvetica", FontSize -> 8, StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.3478039745876098`}, {0., 16.695006212508186`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.856592802753847*^9, 3.856600355163535*^9, 
  3.867740414708644*^9, 3.867741491064514*^9, 3.874120820477686*^9},
 CellLabel->
  "Out[647]=",ExpressionUUID->"b718e0a8-8bc8-433f-a4cd-35f029f2008b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "MekActive", "]"}], "/.", "population"}], ",", 
   RowBox[{
    RowBox[{"Log", "[", "ErkActive", "]"}], "/.", "population"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.805536155685902*^9, 3.805536156683319*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"7c73fee1-fea8-4e88-974c-a648a46d1719"],

Cell[BoxData["0.8458721555408639`"], "Output",
 CellChangeTimes->{3.8565928027870703`*^9, 3.8566003553904047`*^9, 
  3.867740418094298*^9, 3.867741491263969*^9, 3.874120820659137*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"cfd3b5cc-0726-4738-ac3a-835df57b9b19"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "population"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1.tsv\>\
\"", ",", "df"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.778839063161015*^9, 3.778839118142712*^9}, {
   3.7788393419845953`*^9, 3.778839358686761*^9}, {3.778839393160955*^9, 
   3.778839435693419*^9}, {3.779015684428594*^9, 3.7790156853840437`*^9}, 
   3.779611915477087*^9, 3.855390598249867*^9, 3.855390701308702*^9, 
   3.867740088634232*^9},
 CellLabel->
  "In[649]:=",ExpressionUUID->"e697323b-0451-410d-bf4d-53cefdfb7754"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulate populations with inhibitors", "Subsection",
 CellChangeTimes->{{3.792134244584991*^9, 3.7921342454627132`*^9}, {
  3.792134299726368*^9, 
  3.7921343151066628`*^9}},ExpressionUUID->"d49b6860-6283-4192-ad9a-\
9792dbad07ed"],

Cell["\<\
We model the inhibition of nodes   80% reduction in the kcat of the reaction \
X_inactive --> X_active. Note that some nodes are activated by multiple \
reactions, in which case all kcat of activating reactions are reduces by 80%. \
In addition we also model a weak perturbation of 25% reduction in catalytic \
activity.\
\>", "Text",
 CellChangeTimes->{{3.7921390303463497`*^9, 3.7921390831670027`*^9}, {
  3.855916032879242*^9, 3.855916099692788*^9}, {3.867830373369084*^9, 
  3.867830418223673*^9}},ExpressionUUID->"ecc89a28-2fe9-41f2-a349-\
1955263addc1"],

Cell[CellGroupData[{

Cell["Ras inhibition", "Subsubsection",
 CellChangeTimes->{{3.792139143285015*^9, 
  3.7921391586176157`*^9}},ExpressionUUID->"e6d7e0b3-60f5-4215-892f-\
1ddce310ceef"],

Cell["\<\
Generate the parameters and check the mean log2 fold changes.\
\>", "Text",
 CellChangeTimes->{{3.7921391634513397`*^9, 
  3.792139224501093*^9}},ExpressionUUID->"ccbe69d9-b373-4942-9ff6-\
8a19be1bd2f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsRasi", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction3Kcat", ",", " ", 
       RowBox[{"-", ".8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"parsRasi", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction3Kcat", ",", " ", 
       RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsRasi"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7921387238282967`*^9, 3.792138824007653*^9}, {
  3.792138861213194*^9, 3.792138979586626*^9}, {3.792139010368885*^9, 
  3.792139024678589*^9}, {3.7921390900049753`*^9, 3.7921391076360607`*^9}, {
  3.792139139148108*^9, 3.792139140126975*^9}, {3.867830441186195*^9, 
  3.867830445799706*^9}},
 CellLabel->
  "In[650]:=",ExpressionUUID->"a0f1ace9-bff6-4fed-8fa3-5ef39c37d3ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.05900682100583991`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.35599200746585413`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.3564225538433007`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.07734402398152064`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.0767175942868412`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.07347913883559166`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.00005561690959307063`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.000022029089367073067`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.05329117496277334`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.792138868721612*^9, 3.7921389808293543`*^9}, {
   3.7921390108318243`*^9, 3.792139015932323*^9}, {3.792139103897596*^9, 
   3.7921391083023443`*^9}, 3.7921391605088367`*^9, 3.806394409447397*^9, 
   3.854790446557428*^9, 3.8547906757161207`*^9, 3.854791266621511*^9, 
   3.855390721576775*^9, 3.856604488309802*^9, 3.858833750378604*^9, 
   3.867739944291746*^9, 3.867740426348665*^9, 3.867742067398149*^9, 
   3.8678304468576927`*^9, 3.867830689131528*^9, 3.874120821268092*^9},
 CellLabel->
  "Out[651]=",ExpressionUUID->"c1acb102-f21f-4c57-8f04-479b9b937758"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rlocRasi", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsRasi", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
      RowBox[{"Flatten", "[", "rlocRasi", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "Large", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<rloc unperturbed\>\"", ",", " ", "\"\<rloc Rasi\>\""}], " ",
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.858833794606957*^9, 3.858833963521451*^9}},
 CellLabel->
  "In[652]:=",ExpressionUUID->"41ec78d9-29c3-48e7-a42a-cb167edca7a4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPDDllJcZdf7n+1ZaVD4MSXFJuHDmSS
1j759++9PWNXqZn5//f2EFHquZ/W4Iu0q+4W1g/2+kGajKUsH6ju/p0e0baz
Wm7u//mwuX5aw02qh4cbe9N3tsBt9rsCuh8zpWyie/i7T+pkkbZ8a/85du6V
Cdve2pOqfyrDRLnLu9/bz/tzoLlw/9BLP5+eWywznvvOPmB2XgLn+nd0d7+s
582bTlLq9n4FATsF+ZVIDn/sYOiE/+dZHDeSI2/ap3r1H+8F0hDRoeN+7GDo
uD94+wHPQ7/e28NoiCjx7v+bVXSAzf6o/ROmb6v5jA5SKf0SD6TCDzoZlr22
Z7Hgue5Y9AbD/QCuKI8k
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"rloc Rasi\"", TraditionalForm], None}, {
     FormBox["\"rloc unperturbed\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.0013925331456877`}, {-1., 1.00108814672161}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.858833833489223*^9, 3.858833908747254*^9}, {
   3.858833946977869*^9, 3.8588339657985573`*^9}, 3.867739948223443*^9, 
   3.8677404318191643`*^9, 3.867742072535285*^9, 3.867830451275354*^9, 
   3.8678306916578217`*^9, 3.8741208231788197`*^9},
 CellLabel->
  "Out[653]=",ExpressionUUID->"dabae6c9-b42e-4cd0-88ae-e65971d1d0cc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"popRasi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRasi", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", "popRasi"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.792139250263425*^9, 3.7921392586727343`*^9}, {
   3.7921392923192673`*^9, 3.792139301699991*^9}, {3.856592827687707*^9, 
   3.856592827733333*^9}, 3.856592911648527*^9},
 CellLabel->
  "In[654]:=",ExpressionUUID->"b89a4955-9ad5-442b-93e0-f891e3ba2f13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-RASi-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.792139324694397*^9, 3.792139332479967*^9}, 
   3.855390637016518*^9, 3.867740566650581*^9, {3.8678303166501427`*^9, 
   3.867830332566757*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"02f9dc75-e1f6-48dc-94cb-c26149508b8a"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-RASi-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.867830496107655*^9, 3.867830732433126*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"69cae8c7-30d0-4faa-9467-0726fd474814"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p90RSK inhibition", "Subsubsection",
 CellChangeTimes->{{3.792139342401284*^9, 3.792139351299747*^9}, {
  3.80639447311131*^9, 
  3.806394476294492*^9}},ExpressionUUID->"2f22b345-d4c5-43d4-9395-\
9981a8c5df39"],

Cell["\<\
Generate the parameters and check the mean log2 fold changes.\
\>", "Text",
 CellChangeTimes->{{3.7921391634513397`*^9, 
  3.792139224501093*^9}},ExpressionUUID->"be793ee0-03fe-48c4-83df-\
683899c8dbc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsp90i", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction11Kcat", ",", " ", 
       RowBox[{"-", ".8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"parsp90i", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction11Kcat", ",", " ", 
       RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsp90i"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7921387238282967`*^9, 3.792138824007653*^9}, {
  3.792138861213194*^9, 3.792138979586626*^9}, {3.792139010368885*^9, 
  3.792139024678589*^9}, {3.7921390900049753`*^9, 3.7921391076360607`*^9}, {
  3.792139139148108*^9, 3.792139140126975*^9}, {3.792139371024222*^9, 
  3.792139376501165*^9}, {3.7921394283873367`*^9, 3.792139428892343*^9}, {
  3.792139474490395*^9, 3.792139474520444*^9}, {3.806394510334703*^9, 
  3.806394525006878*^9}, {3.867830472308217*^9, 3.8678304761264668`*^9}},
 CellLabel->
  "In[1073]:=",ExpressionUUID->"5e68b22b-7279-44ee-aedd-337d9e6afd61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.2637235032344216`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.26368802009070397`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.26408283899871315`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.06754841359098412`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.06697265079279698`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.3346262217414318`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00005098533593984243`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000020194098508482215`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.04727816971803236`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.792138868721612*^9, 3.7921389808293543`*^9}, {
   3.7921390108318243`*^9, 3.792139015932323*^9}, {3.792139103897596*^9, 
   3.7921391083023443`*^9}, 3.7921391605088367`*^9, {3.7921393803359013`*^9, 
   3.7921393838469963`*^9}, 3.7921394296924467`*^9, 3.792139478828166*^9, 
   3.806394413106851*^9, 3.806394525848197*^9, 3.806394577578353*^9, 
   3.855390734877727*^9, 3.856604523496415*^9, 3.858833979443502*^9, 
   3.86783050001903*^9},
 CellLabel->
  "Out[1074]=",ExpressionUUID->"b514432d-522d-4105-8210-cde97fed0d66"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"popp90i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsp90i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationp90i", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", "popp90i"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.792139250263425*^9, 3.7921392586727343`*^9}, {
   3.7921392923192673`*^9, 3.792139301699991*^9}, {3.792139483804888*^9, 
   3.7921395002404747`*^9}, {3.806394546431097*^9, 3.8063945834751673`*^9}, 
   3.856592933271883*^9},
 CellLabel->
  "In[1075]:=",ExpressionUUID->"5a5da485-664b-462f-9eac-83db2a66b8fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rlocp90i", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsp90i", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
      RowBox[{"Flatten", "[", "rlocp90i", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "Large", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<rloc unperturbed\>\"", ",", " ", "\"\<rloc Rasi\>\""}], " ",
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8588339838201847`*^9, 3.858834006101191*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"06a10124-58c4-42fc-b509-9de6dee57372"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPjDllJcZdf7o+8f1Ho/9QXFJuHDmSS
1j759++9/WeHA4angTRElHrupzX4Iu2qu4X1g31Bttq1G2wfqO7+nR7RtrNa
bu5/+q6O37PjJtXDw4W96Ttb4DZ7zznFa7gn76R7+P/gnc0ibfnWPnHf2qmM
F9/Yk6q/Y1al3OXd7+2jxMU/1+0Yeunn43OLZcZz39nvnWTWnv78Hd3dL+t5
86aTlLq9VdD56pyd2iSHP3YwdML/8yyOG8mRN+2TwpvSbIE0RHTouB87GDru
31a/yPPQr/f2MBoiSrz7f2cVHWCzP2r/5pdmjOnOE1RKv8QDqfCDToZlr+17
XU2bbOe9wnA/ACT2kps=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"rloc Rasi\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"rloc unperturbed\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.0013925331456877`}, {-1., 1.0016716351735475`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.858833995297409*^9, 3.858834008143407*^9}, 
   3.867830543447661*^9, 3.867830776221595*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"d0a2b4bd-6d86-40b6-a6fa-83f7834a4b6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationp90i"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-p90i-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.792139324694397*^9, 3.792139332479967*^9}, {
   3.792139506483856*^9, 3.7921395120296593`*^9}, {3.8063945681525183`*^9, 
   3.8063945745831137`*^9}, 3.8553906423680143`*^9, {3.8678304875789557`*^9, 
   3.867830491158189*^9}, 3.867830522209565*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"bf9fe8e6-cc33-4714-82f4-52ea751a329d"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-p90i-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.855390740581337*^9, 3.856604559965767*^9, 
  3.867830543923525*^9, 3.867830776701613*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"612fe5e8-9cfd-400f-8056-4e783eaac097"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sos inhibition", "Subsubsection",
 CellChangeTimes->{{3.85479145257563*^9, 
  3.854791463342978*^9}},ExpressionUUID->"2587dab7-ec73-486c-a5f2-\
3f00cdd0b785"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsSosi", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction1Kcat", ",", " ", 
       RowBox[{"-", ".8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"parsSosi", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction1Kcat", ",", " ", 
       RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsSosi"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.854791442674402*^9, 3.854791442998208*^9}, {
  3.8547915547752934`*^9, 3.854791567484654*^9}, {3.8678305076430483`*^9, 
  3.867830511661655*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"5de9cb08-62e7-422c-86d0-33eae0305f67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", 
    RowBox[{"-", "0.3548199513746926`"}]}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.3547813965346666`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.35521065137405927`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.07710587081121957`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.07648131802444201`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.07325258214084854`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.00005545004401419623`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.000021962995385322527`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.05312848183760027`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.854791568992671*^9, 3.855390767237349*^9, 
  3.8566045600230093`*^9, 3.867830544036209*^9, 3.867830776814011*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"f3c3f350-c0bb-4298-b710-d0f2656c8fba"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"popSosi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsSosi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationSosi", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", "popSosi"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.854791613740917*^9, 3.854791687593689*^9}, 
   3.856592936675596*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"4a5f28cb-75f9-4490-a4b5-cacc1ee875d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationSosi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Sosi-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.854791733286372*^9, 3.8547917449413023`*^9}, 
   3.8553906481150427`*^9, 3.867830536549663*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"6077e9cc-b178-4387-9579-a843896247cf"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Sosi-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.855390772112152*^9, 3.8566045975458717`*^9, 
  3.867830586371393*^9, 3.867830819224141*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"93850ff1-e04b-4f40-bdfa-ced8833fd63f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Raf1 inhibition", "Subsubsection",
 CellChangeTimes->{{3.854791845936862*^9, 
  3.8547918625947647`*^9}},ExpressionUUID->"93900cc2-4111-4dc6-bc70-\
952653269707"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsRaf1i", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction5Kcat", ",", " ", 
       RowBox[{"-", ".8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"parsRaf1i", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction5Kcat", ",", " ", 
       RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsRaf1i"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8547917979584827`*^9, 3.854791804418811*^9}, {
  3.854791867053553*^9, 3.854791921054927*^9}, {3.8678305482812977`*^9, 
  3.867830557723027*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"67297e7a-89cf-4c83-aae3-214e7b490937"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.02078880186037798`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.020786234709503873`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.3947322555767298`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.027184901524089373`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.026960819454828536`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.025803650298878753`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "3.6902201375228835`*^-6"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "1.4616255326360768`*^-6"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "6.406853007629837`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.00347121535258608`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.854791915943969*^9, 3.854791921516262*^9}, 
   3.855390775766183*^9, 3.8566045975896606`*^9, 3.8678305864923983`*^9, 
   3.867830819339333*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"769cb3b4-590a-4efe-8da3-f50fa2d9c538"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"popRaf1i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRaf1i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRaf1i", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popRaf1i"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.854791903650515*^9, 3.8547919472370157`*^9}, 
   3.856592940781938*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"ac2699ed-a90d-418a-a8ce-4a76811e48e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRaf1i"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Raf1i-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.854791766240972*^9, 3.854791779068585*^9}, {
   3.854791950022386*^9, 3.854791956401988*^9}, 3.855390652098612*^9, 
   3.867830565932789*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"d64d06ac-3884-4b73-93dd-e5e13e035cd9"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Raf1i-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.8553907813553047`*^9, 3.856604636579006*^9, 
  3.8678306279467297`*^9, 3.867830861857685*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"cdc2db1f-0dbd-496c-a3d3-c301139de74e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mek inhibition", "Subsubsection",
 CellChangeTimes->{{3.8553891459493303`*^9, 
  3.8553891504479103`*^9}},ExpressionUUID->"eeba47c9-6560-4ff0-ac97-\
6a772d306069"],

Cell["\<\
Mek is activated by both Raf1 (reaction 7) and bRaf (reaction 27), so we need \
to reduce both kcats.\
\>", "Text",
 CellChangeTimes->{3.855389812565415*^9, 
  3.867740606189065*^9},ExpressionUUID->"0b46c25c-3955-4535-a13a-\
21925f3c320f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsMeki", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", 
       RowBox[{"{", 
        RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", 
       " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsMeki", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", 
       RowBox[{"{", 
        RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", 
       " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsMeki"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.855389215736013*^9, 3.855389295238365*^9}, {
  3.8553893569240913`*^9, 3.855389370872231*^9}, {3.855389409783628*^9, 
  3.855389495656188*^9}, {3.855389532183825*^9, 3.855389566454815*^9}, {
  3.8553896094711733`*^9, 3.855389624885113*^9}, {3.855389685916925*^9, 
  3.855389699688253*^9}, {3.855389796546981*^9, 3.855389814708454*^9}, {
  3.867830575059638*^9, 3.867830578743071*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"63311ff7-7ff0-4f8f-bef9-6d884bbcae5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.2618757773834612`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.26184056614257845`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.2622323604660756`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.3481443547122437`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.34557503926270805`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.3322217661998378`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.000050594812722027396`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000020039423176171038`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.04692151653115631`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.855389427782592*^9, {3.8553894644679623`*^9, 3.85538948340195*^9}, {
   3.855389533144988*^9, 3.8553895675819283`*^9}, {3.855389614517271*^9, 
   3.855389625598071*^9}, 3.855389700952539*^9, 3.855389815187583*^9, 
   3.855390787181408*^9, 3.856604636628901*^9, 3.86480838285017*^9, 
   3.867740573097948*^9, 3.8677416395396748`*^9, 3.867830630718408*^9, 
   3.86783086196817*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"b19e5a0d-6aab-4c99-84ba-ecd351bab2a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popMeki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsMeki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationMeki", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popMeki"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationMeki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Meki-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8553906583723927`*^9, 3.8565929450179768`*^9, 3.867740580831345*^9, {
   3.8678306173796587`*^9, 3.8678306256442833`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"cca7c1ce-66f8-438d-beff-169e12847361"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Meki-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.8678309046697683`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"6ed24a8e-34a7-4581-ba7e-dd6301ab5ce8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Erk Inhibition", "Subsubsection",
 CellChangeTimes->{{3.855389731443469*^9, 
  3.855389737318716*^9}},ExpressionUUID->"d9000377-b5ff-4706-886f-\
3e4cf9b014df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsErki", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction9Kcat", ",", " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsErki", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction9Kcat", ",", " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsErki"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.855389896099347*^9, 3.855389896612298*^9}, 
   3.8553899398864527`*^9, {3.855389970983111*^9, 3.8553899881940804`*^9}, {
   3.86783063707556*^9, 3.867830640754116*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"d8723258-9139-467b-9e01-165aa5e748a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.26178416791534664`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.26174897014621035`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.2621406146127581`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.06701737624824983`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.3454516167149769`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.3321025784668831`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00005057546372029663`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.00002003175957641648`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.04690384351430914`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.855389888117704*^9, 3.855389934283415*^9}, {
   3.855389972366102*^9, 3.8553899857512712`*^9}, 3.8553907945842667`*^9, 
   3.856604676961439*^9, {3.867830904771488*^9, 3.867830930643063*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"bc98d480-7ec4-42b6-91bd-51bfab844524"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popErki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsErki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationErki", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popErki"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationErki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Erki-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.855389514072638*^9, 3.855389515905217*^9}, {
   3.855389728573182*^9, 3.855389729574448*^9}, {3.855389848940803*^9, 
   3.855389884128948*^9}, 3.855390659956156*^9, 3.856592948058326*^9, {
   3.867830711576663*^9, 3.8678307152552347`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"474f056a-b836-4c8e-bede-25efc87c133f"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Erki-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.85539079914328*^9, 3.8566047127422037`*^9, 
  3.867830928118248*^9, 3.8678309740076447`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"de35bb17-6251-4d11-bc97-b7f2e588554e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p90Rsk inhibition", "Subsubsection",
 CellChangeTimes->{{3.855389999816572*^9, 3.855390006402096*^9}, {
  3.855390222954093*^9, 
  3.8553902231280317`*^9}},ExpressionUUID->"7e80140f-d6f8-4f71-b90c-\
4d1cde45458c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsp90Rski", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction11Kcat", ",", " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsp90Rski", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction11Kcat", ",", " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsp90Rski"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.855390044028852*^9, 3.855390059647163*^9}, {
  3.855390151972506*^9, 3.855390168761077*^9}, {3.8678307252657957`*^9, 
  3.867830728931074*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"214877d0-449e-47b2-bd47-644570cac179"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.2637235032344216`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.26368802009070397`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.26408283899871315`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.06754841359098412`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.06697265079279698`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.3346262217414318`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00005098533593984243`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000020194098508482215`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.04727816971803236`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855390189800815*^9, 3.855390801643394*^9, 
  3.856604712819148*^9, 3.867830974156234*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"1ebd5771-7e5b-490c-a49e-8e4b3f5d0f6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popp90Rski", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsp90Rski", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationp90Rski", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popp90Rski"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"df", "=", 
    RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
     RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"vars", "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
           "totalProteins"}], "]"}], "/.", "populationp90Rski"}], ")"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
         "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
p90Rski.tsv\>\"", ",", "df"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
p90Rski-delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.855390045366705*^9, 3.855390054212831*^9}, {
   3.855390169359483*^9, 3.855390173582267*^9}, 3.8553906613053493`*^9, 
   3.856592951723136*^9, {3.867830736112414*^9, 3.867830754333172*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"0bfea90d-99ed-49c3-9313-d6622b0e2167"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-p90Rski-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.855390806197698*^9, 3.856604746681198*^9, 
  3.8678310218682537`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"2afb896e-6317-494f-8725-887949de355f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PI3K inhibition", "Subsubsection",
 CellChangeTimes->{
  3.855390097189311*^9, {3.855390210279523*^9, 
   3.855390218880981*^9}},ExpressionUUID->"402f0481-63b3-4619-a136-\
54a3ad6fc76f"],

Cell["\<\
PI3K is activate by EGFR (reaction 13) and RAS (reaction 14), so the kcat of \
both needs to be reduced\
\>", "Text",
 CellChangeTimes->{{3.8553902641063957`*^9, 
  3.8553903038673553`*^9}},ExpressionUUID->"309f7f0b-cfd7-46c0-a46a-\
82df39942ce2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsPI3K", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", 
       RowBox[{"{", 
        RowBox[{"reaction13Kcat", ",", " ", "reaction14Kcat"}], "}"}], ",", 
       " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsPI3K", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", 
       RowBox[{"{", 
        RowBox[{"reaction13Kcat", ",", " ", "reaction14Kcat"}], "}"}], ",", 
       " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsPI3K"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], "]"}],
    "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8553900994273977`*^9, 3.855390100007639*^9}, {
  3.8553901433346*^9, 3.855390146126239*^9}, {3.855390249610353*^9, 
  3.855390261740684*^9}, {3.8553903103438883`*^9, 3.855390325071528*^9}, {
  3.867830766839419*^9, 3.867830770376048*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"da35af8c-9a10-46a0-a9f4-eb09e96baf1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.27341033262684766`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.27337341828694245`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.2870681954624899`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.07154785708556359`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.07093713573109478`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", "0.06779049538986955`"}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.08303131291848968`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.03350960552860564`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.049154057866322376`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8553903319303923`*^9, 3.855390808705543*^9, 
  3.856604746762925*^9, 3.8678310223251677`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"800720f2-86b6-49a7-8a51-9b4b8cd8c7dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popPI3K", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsPI3K", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationPI3K", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popPI3K"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"df", "=", 
    RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
     RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"vars", "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
           "totalProteins"}], "]"}], "/.", "populationPI3K"}], ")"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
         "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
PI3Ki.tsv\>\"", ",", "df"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-PI3Ki-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8553903256184473`*^9, 3.855390328763187*^9}, 
   3.855390424124658*^9, 3.855390662881959*^9, 3.856592955973138*^9, {
   3.867830774491169*^9, 3.867830785744215*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"4e19bbd5-efed-4847-b0ba-f1e05abccf2a"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-PI3Ki-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.85539081473272*^9, 3.856604781376624*^9, 
  3.867831068979513*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"314358d7-9c58-4613-9e66-777b3336faaf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AKT inhibition", "Subsubsection",
 CellChangeTimes->{{3.855390361450081*^9, 
  3.855390372347542*^9}},ExpressionUUID->"0e57abc4-01a4-4da3-8bd8-\
96c1546e34c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsAkti", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction17Kcat", ",", " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsAkti", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction17Kcat", ",", " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsAkti"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.855390415108219*^9, 3.855390415635447*^9}, {
  3.856606827471923*^9, 3.856606831639386*^9}, {3.86783079917647*^9, 
  3.867830802955009*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"e9adaf94-bd3e-434b-8906-a994e3a6e5e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", 
    RowBox[{"-", "1.6017132519074588`*^-16"}]}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"SosActive", "\[Rule]", 
    RowBox[{"-", "0.00398262272405912`"}]}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.003982135138206715`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.06518100342381883`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.005200237638684948`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.005156880876063441`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", "0.004933147608060685`"}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "7.009200316710849`*^-7"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.1801705951310388`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "6.406853007629837`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.0006602108685990227`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.855390818169114*^9, 3.856604781451161*^9, 
  3.856606828735785*^9, 3.8678310691207533`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"7fe96936-1a86-4664-888d-f311949a2c97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popAkti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsAkti", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationAkti", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popAkti"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationAkti"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Akti.\
tsv\>\"", ",", "df"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Akti-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8553903866766148`*^9, 3.855390420000329*^9}, 
   3.855390664096725*^9, 3.856592959070478*^9, {3.867830806517251*^9, 
   3.8678308151045647`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"6a55c6aa-21f4-4b6e-9103-34f15a61d7e5"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Akti.tsv\"\>"], "Output",
 CellChangeTimes->{3.855390824552734*^9, 3.856604816796341*^9, 
  3.8566068959259768`*^9, 3.867831116459663*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"ac872db6-6949-4a92-acc3-82be7c23487b"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Akti-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.855390824552734*^9, 3.856604816796341*^9, 
  3.8566068959259768`*^9, 3.867831116714671*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"bdf8c983-c11b-46d2-94b0-17d2e145b0ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C3G inhibition", "Subsubsection",
 CellChangeTimes->{{3.855390833719576*^9, 
  3.855390846859524*^9}},ExpressionUUID->"b5d0c1e1-af9f-472c-a899-\
6663a9ed1fff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsC3Gi", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction21kcat", ",", " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsC3Gi", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction21kcat", ",", " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsC3Gi"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.855390861027463*^9, 3.8553909013471613`*^9}, {
  3.867830826224513*^9, 3.867830829966485*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"c73c4fb8-61ad-48ab-8221-7ed021071846"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.18838836622397823`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.18836369081943893`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.18863827666621355`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.2490890788050659`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.24718789072971925`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.23732506092311692`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00003546057786432695`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000014045154596574351`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "0.4072622520209577`"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "0.4070355453139662`"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.29864774706435865`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8553908993786583`*^9, 3.8566048168742447`*^9, 
  3.867831116850309*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"92bf2c0a-1740-417f-8f43-66267bebd47f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popC3Gi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsC3Gi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationC3Gi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popC3Gi"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"df", "=", 
    RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
     RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"vars", "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
           "totalProteins"}], "]"}], "/.", "populationC3Gi"}], ")"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
         "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-C3Gi.\
tsv\>\"", ",", "df"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-C3Gi-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8553906646614733`*^9, {3.855390857597808*^9, 3.855390890242334*^9}, {
   3.8678308344269133`*^9, 3.867830843092943*^9}, 
   3.8741208377585373`*^9},ExpressionUUID->"b4f4bb6a-e605-48ca-9c7b-\
e32fd9e6c67f"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-C3Gi-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.8553909218342524`*^9, 3.856604820385984*^9, 
  3.8678311215128393`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"c08ade41-1806-4498-a539-2fd4f71cdd9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rap1 inhibition", "Subsubsection",
 CellChangeTimes->{{3.8553909255327473`*^9, 
  3.855390937437366*^9}},ExpressionUUID->"57ec704c-4635-4367-b1d0-\
5e37a2276cc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsRap1i", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction23kcat", ",", " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsRap1i", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", "reaction23kcat", ",", " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsRap1i"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], "]"}],
    "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8553909846002293`*^9, 3.8553909868511333`*^9}, {
  3.855391032146996*^9, 3.8553910446317787`*^9}, {3.867830848575032*^9, 
  3.867830852378995*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"7e16fe5e-c594-450b-948b-55fc1e0a0ad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", 
    RowBox[{"-", "1.6017132519074588`*^-16"}]}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.19163792507229027`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.1916127950612314`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.19189243870188452`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.2534446497888964`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.25151309462433874`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.24149189704142845`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00003611368062881546`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000014303832110435276`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "0.41480706175922244`"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.30402300894411555`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.85539098753927*^9, 3.855391060411244*^9, 
  3.856604820461783*^9, 3.867831121639151*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"609d2b07-90e1-407a-a7af-23a2390abcfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popRap1i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRap1i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRap1i", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRap1i"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"df", "=", 
    RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
     RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"vars", "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
           "totalProteins"}], "]"}], "/.", "populationRap1i"}], ")"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
         "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
Rap1i.tsv\>\"", ",", "df"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-Rap1i-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{{3.855390891043816*^9, 3.855390891370913*^9}, {
   3.8553909589999313`*^9, 3.855390967783638*^9}, {3.855391028915249*^9, 
   3.855391057505684*^9}, {3.867830860248838*^9, 3.8678308701249647`*^9}, 
   3.874120843096648*^9},ExpressionUUID->"f367b48b-7f66-4899-a464-\
d538a306799a"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-Rap1i-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.8553910038327093`*^9, 3.855391066198936*^9, 
  3.8566048239329777`*^9, 3.867831126203126*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"de07aedf-1249-4126-9ddc-aa4ac1368286"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["bRaf inhibition", "Subsubsection",
 CellChangeTimes->{{3.855391004450301*^9, 
  3.855391012653407*^9}},ExpressionUUID->"25d22b79-d42e-469c-9283-\
7f1a4d58a58a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"parsbRafi", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", 
       RowBox[{"{", 
        RowBox[{"reaction25kcat", ",", " ", "reaction30kcat"}], "}"}], ",", 
       " ", 
       RowBox[{"-", "0.8"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"parsbRafi", " ", "=", 
     RowBox[{"perturbPar", "[", 
      RowBox[{"pars", ",", " ", 
       RowBox[{"{", 
        RowBox[{"reaction25kcat", ",", " ", "reaction30kcat"}], "}"}], ",", 
       " ", 
       RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"vars", "\[Rule]", 
     RowBox[{"Log2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "parsbRafi"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"vars", "/.", 
         RowBox[{"ss", "[", 
          RowBox[{"sys", ",", " ", "pars"}], "]"}]}], ")"}]}], "]"}]}], "]"}],
    "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8553911002538347`*^9, 3.855391117988613*^9}, {
  3.855391151594523*^9, 3.855391161505476*^9}, {3.86783089354945*^9, 
  3.8678308970234413`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"ba2bea0d-4b87-4b46-bedb-6051699e77cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.2379768153462127`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.2379450896863663`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.23829811002916634`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.3157998849341567`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.31344363644832557`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.3012048576714053`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.0000455883776756652`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000018056511743747666`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "6.406853007629837`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.38164267448783024`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.855391162171989*^9, 3.8566048240066843`*^9, 
  3.858834268639646*^9, 3.867831126323694*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"6194c0de-9052-4cab-85ed-fd914aa5620b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rlocbRafi", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsbRafi", ",", "i", ",", "j"}], "]"}], ",", 
          
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
      RowBox[{"Flatten", "[", "rlocbRafi", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "Large", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<rloc unperturbed\>\"", ",", " ", "\"\<rloc BRAF inhibition\>\""}], 
     " ", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.858834291163836*^9, 3.858834328242456*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"78b08aac-dd24-4807-a5af-907ac35da7f0"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPjDllJcZdf7r/DvdZ31vYXFJuHDmSS
1j759++9fd+65tUXgDRElHrupzX4Iu2qu4X1g736x4e3drJ9oLr7d3pE285q
ubm/0uS/1dP2m1QPDxf2pu9sgdvsq7bMe56beIDu4f+DdzaLtOVb+4Cjvv72
r17bk6q/Y1al3OXd7+1TBXjLs08OvfTz8bnFMuO57+yFk+0tDj14R3f3y3re
vOkkpW4v+2Afp5GNNsnhjx0MnfD/PIvjRnLkTfsQi9AKRyANER067scOho77
t9Uv8jz067198PYDYBoiSrz7f2cVHWCzP2ovOfXU1D9mJ6iUfokHUuEHnQzL
XtsfNjpcaNT1CsP9APw6kfE=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"rloc BRAF inhibition\"", HoldForm], TraditionalForm], None}, {
    
     FormBox[
      TagBox["\"rloc unperturbed\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.0013925331456877`}, {-1., 1.001642088899709}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.858834308401759*^9, 3.858834331028783*^9}, 
   3.8678311290097027`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"3cd062e7-3516-4dc7-a447-640cf49fe5d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popbRafi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsbRafi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationbRafi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popbRafi"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"df", "=", 
    RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
     RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"vars", "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
           "totalProteins"}], "]"}], "/.", "populationbRafi"}], ")"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
         "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
bRafi.tsv\>\"", ",", "df"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-bRafi-\
delta=0.25.tsv\>\"", ",", "df"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.855391015457741*^9, {3.8553911013989363`*^9, 3.8553911040485764`*^9}, {
   3.867830900619851*^9, 3.867830910279592*^9}, 
   3.8741208552234497`*^9},ExpressionUUID->"25cf1c55-4032-41e1-b3e7-\
6ad365c216ca"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-bRafi-delta=0.25.tsv\"\>"], "Output",
 CellChangeTimes->{3.855391178813896*^9, 3.856604827459585*^9, 
  3.86783113355689*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"86731869-e144-4f24-953a-5fcc8513ad81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exploration of the effect of node inhibitions", "Subsubsection",
 CellChangeTimes->{{3.867740682758115*^9, 3.867740688826326*^9}, {
  3.867740722226635*^9, 
  3.867740733074366*^9}},ExpressionUUID->"df73d4e0-c65f-4070-b9ac-\
8b4fb2acdb59"],

Cell[TextData[{
 "In reconstructions we have found that sometimes including a limited number \
of perturbations ",
 StyleBox["decreases ",
  FontWeight->"Bold"],
 "reconstruction performance. Importantly, when using a \
\[OpenCurlyDoubleQuote]full perturbation\[CloseCurlyDoubleQuote] design, this \
is not the case. Here, we will explore why that might be the case.\n\nA first \
hypothesis is that the ",
 StyleBox["true",
  FontSlant->"Italic"],
 " local response coefficients differ (strongly) between the reference steady \
state (that we try to reconstruct), and the steady state of the perturbed \
network. The plot below suggests that the relation between p90RSK and SOS \
(p90RSK is a feedback inhibitor of SOS) is much stronger around the MEKi \
(green) steady state that around the RASi steady state (orange)."
}], "Text",
 CellChangeTimes->{{3.867741668138845*^9, 3.8677418094453506`*^9}, {
  3.867741858565648*^9, 3.8677418586841183`*^9}, {3.867742173649412*^9, 
  3.867742245219172*^9}},ExpressionUUID->"3da787fe-f706-4552-a7f1-\
a59078feea01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P90RskActive", ",", " ", "SosActive"}], "}"}], "/.", 
      "population"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P90RskActive", ",", " ", "SosActive"}], "}"}], "/.", 
      "populationRasi"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P90RskActive", ",", " ", "SosActive"}], "}"}], "/.", 
      "populationMeki"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<p-p90RSK\>\"", ",", "\"\<p-SOS\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Reference\>\"", ",", "\"\<RASi\>\"", ",", " ", "\"\<MEKi\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.867741861080735*^9, 3.867742043404667*^9}, {
  3.867742087446513*^9, 3.867742090137136*^9}, {3.8677421418809977`*^9, 
  3.8677421514760113`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"5d1d1bda-68c2-49f9-b434-08b14ae96da1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
2QMuHLy55hXfqDDpfGA3WSzCvZs/F5hdpIKv4BibuITYn2v+WGZAzKu/znIy
8SLQxbMZLf101I5v7go9JoaXN2mGvw8Zf+LH6Us0udh0il30azEVhs+u9cw9
TPSHl4TExeNR6M32oz65w8Uym8iln4j+Vb39b0RplIuk0Y8KzzKo6CzLPzyF
x4P6Tr2jp2awcCO0fWvYAiHO5z25oO7LwMV9aqR/RN7N5rQOaf8IxfVHLZYk
fzEEW671CwkeNTqzWWL+PzbuibuavEUMhAXfL9eX52BpuftazTYWJDKfLO8x
5UHcPfOnHpuFnsCO9tHmQsxr2zyj9DsZnMVpUbvOC/D+UIJfJ/F5xz05EdXE
fs7UVVsfRPDMt/qyv2tm89EYcOBkYSILbfnH88ctxZh2rfjDaz2CH/cEWSdv
L4DeyZ3LXt9iYcrS1afuaZXCZyRgL/tYOOLa9B6uJ/xWc8+e+TaXaFizpyXB
aIoIfyI+W6qFkDEtYeznr1ExXE7reB1wjsS346NnY37wEPpFeL1sHZmoh3tq
3+IfobXu59Rm4yhwQurHvVcSPnFx5pcURyaU/tLN1phyIFDbs+7VPzrOOraQ
xL1ilKA8lLKTiT2TneuGKsUgsY4c/neZAgpP5kqiYiEKlVjpl3spWKpeJdq6
UIjK34m/PtlR8Do3ouxYnABSneS0RjYNWWVCwwpi//6ckPg+vYDYn+lZjz9e
EqB9T7naK4LPSm78vB/LJXznRL+P204WNJ137hliFcIgbebabg0S2obi5w1l
E/4tHu36O42EWi+rXeVP+ThYuUQyTpLoh2XrCgc8uMS+L5IN2MWE07fV6RGH
xFiXviE+bioNN7477E3YxYZUn5qsh2wsJiwpe4cnCzH3svjNVq1InIlqt/R3
LoRy921HQ5VIzLVe5N1F3F9zgLXR0Y9khOqf2WLOEqKijpTVuz4Sp1NtZcoI
v/mzqNDqgh4DU37eV3U6y0fqLjNu5SYqnrxfm96hIoKLytdQ9QUMWBlpqGcV
/P/+GpGF00YW4n9lJj81EhK8uvb9mkEKkl0/5p5yEKEiXb/qzIlIZK3cIDCm
FSIkdjxK/XYk2ue8Pb6IyLMXwS2rt3xjwm1Jlr7GMwHBYYaLh/7/PtDosdQP
Twogazv+qiE4FvLaq0y8fxVhfonbyj0NRJ7W7/jt2iWE3acNcsoEj39s+qba
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
oUdt+63uEInt05EJb07y8Gbhg9EPQgr+D+lsJ8Y=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
P+7NcmJi5dR2S7WlVJzLSVS44CnAre3nSUVPoyFeJZO0WoaNFn/Xcf2nsaho
jJ571ZkL2V8BKpIPKfAeaU32TyyHIWN6L9eKgk8XjipvzKhA8K3InR41UTiZ
+OR1lwQTPgLTTjWHZPQPZwo/FCN+/lefrdYYDV4kV5fPYhx8PHJGRkE0AcsW
XEy4v5SLU/9qX+4XJqHb4Yvp4jYWsZfaG3cS/GUVXn9ntoQNB8/W+DdNBA+p
Bw1QJAlf87rx6YcuDd9m2kwXSHPQIqyk2vGK8JuUiTmpt6sQcOeMw1B7BA7e
yjhy9gkTxx0T7n4Vo+O18jZJZ0MGzrRL+h3oSsDkzffNlgWV8EzT+rtZPBq9
nNE1vq8qoFlXcO8RnThfisdKyYccMF00TeQCyDAcbunScWWBLz4808mhg6n2
hfrKiglbCcb+OZuJfkuKlaG0EP6bn5f62CcBBlbWl0sZXDTO0CyWR5PgJr1V
fpsiC2tyG1tlztPhstLbeTyMC7MU2cLIVzTcvh9w7X0zF6/Pr2lO/EjwtVlZ
13d9Iu//jejXqtGxTuWFqlcTB5Z2m18+IPK/Otor8ASNiR8VZvGdR+jYtzdR
2fUSMX9Bq28X95Ah7F1Xse8BF4ZDJqLV8RR47noT8KWPDWNN36Dz2gQ/h5j6
LaHxIa7UbNxsH4s5Pw4JTraXIy/vgZxCEBWzpu6uXIJv6lWet3k0kmC46JaK
yh0edvqHPU6bR4HjUs0D7z3K8S+snRvxiIrt2ZufP5lloz7/y78lo1Soytz6
fo3BRuDO/du+EfzpvMP8QdwzLkpa5EcaiD64qxq8b+dhJgKnLHxqPpHx+cjC
QvkuPnyXe/QVy8ah0Foizb+WCxF/C/s341So6Nlf+9BYiWPzzgyYWsdC88i1
S+Iv+PheY/o3SIeM0cdqx7Ql2HCJsbB9SPCgyO2RyLQsLjKF/5t+SyEhYmSn
K/kNEyd+Bl04XkXDlncj5s8J33VavcVJOZ6MZ6m373rblaNZbM6jvxeoWFWV
sSCpiIfz/9X5vVMh/PPg+n9xqVz4Nel3eadRMRB2WjaEzYKc+iHFmxMp+OjT
8qjLlYm08hcRp4NpaJj/PEm0mgvhmIOc7iAyvhTXKYmQufBRT7LMvETw1M0I
v7nlLBySLyeXUqkQOuadWdNchkgFlydfLyaAL7Kk96gywQPvesIXJsQi8l2g
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
O0rCQrl35alpPDTs+jpaVEZBSd7UvDPeLLSsCOzIyabherPzJQZxPzvlNo/U
j5CR9XtS6wCzAlEH6cJRFRquxvsJJgieaPjpWnxkMeGTV7RlHb350PgywXc0
iEFO1cRDhUEBZiZ8ZfdtouLazEVkI4K/Q1vuCdTnEfw3u3VRC8G7b2UfXuro
OA2bRdQveb18DH654DUvlwK9PvvaNns2Xh9e35ZN7NsS+oVSIy8e/t2wmKqL
okBTpO1f+NYq6PyY/2SKGwnxK/PmR57kQzxFa4HmWQoas0Ubvzbx8ePoirss
VjQeNX+ZHVTPxeo/ag3+RF7vjtkpMWLFRnhd5/Frpxk4Kz6Wlz+biwHVg7ZS
pymQK0mhM9TZEDuZlDP6gYG0Au8xf4LXP6t0uNzQjofBl3t3fndx0etqs+qg
FB1Gr7+XeJ9lYfPgDcXBJCZ8htenuYeVI3TFjbMJ7XRY7dT2IUVycfTcsh1s
TyoOavsb7vldBZe/3CnyCSK/M9v5DHUehuepUHo3kZC5TvTj4xIu7o0+upKn
SoOMjAa3ei0HowMRPi+jqEi2bzM2eSHA5ylzKRbBnwrul/zcJdhwXOn/QEM5
AfrLmpUbiX4LMAmWNvkSjRtOctSIL9W4Upu7K+kTCfl5dneqMgkeHcwJbc8m
/GzTes92DT5cY6SnPoZQ8DJze7ONNB/8a7eHzsvQif3t7nuzgwverM43i9Ni
cc01fa1hIg+1fEbe1e9kOCYWHtIPYGMePThhZhYdnO+mvzc84iG7KrWF9paC
jkErpZ+eLDzSd/nV2MmE2lhN43dZASxrvAy8NtPB5WcVU9cQ+6LQo1+jTEXn
hpvvQ2YS/KujN5VbHgPryiu75o5xsPTa51G5RAb6G8Pd3YjzmxL07dHSJHwj
4Z961ywBnmxb9N6hl4aPhp6zPj/gYt0vro8RwXPL/dIde94S/JGcIhnUR8W+
wpV7/17iQO/m0XuVhI8/lDutaEUWoLfq0ZUhBQrOqJFLjMz4uKm5n7MliYZf
Y9me+9h8mEWauQQZU/FX98Mdi+FaLD18PZmifQaqSjJ1x37yMPpV18R5iIZO
OFs9syjDZh8jnWCVODwruzbC5nCwk3zeTY1Bx96IZFLXfTYi9lhP3FjHBPvq
uWuVCyuxcH1xaw3h95GTkmFyPDbiTlx/FrydRvTt3gOptgL8ENfUKdKmQLL4
q21IIA8Jhk9DXx2jYK2sSsbhu3ysne2s/aQpBjfj96dQ1nOx9ESc+sBhKoao
29KHy7hYVbepLrudyJMtXqLU1wJA/bNgL5Eny4cmfRkGXCjlj0oNrCXD/chO
pIVV42fbKjNXRRIu2EnFLnvPhUVm23UzWSrMd0+b/LvCw9nQzlHsouKp91p7
JfkahB7MW9hWFInfsv2D5abVCBi/lRRUFw2Ts7809noIMYe3b7U+PxqbzP2a
f1tyITWju1DsLRWuOptKwglem2lmXbZAlYxeebXCFzc5kKjcH6fzgozX2pfk
8llC5G8+62GqQofAoUjn4ise5qXlBAht/v/7SofVGtUqMEyuYj74xIR9m1aj
O+FP5WbJY4vIZIJf1MrDtYm8iM8YV1Gk4r2Xni9/GR9jlkOD7G6CV3+wu2VL
BLDSLHpclE7CqxbBgr9vuDC39/w7qUVFbn7I0sTZVVg4785Z+m8yvEb936jL
ELw/N/OKdgYZ4ksoRu3k/38/3KfepyQWc9sWam1WJO63ni/vuj8Ox45LXJf6
UgHRxsWzS9QZaNLPPPDeiIXzxms3Xddj4MW705vO/eJjweYSRnIi4VOXEqdf
EM9X1f2uYH4+Fd89nvzbcLISwx++nehbGwmnkwXnvYg8so262NMXxcSE5OYn
1pU1qNcc6Fk+GYX7+Tt07/RXwzzsfN/iPhLW4+0Me49KyM5U1ZqpSsLSWQOT
LwQs/FBsjtZ/QIdyLc160V0hgoRO2i/NydDQetF62aIayxTznZ8bhaMlfnHd
rVlCyHl6fxczpWCx/L/ooIVC/P7zMntgJApOZf4VEhwuzCbDVR8sYGC/byGp
9CkXW4N3HZ15n46yObfCGSLlyLWZZkTMoSFb67XL0G0++iYfVXvnRMFjnE7i
z2Wj2lA/7LkCDWXNfgdSFPhwvnnunqxeDGqqIqQPeVTAx8R+v8Jmok/fVzu9
7OAgYShpRedRKkidQ3sPmXBg8uvimpgaJiIE2h55kUI0h91Q03Ai4fn15pFr
i8sgO1T+dK0uE8ffh52O2cRFyuWTjl/7KSjMnD9xRaoc09VNJcLX8ajZPzu9
wZXwf781PHWijx7g+3SkGfF88ae+UUNomOipLNEgfHDPp6W1locoEFwm33gq
5AHpWrvY+hQsHNsW6STPxo4ZS7XphP9FBFtH687hIcUn5IffE+LzU+ThrH4B
iorCRMMI/qYW5sZue80B60Ni7UMvGvzGkiOkcjl4duYU85cYDc13P+rsI+bx
987fLg+KKaB4O1yLkSfy3Wa8IiwmBn0a5hvYeQKY+/Hawhpo8FnZ05VHZiMh
RHXlfhkaFFTnN629K8CfasePV89EYuBJ9N3Og0L8legufUrwpLSI3c7QZWz8
0356nb+BgT9OWrdMjStxXHfRxuh9MUjUU+sSzeWj7ttcb20yFUIX+TPvFtQi
64umy12CzzX2vSsZy+fC5j3lq7whDeUBG1UHfAUYtdNPVLEi49/LrVGfF/Lw
h5mzd8MAHdUmya9Y7tXQMR61CDYlw/BuVuyWQ3wsGnYSzgqkonzplkHKx3Js
eWLyQoLgK69gI1PhCz6aoj0PlxH8umVMnfI69yYmzmdat1yOgO3tqddHiH3o
/dW1P4TY//8AIeDIgQ==
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
bS8SYMvl3Ap/fSY0HozlXK/i46+M1JHFOhT2rXtUczaGg69SNM0H5P7vaObf
rwkXwmhJsw1Nnw6YOkVpE+87tnha6Gty/Y0BLkrbeDyEd58PaZ3OQPbVG6E6
TA7GhHEB1ccZuN/4YmTgAuHrhHkpZpEUNqcvvhpI/LhlzpXjqpeJ18VJVbua
CuHw95pIfBYTsmbP2TVnuRiQn77FL4BCf7lL8TjZtyuPXXqy1p6O+9ZTC97V
86C+zZNxs59crzeiyp/4DWOyp1f3BwoOVuov950mXjdfom8T4dyykW3FtwkP
7Aw83yTuzIAFjbtv2lYmppvRx1R/0THVb5ex/h+SJ/50Ld99dMjMijlXKimA
5Pm5O/IVaHisLG6wpoYLjYXW4ssfsxGzSazmdiMfyadbWTWdTCh6K7+izRNi
8lTbPyqE38zlfby/hXDwRinjgZYSEyzNR4/dOCIsi/tzMI349rVAN5+VcmxU
bvsj/SOWBbWg9eYR4+TfZ5Nu8Oewsaw38FryIgHSJlTefPmXBvevxa2R5PMv
3+468Y/HwId1ztytB9lYm/AqrlxAR/QdSwm1HCYKexIKVQmfXHCh1xUSX816
3ywRSebv1v5bzKEKLhgbHwnukPlXeHPjbuslDtac7Ape8IKOjd6UjW04H/cu
bfQr9KYQ39JvyrDhwX83b+AwmY9RZnb4m2TSRy8VB7xJP6lsLoxq7eDhSuTx
8dX1FKq9iwoMCY9VZKzK1uTRoTBURUkY8rD4p8QzBz4T6ZM2zniyhonySvvr
l4I4EAbk9yu9IDyS7LXpyREmtLM14x+bZ6Jqm3TQ1I1kXxovWt1mycKP6drF
95eQ8xbM0xA2cFGi5mHot5cOb56fzONoAVriLCLFimnofWSd9s87ExmrK5Qv
RTKQ6hoy49c5Ptzg6iN1nImv7pVv9i1l4nb57L18bxbOrl/4c/N+IdTUtyW9
8GXBIGxN5FEF4j86scqDi9l4as2f8EOLB7tTA5N/q1KoYfo/mEfyaOer5ASx
+FRUtSyU1DzHgdW4RPvWTApJwp5tg83ZZK9rXZOPTsX30ehpz204UJBnOk2w
YeP7osBc/x4ePvXlzry7jIauPZeNz0zmgYSlR6EGA4OGw4ue6rNxUs8yfTPx
3UavqQ2CsgysNBLO8o1PRuXkJef0HFlY3LJx51pvkpsPH5ccMWbD4Ixv0P/v
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
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {801.495785513303, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"p-SOS\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"p-p90RSK\"", HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{801.495785513303, 10037.189898766424`}, {
       0, 1658.6334307083644`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Reference\"", "\"RASi\"", "\"MEKi\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8677418652180443`*^9, 3.8677419424113197`*^9}, 
   3.8677419861436367`*^9, 3.867742044375515*^9, {3.86774213684758*^9, 
   3.867742152561706*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"de5fb8a1-0ded-4799-b60b-aa7ffc57a7dd"]
}, Open  ]],

Cell["\<\
However, when we consider the local response coefficients that we want to \
reconstruct, they are actually fairly similar.\
\>", "Text",
 CellChangeTimes->{{3.867742587610618*^9, 3.867742618785945*^9}, 
   3.867742836422505*^9},ExpressionUUID->"e912cdfc-6797-4ec1-8a81-\
928f58317a08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rlocRasi", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsRasi", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rlocMeki", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsMeki", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}]}], "Input",
 CellChangeTimes->{
  3.867742579238575*^9},ExpressionUUID->"734f7995-d9ac-454c-8565-\
73fe1c760e8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
        RowBox[{"Flatten", "[", "rloc", "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
        RowBox[{"Flatten", "[", "rlocRasi", "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
        RowBox[{"Flatten", "[", "rlocMeki", "]"}]}], "}"}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "Medium", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<rloc unperturbed\>\"", ",", " ", 
      "\"\<rloc inhibtor treatment\>\""}], " ", "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Reference\>\"", ",", "\"\<RASi\>\"", ",", " ", "\"\<MEKi\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.867741841223709*^9, 3.8677418419942207`*^9}, {
  3.867742251090735*^9, 3.8677423805573797`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"d8886505-1903-4153-b5ce-92e8944b56d1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Medium]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPjDllJcZdf7ofRlJqHDmSS1j759++9
PYyGiFLP/bQGX6RddbewfrCH0RBR6rl/p0e07ayWm/thNKXmoQMX9qbvbIHb
7GE0RJR+4f+DdzaLtOVbexhNqv6OWZVyl3e/t4fRENGhk34+PrdYZjz3nT2M
hojSz/2ynjdvOkmp28No6pg6dML/8yyOG8mRN+1hNER06LgfOxg67t9Wv8jz
0K/39jAaIkq8+39nFR1gsz9qD6Np6VZsQCr8oJNh2Wt7GA0RRbgfACapj7c=

         "]]}, {
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         PointSize[Medium]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPjDllJcZdf7k84Ma2F6fwLis1DBzJJ
a5/8+/feXu3TU7Mj/9/bQ0Sp535agy/SrrpbWD/YP92vah/C+IHq7t/pEW07
q+XmfmWT60FtZTepHh4u7E3f2QK32Xcn3Kt+lzmT7uH/g3c2i7TlW3tdie6V
Yeaw+CcedMyqlLu8+709S/V5gYoTQy/9fHxuscx47jt76VuL+f/cfkd398t6
3rzpJKVuXzRFlFu2n5Xk8McOhk74f57FcSM58qY9V9g1ju9AGiI6dNyPHQwd
92+rX+R56Nd7exgNESXe/b+zig6w2R+1nyO06dipzmVUSr/EA6nwg06GZa/t
m3i+JZu5YLofAF5yj8M=
         "]]}, {
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         PointSize[Medium]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPjDllJcZdf7l89lVUiROchxeahA5mk
tU/+/XtvL1Msnzf173t7iCj13E9r8EXaVXcL6wf7j342a1fzfqC6+3d6RNvO
arm5X/sA+zbfeTepHh4u7E3f2QK32fd6HGf4L3SE7uH/g3c2i7TlW/tjmkZh
8n9e2ZOqv2NWpdzl3e/tb94Se8v5builn4/PLZYZz31nL7c8KbJtHv3dL+t5
86aTlLq9nOqv/coLrEkOf+xg6IT/51kcN5Ijb9rrBzfJRkTcHHLpBzsYOu7f
Vr/I89Cv9/bB2w+AaYgo8e7/nVV0gM3+qP0hv70MCx5doVL6JR5IhR90Mix7
bR/x1v3C5aZnGO4HAImbj3Y=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"rloc inhibtor treatment\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"rloc unperturbed\"", HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1., 1.0013925331456877`}, {-1., 1.0033375517859293`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Reference\"", "\"RASi\"", "\"MEKi\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "Medium", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "Medium", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "Medium", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.867741814259746*^9, 3.8677418454336653`*^9, 3.8677422929629507`*^9, 
   3.867742326399631*^9, {3.867742363908987*^9, 3.8677423811216373`*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"f9a59153-28e1-46fd-b922-cd9d2adf911e"]
}, Open  ]],

Cell["Although the Rasi rloc values are considerable more similar.", "Text",
 CellChangeTimes->{{3.867742843912752*^9, 3.867742849966742*^9}, {
  3.867742885940913*^9, 
  3.867742908847382*^9}},ExpressionUUID->"c0a859eb-8923-42e9-af40-\
1212ea45f866"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Power", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rloc", "]"}], "-", " ", 
        RowBox[{"Flatten", "[", "rlocRasi", "]"}]}], "}"}], "]"}], "//", 
     "Flatten"}], ",", "2"}], "]"}], "//", "Total"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Power", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rloc", "]"}], "-", " ", 
        RowBox[{"Flatten", "[", "rlocMeki", "]"}]}], "}"}], "]"}], "//", 
     "Flatten"}], ",", "2"}], "]"}], "//", "Total"}]}], "Input",
 CellChangeTimes->{{3.8677428547800627`*^9, 3.867742865511817*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"a278a236-4d0d-44b6-b499-f83396d4cbb7"],

Cell[BoxData["0.03785333053611153`"], "Output",
 CellChangeTimes->{3.867742840217128*^9, 3.8677428728831587`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"89ab2c1f-9ef0-4fc8-8e4c-8013bd4424fd"],

Cell[BoxData["0.13353118024857802`"], "Output",
 CellChangeTimes->{3.867742840217128*^9, 3.867742872889316*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"4b037ccf-f0d2-4043-b667-4ebd765c42ef"]
}, Open  ]],

Cell["\<\
The interpretation of the rloc values is the partial logarithmic derivative, \
and this looks much more linear.\
\>", "Text",
 CellChangeTimes->{{3.8677429133036947`*^9, 
  3.867742960845295*^9}},ExpressionUUID->"9549199c-5a01-4afe-b307-\
4fd8ec6eb32f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P90RskActive", ",", " ", "SosActive"}], "}"}], "/.", 
      "population"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P90RskActive", ",", " ", "SosActive"}], "}"}], "/.", 
      "populationRasi"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P90RskActive", ",", " ", "SosActive"}], "}"}], "/.", 
      "populationMeki"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<p-p90RSK\>\"", ",", "\"\<p-SOS\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Reference\>\"", ",", "\"\<RASi\>\"", ",", " ", "\"\<MEKi\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.867742415487089*^9, 3.867742418812889*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b9a720d7-d575-409c-9497-29059421709b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwcm3c4ln8bxu2yosRz30Y9NzIaRnaiC2UUMiqrEhlREflpWVEkWyLKyF4h
GQkZRUJRdlISFSpESZH38v7V4cA9ru91nufnRJS9u5kjEwMDA68kA8PKv5ZQ
xNt6mwL9mgFn14sEMHEOdy38osPq7bqV6TwkJBxbb2UdTAHXZEr/amECXjIc
jXk0SoeyNdZ7L6mQoCjfR+y8SME6vXLBNdwkHOp3b/TdQYFR1hnLJC8CWmy0
NBfaKJBrm4ssVCKAf32bRb0OBa5Gug2+6SSs8bo6UXiWAqF8zqwf0QSouW7P
vc9FgW7r+kn7syREdl3Za1ZJQYnVo/RjjwmQqqvbycYsCm8T740ltNCgPMN9
e+4MHeieQSITvwhY7zb5Ziybgt65LSrb7Qkgq/Zy90RScOqgQZLYXQLSpyiD
wv0UGB9/wv6vGp+vyoivxBLvF+9eZ2NBwOqQi5a8x/F5RsO8JJYJWCv+4PRq
HwpcbopEsWQTsIpp2+GIIAp4fVpSHSRJeL20r7FBCOd31l1o9BYBHzLuDC/K
UGDmk2FB5yThSPjf8Xj8WP7X1iS2NgLc0pbTo/dRsH/fpHPlWwK22F15R9On
QGuk13BckAS3NaNKoct0iMpe6tfNJeEE25sPV7sp2MeiOHVCkgDFiKAiHnwe
2dM+p0r2kTA2EU3rNaSA8EmzkYwhQeGOcHmcAQVLHD/Wh7wn4LAnTazLloKM
r356O64TUFBg5Ufg/ZYf+eWwKOH1fSXM/hOm4HZJ8caWXhK2HNjRZJlPwerU
j76UKQGg/C530JiCsC1Pczp8CGhdPOmRsoeC0yMPwvy+EbDxyNbkob0UvH5Q
yaxDkhCxFmLWB1Lwcumc3u/zJIyKXtL5fYYC6+eNTc9GCGj/8W9RJhXnXVK3
sx7n0XRF5dbmpxRYra9+vFmRgPmGpdC7myj4Hmd5d605CS3mAv+lWlNwufQC
eQU/v1Y+/2zIFQqE5VbNXAgkwPDQDvcGVQp+bhHxLBskgJtnujFIloLjD4x5
GqxJKPa08wrHeR95qHLtI42EbZXrTrHi+3wdfBueJEzCjIV27B+cl99M1qUw
NxI2WbZYO5lQENNtvXfSnYDxu/JvmC9T4DZeEiaF72fhr7MuqIMChdw97C6x
NDikXdsi+hv1kDzqK3uXhMDdkVyimhRMj6UcPuVDQs6FhtUS+P7GRX+bjzHg
+ZiIxbtTFCgxmcfzt+A+Pmo+NslAwURbXORCBQmvdtvor4ul4JJ+qpzdAQKy
7g9fG3aiQEBMe/5NDwH3potuKB6hoPRqg2+bNgEyq9o9WUkKrvt7vT/jTkLM
CRbvorWicOsHUWTgQMAXqfkDyqhftf2h73IZSXi4TdhdaZEOQ0Zz4zb2JKiv
28zllkXBYVFePv9FAvYo5xomF1JQ3G9yJpMiIEBRw6W9ggKT5p/hOskEcBTH
y+mdo8AjTrmlYIyA4tYPZn/rKfjEoLlhAK+vmlYQzI96+rl3/l79TQKMd9nI
+IZRsEaiw3sVnYTUCcHmeTPUi9gBu3GcZzJrexelSEGWMCurQz2e3zhce89C
Ac1ny/dXFAlme43Hy2opSJeHn/lPaWDbHbI56BQFhZYfmHcfI8CrzfqXOn59
hWPTE/N+EnyeJOlP4fvOPtBrXq1Fgtau31e58et97tk8GnpIQJfvyCO5x3Q4
m6UaJ5hEQrXIP8upjRQ4lmswPI8loCK1KtAAz2/j5+ybVVYk3G9Rspi+QQHb
3DyTeykB1TR7ac9HFHRKXBLk4iXg0stRXkD/ZOY7N5iI+9eyUK81g34z9uvC
2qfHCXgkbrRhDV4/71BdnV0e6k3m7Dm9wxSIFbx2PbCJhL6O+osFOE8Lymw1
K/pXBifTxI6jFHDkluR71BHQX1iiKYf3E0vrvhpohecREJfme4KC3ywHS7ec
JIGjPPqmli7er2T+lP5XAjw5P8vMu1LwPDCY9xrOs2Vna1wcPl+BhI7xEz0C
4tTfK7JKUnD0iqlzvT/uy4W35xs9cT/lBny4nhFw7nxX6xr0q0Dzv1InOARh
Z6zb0w2ojwan7fTUAgKWCR7HSVbc7/GU//iGCaj0Edt57QkFqT++x7nJkkBx
h+pnVKF/Ji7+GNEkYOzYLddrZRTcFNWZLKlF/+4zDRaOo4BHzFJ33pyAs94L
VDQnzu+8zbd3B0j4suTAr4nn/fTK5nNfPtIg4Ym5iCudgg8uemnXQgiwgKik
Z4B5U9cgf2I1CdliD/k32lMgyVr9iiWDgBqdaXdRLQo2d2yfufaBhNjsPwk5
6NdLfNqyk5g/Jf+2C/cl4n5aNqgqTRPgs7opNlaagpNL6xQu4fu3dPZuu1NA
QXimuhI9B/1N5fUmZcwrXgdlLf7fBKj0x8TuQb8xXO2VEb6OhPHwge4DeagP
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
q3PjKvJu7AVfhYo6hnRLzd+bvhx6UnZpI7OPfT3IItMl6O8nHA97D6IeJ1L8
bF8EY/s7f7g0sp9/Md0pwn8Yx9MY97zmBkN6xPtzyiIocnHuKuuTWxnCqg0Q
fNmL329OnfRF3uYumF6xMZoi6/h2zvPF/A2OqVT/bBchScL9EebgxaC8a0JW
4Kebl4Re/MP6npquqr7xCzzw7+s2+x7wRpttrokZRSr2Plcf7mWRs8IvDyTZ
0kQqJHbsuAPqK/49Uhj++N3f+r1rC/Rxm7+bHjf6STA5SQrnr3PaflzaAXmh
Y5lsMfR38AB90wr5UmDueWVNHN+NCbXTiovR3+ZunOzn2fTWDvF3VkIf1h/y
eJuB/qrwzU5cC14UcXbPhf4/ZJ5snAse07NurB3C+YSq7/13QRj80JKc+Rr1
4REXtfiN/l+o6rmvD/OYtlss28mSJkXDXX8moW9Ru5LiDJCvb71yq1m1EHpa
lJa3KpAmC281XwysZZHOnlj1n8GiZHHsm2ev7yL/CYtE7AE/bTg+dquGfT3E
lpWL10P/iu5fGMkCjzqS/a8XnGTfP6Q0tPkdi8RZvmjP+UWTvtd568cOs593
NrZz5gxNaoZ+fjv2ErwYsC3CxAbz91+2dK8sQ6QOPJyZDf17MGwQsAHnpzD5
SNcthSKzT9y5Hv2DIRt9UnVf3BIhMfH9p7di3v4JlC38MYcm2St4ikeboJc/
k8a/jYuQkEyTK7PPo9+SNe5GgJfLR2TnGN/C92mJ54axv8jjLJW8PIbskgsp
X8NPk+Hwzz1/4D8P/Q/d/vsX/rNjLG8X9IL+PDlswon6DLztGEc++HNg1SIz
H9TTUm7A4iRDOpMVFMQ8abJVtFk3GTzafuRHkNtZ+Mm7KMMloQy5o3XH5fdl
muzIzCv+ivPX0LgWOOKMfOjX/okL+WH3xtVh49Bn98t6I8uWQf9MuRfca6LI
oo0JJ/XgN9179vjOQb/mzzZxMgF/r91YVN2MvNI7S+QZA/47bsT/+N449C72
3Ur29bjb/GyjjaOwHh/XBcZiPmf/vc2EYX0NRpY43kQ9Ho45lXlCv9y+RJud
i8I8HLS36N1NEfLgs3EX+K51pCrq3nOazBY13GbxAP1kvcN7P+bHSSRDcwu+
t/40rN6uRRNFiWotSfht9pKcb3KXkCdi/+Pun8+Q+3NP+R9ZIUrixrXfVSKf
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
8WWt1earDDlfv28h32eKyNe7n2X/fbnszCyO7+j/G26XTpojbwYe3GKxjxfr
odLh9soM/Xm+JOcv8oTuGCt6Dvil+9oDi1nDyPeivgWhWJ+5g7Uhs8An8T4L
rLaDD2OSM9+HXsP8mbsu2oT9XxOsfrIJfuG+PTHwyVvkizkus5OQ54/PSeOK
fsCQ23MjDI3BB1/Cw3zY97+uCnV8uGEU6zf+MjThJEM2ZLePvarBvJ7I/nkm
giFCStyc5+APi6rHTabGWGSnevpFewOaaN3Oob8iX2Z9s39bOyNCOLeschZZ
B16L7jSNgr+Uyor5aICv/tQVd1YGUESuuTnshCRDTqwQnynOoMmhhLc67L+P
5IktdzJeQJHPAae3TSKPHm37p+aeThOlNxHZwji/1mPxF5Y+ocnQic/PW6G/
BW2OaycxH8XdqsdboO/Fnf5c1fB7e13VonBR5JOq9RoK6Nf/9psk6YCH+Ub3
6LjB73s5p8kK8JBujW7wwAr4s7Fr3RHMX8yQoSwL51/p/vB0bCpDFEaLj9Sk
UqRzzfHyGsz741kOt1vRr9/bW2t0tBlS89fu1W/wcMwVZQtx5I+XP/99sNxI
E5Mc/4n3YeDxeZkjxymKSO4LWCTNh/l2TeNQxPpfuVOlvxB6Zq9TV/MzAf26
LuPWZeS18TMTx5cmQ49s1M/6Yf0P2CcFKSPv/cqQk/+F82/xdnZ1hP46SA47
X8f5xndwK9Q0UuQ/mSv28uD5NyW2x5ocaPJF2fox+/42+pqNqsw15AUHs02h
yC/+AyUjfenIe3MCng5gfTXN51xTjwJvZkl8F8Rnoae9LrL/QV/iHs9TB0+v
vXfPeXck9F7a3cwL+lEdqWnwAHw21Dz4wv0p5mOH0LlV6qJk4tK10uepLFL9
09urDn653+mkqbMb/OWh+k4NGxwf93avAsxnzrq/xmN7aHLqdvaSeeADT7Xa
NrlemvjlyU45gI+e7VTdcgznG7zWzlRjgkU4Ik7dugS/rTLd03VbFnpe/2Ou
TA5FBJR9398EP30qSG1l5ynmv9UD9kHg0x26pgtCKGJCkurrlMBHf30PLnak
iZjS0W1KesjzN/p2+w6i/wavvE7C/P0Ze3IzRwr+d3jX+E7kt0VbaXUdLZpY
f9n4aRfybvPNAHn/MuidoanUunIWEXn2qM3eUpRYr/x8JBn+FH8o84rBQazn
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
EaThME2MHXnqxMBzG1yEeD3B/+l//YmWNpN8d7vgePMcTfK+Ua2FmsgPT94O
35CmCXvdJqcLyN/jd4pkhaOgz+X6/IpYf2/+4CN5yNMvA+ulov5jkKg3VDdX
DfjXTFr/AupXdWVLSm8F8rwWT/Q43l97ITim2Jkmzt7up1nf59Ix7BDmv0uR
26U6jJPg39uzh74oO9DklcsnJVXkCeO7Lq7/PaZJvWfeVAyBvhjsl4tC/22S
rsj5iDxlcM1KwD6VInESBTlp+H2B09Le3bU04VZXeZ+IPMEbcf6BA/REKpG0
eYDfFUws228nUETZwu18JPQwm29HVQX0X3dumtPkGZNwHdY5/y6YIlc3qJVo
gJ8uzORetAX/pEhbB6V+YJCFJZmBY540sb9lYCiM/Jvvxi6Rif7ojNr0YA38
ycPuLIdtOtZPZXCAjYdJ3pp9K/NE/kidudJTgvFd5FfLlBGnCduDyM/O6HdZ
BwslR+S1r7X9fMVDqC/xp75HbSjCl/28VxP6qaytfyn1HT/5eFhIKfECk5S+
ZbwqeANerVjQtw/94iZxu30f+PrpnYrcFPjXsna6fSl4/mfoe6ES9OOvf/0C
CchjHJtlH/mNMsjeyil/KQuKyG1veHNpE5M8CNbY+ieNJnMl1RGsv3cnll0U
/QFe23IoP6IL/BFs5/DmnDB4JVWf/wf88zRXLtuRMzRhHog1FTJlku6kwmKr
/8DTB94LHWd9X0KCbZGBIkUqdqTmnIiGX+Yk+s5n7Rd3m+9myBom0Zcp/G6K
fpooH0vTyEP/n7B71M+kyA2t+NZbL+Gn4taPbw7TZMkoj5Yk/HTzxLKpzmya
qBxrDlF7xyTb72059Po4RVbEpyrzRjHJZy1Ni1Ez8M2LrG1z4eCFikG1dvDv
1+7NKi+hN93XozmObUF9BKwZ44MfjvySOjliTpO9RbueLUV9VXn+W2WK/Cxv
QdRY+1uGsp+5n1CBfr+qvusFrtcZyajbCd6+fTfqUMMqJvm50v6sgC5NBvqH
pzygj3abxl1Y9T8jIT49hPl/n70yeLsLRaz+3PjvAeoh4r191NdIinTtDTli
bMckX04NmW7MQ75W+fetHfpGSj6EP4Ye6e97T9b+YpDWQ7MGX3PArxNRi325
wfOKzpeNUT+/qzJ2SUAvZms3mCSco8jGjECnOPCa78vWecu3Ig9523oMo987
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
wMzlHvh87rAPN2I6UU/Jel+qo2iSIf467gzyivZboroR+lbb+SMwahHWr2vn
xWDon1bZs8treJkkSt30oRrqP9/dvHsSfLvy02GLC8gPDqYu85Tvsv4eq5ux
Zx9NzjjNadcjzzpK87R1oh626FhesAJvX3yt13IU/dnHpm7B38wktmuPH92U
QZH7E1c/yKC/5n6d4mMYov4LYlODsd4x8cdX3Ie+eT62WpY2ziR3DJasugb9
aSxbubBVm7V/8GO9I+HIH4PWiluhJ8/kN8k83Ig8eXtFtdoWJlGkTKujttNE
77dZ28Rh5Ity5pdYO5r0r/t91Ap+lyqtc2TzEEV6GlrNDz5mkj1Mm+2t6K8g
h63XP7P2u+7tZJtnSpNWsfmVqx8yyb0YvnZKDf2Yq0utuQNev+kv2feJIjbn
vpoIvEd99MfYxnzjJ65echH58LudWVUC8qjnM1fqs5v4mKQpYdnqc6y/10tP
N/Tj8wY6pwIT4D8h2Vwfg6/geokxa2R/UKTMMFGnGDwa9t7vjreIAMm23Pri
XQuDHK2aF3L8Hk2EeDkUuhsxPxn63XHIy9paVU/neyMvTndSiqMUsY59EqJe
hv5vVH5x4SpFRn+/Hj8JPWxL+TfM2t/PqzSkYCH6qy66+YBnFUXm5z3a0QOe
GBuJ4anEfGZ91Hb7ncTaD03vmCH4TkXl1MXNNsjf8a+e1Dni+twq5DDmo7z0
meVl8BqH6I3NG8GTxs/HZvbx0KS0tskqDXp3IeGVkKsEeMqlakv4BOav90od
nyo/EWGsZXBSTLLkYKDeOfDxvCNrbDtZz8ul6K/MZz3P8VfavTgL/Hu8ayhg
DepR6XD0Xuhx2YOfR1OWUaQz6ItGG/TXKpZhtxX5YZvLpdue8AuHEtmMMydo
EhI0qe/Gev52IOVY70WKtNZJBs2iPuX6tr3/JkaRPwrB83JMmURNSo6aB37e
YqcyzxD9J6l9ReaGG3hJPmGzBOv7P7aKh+OX0kTE2UXjNfi69qr1G48kirg/
UHu0vgX9ne69e2I++PPEVZFLUwxy1qK72qCUJllOl4m0IO5fzl/9EHhD9egx
eWn0s16ktdN88Hjc1fSMvSuZ5LCb462kAZq8aV1t6cU67/K5TL0n/MwnIT0n
i3Xe1YNrB2YNaLLo4s8FrP0LQu4uqeDE+nrF6H6yLAAvXFFl0rMUkZzIuLCv
E/nt6dN/cmspMpHdVFmK/siRs+BWhN+Z2qQKHbZHP9jlZTphvMMS97Q6lZjk
SfXPRdNzNLEaPPpJ/BWTNP+YHtnBSZFuUYvqjdCPK2HTq3O0wb8ntT6prmGS
h982idxg5evOvrz34OXqvPp4Cv0562vGY3eBtZ/LjYXGO2iyIGH223fwFX+z
jaUQ/NzkRlTfiRTW/z80r1LrKFK3gv2+J/zprf1E1vhNzJdg+TlN+PlLqyMB
Wbi/8/FbjFjng1oPFz8tQP7yLbm38y7u91znw0rGKD+pMGvTE4D+cPMX3xqA
v077/p36awk9zL5jPoz8lWnFNjTNhnraMm9jN97n4g2/9VwK86lw7uQpKZo4
XHdbOoe880OXg8qB3u1n3o8irOcPBVzvxnrQJCcss3ghPj/5s8Lj0uUCRDbC
oZC1P1R9Qp3rYnnwt/fU98Os51G+3OzheEiRfeNPL3/C+oxvq/CKXk6Tqbro
4Ao58KLF3n1vwQOXv2Vcln/HJPsOj/NqOOH+ogXytyK/6Y67tzVep8kK/50N
4uA7J6nVhU/30uRvvdlJ1vNb1Kk7UtfFabImxuG/KNT3vnv3iO5n/H6nyicN
5Js12XfHy7PhF3o+uwKg78v5nVTXXKZI1xbfxnr4U/XNvh3rX/MTndArFrYS
0Kfyu9rfEsDP+W9sBm+wzjfTlxBCPv9xiz5+CPXiIk7PM1tHk/RblaoDyKv/
Yl1NOPDaQOW/Vi704/gaPrNnGL+PuWZ1IPRkLmnxY7lrNAmIU9trtYdJpEaf
WcTBL6lvxoms71ctPnpN/S/4I/3C9nOndPDz476nG5vhr3F7SDf4Ven7kZez
0JejK9v394DPgngdDY9gvh5/OF+83QH6HGQSsO0r+EjqdnbPEiZZ/5ivOnyU
JpeSvpeEVTFI0zNfI3qjADlZdVm7BTz17luStyf6wbz85tIa6M3dUcMFeeCT
Rk+2Zt9E8Oea7tW5xdCzNv2qNkcmoUfqP7Ufx/p1RHgGpKKeVGpEu8EPGkYb
OTbqQR+lwkSeeyO/aHJIluD6Nau/Bushv7xYd8D6Gvz9j8Rj7UDUT0b0jaDF
mM/EmTPSzD3o54mTB8agF9mDpwJln1HE8Fmi42XWfnALbzuywd8mbudIP4af
vhmcLKw4jPylk9f4AnnI9l5KSd0gRXyfirsqYD4W3xLt00f99/on+DfaMcn9
IPlPkcgL6TN1XvqoLz2xdr+NVhR5VCmmYDQf/ufcMWKhi89fXqTiGM0kuze9
frXbmSLHlqXdUs1jkIk1LgdiTJG/T7TeCEO92WuVLBMCH5ncSioY8WCSr19y
ZlzPg2+Wbu9b4gO/5Q6xmkL/UucajhmcYxLVZdVlgb0UiZXkfumcwToPe1tE
DPJvvvK8V4/wvmW0ulkqeFZbJPpkF6737BFbhqA5RebCI4pXIv/e2dhxsh7z
/2S9lORq6P+VsXy35ch3LzYPyVQMMIhwg6e8xmEBYrY3+ksT6qkoNOVVPHhL
W67zlzDrPHvvV+lvz9PkLvfjCEPUf03UnYmVeJ/HReDfMlxPpdVWhbpMk8mI
T97SseBRg7NKD+wp4r/CvToQfh+hcbRxNeu8vev5r36BByvKma6s54seWl2O
/Ij7FZ2sfx0DP/FqfWAZztp/MWQH9fsQ9KftjfYU/CNibY2aBvK1qsh7TxvU
54JA/qwe6LnDmcWlZzvAP1sPi3kfokio0L/rZz2ZJOXK+0PHH1DklG6kryvu
Z9F3+W9jj2nS4DXOdece5ifdyf+FBfJJ3tyerdCj0V+y+yKhh5sdM/W/MaHf
RwpkN4EfXqpalA/9YpDUlNkEMfDb5NFDRZGoBy+7pZ4t0IuS3fKpgfCT3oM7
BzXx+xqqZhMPZhhExPvUV0lZ1Ovg3QMVyOfRs/e9t4VSpNfII7EU9Z55p/rN
UvhbzIkUn3PLmORR+FZ/I+hfsp189h7kufEZzpQ23H/c4NoSUehjiHhNlw78
aXHOpu73rPfFp9cv7qdI8KRpI+t8mqeR/HE7wiiy8gTX9G7UQ8Obn8EvxvnJ
lhV16WzgG+usr18HkRczSiW/3+pmkr3MgZRtI/wkc9e3zyOY706FE423U8BH
n5wnvq1nkpM6JusV/6HelrolRfhCr0bW7ViYThHpzc+PPMP1Wnt+fZTcg/wr
V71u7DLWh2P5h6dfUE+HPONYz4vkrt5buukO6tdFs74d/iQZ1nG3SYEmsbmd
H46BFzN+P+bieUeR10Udquuhr7zRezed9aPIj8cd+wSRXz89mko4RSgS+Uxl
rSry/Ju7v4UN+yiit93crxB89fbiv9w5jO83889TAQ7w/9JVNcXQv3GFoW1W
0I9Xu7aG/sT9pvkU2nKDB4eNH4R3wR8OOJ351BoPHvYTEzx6DfqwTen0BfiH
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
V+ugPlicTOIQ9KCpX46nmL2fYmH2gv/gb5ebBxV/Qr/NLH8qPrlIE4c3NVuy
4d9HXbN8Zv0RJTsOuyYsygEPegsPDI2IEhZLfAn7fBYNgyblOqxH/8e0bzvw
vM9p4wfs71e0VS+VXoh8PF4c9JRXUIzInDadeAW/4P17ftQfflT1PrhlLXjS
aJbm6SPK7PffiyVtvrCItT2ncUEaDT0tvKEGvj33+uv2VvhVov2ZYgp+nPCw
e4Ew8rZf0BcVk26MX+j1MgPwb/L+BTalx+AH4g9TrGTw/ALFKaPoZx7TA3+V
PGnC38zTF6QM/79wW2wG/1aTMtksb4P6m6VwwJF9Hm657mcrU/DWFU3D13rQ
n8MH3ziZMUTqbZKpzzqabPLYcLb+J4vcuc6TUVwOnq4zXfoa+uLyh3cqazNN
rte6S9ethx/HjdrEdlMkjctmJfu8vn6tzGdy4N+msnVvvZAvordcvn5elSZH
BItd7cEvLnahCvPgDxeqlJdUzZUmY57R8weviZJTYbye38EPv4U2y67bC721
zkucLcHmuwDTxZ8o4uNhGBwDvumyDX4lDv5ZGiuYZQc//WofFv5sD/J5Jy9V
hHxse3RZ0otqihi6rjqeqMMQv7HDNcLtNOG8uMXlPfThyPsOeXfU+52w20+U
2Oe12EykeU1QZPayxLVhieDdoMZHZkPg0zbengHwoE11ve3dr1j/sshaHej9
35yN93WxXt/LHiSyPw8QtFPIEcV8CaYeu2iA/MIrytdyH/7+bbsFV9Ub8FV7
51yXDOjdhedlteDXDzsj931JpIjDW16HRqz3WMztS+rQ058KxZ3deL6+ipYN
ivLox6HtRYfBb+9GbVc4uoG/p26lqiLv5Aq7NcZAv6rmcUgK90F/m7gjnOYj
fxlG8y8Gr1wzslvfUQr90onOO4jfV7lilR6A9a09Hz76uBf5/6M6t0QW/DWx
bPt39nlXWoLJ7PPDR//d7+7mkSZhvR9+T7LgN4pOSyzB06MNU18k2PufWXay
UjIZcpZnDtmwlSKdgzu+ODkwpDEomgz4gXc+2X1WyWORjQY/XxYtECMqIwWP
Q/ewvy/7cHeFFE0uD6vPlaqHXkissDiC/BvcnfNJxQi8Gp6h0s1Pk+VVgnkd
0Jup5TvNVTD/0of53nFgPdfyvs7c30wR5aSr2zucGfJoq6XBFfb5tswzPTXk
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
v5OmyPDl8v0cyDuuXYpmvx0o8vXrydAQzO8BSVblDYYmq1wMDhyB/ms92Pmt
Af4lqXRG8GE7i3AKu5S3nKZJgv7IfwaoP79TPGMVcRS5Ppl95xz44YCVUE4Q
9Fity4vrMq7/x4nfROA5RbYIterlYn2euvMVz+uhiIfzH82ORQyp4SuqFGB/
ftagJVYCvc8OilW1iqDJ61l+W16jn99qPHV0sEL+9LeJK4a/CIwGDWp6Q68c
N0Vun4N83L9KWhB6vSDhSL4UYcg8pa598Qk0OSSpEZkLXtQI7mM8kL+W6R8Q
sPrHkKygY9VyDaKk3/XJjkQrhkiOOvxQBV/29Sz8zwR666Gupx47QhG6726g
F/ozoUdayfwueNPnv4sttgxJ8n1ODRjQxOCuhXJxD0OOH3nwTOmYKJHfrCTF
3g995tkayQITipwq1qowwHj6bl/92gHeC9fha9vGwZCK61liHIdoMsiltVce
PDm9IJjKTKFIwNN7GhHBDJH1e9Ef3wp/iwjwsQVP3bd3/bwAemRsQu6uwf2v
8uQaS+ygSfftqSjnGOi782+vy5cp8nckvfrbOxb52VK+MB48fqhttm8U8rrJ
48OR7lgvqbilgdHgWdONc1VWrqHJUZUvxa1Yrxc/+Osm0F9/Oz4980Z/uLpw
3VS9SRHz3JaTHMbsz7vmBFX9pEiGx7qly9FvBydE7WbgNyuFvvpdgB58+vI+
qu2DKEkMr3D/Ar5ri0+yUELek3OtK14G/1Aw6C05C77Nmt96MasMevNJ3myF
CEU0P1fxbzfDeikr5xn/o8kOyd2WleDZlwbuaqm2NLHaoOrHfn8y50j/4vng
ufHO0jBDT/Cr3YVQJfjXRIet+uYvyLvL6tzLHZF/Rw4mG2G9TnmUHraGP/4K
E3pSO8kiwpNJXwSgT1UuQtViyCMfjpW0WSD/68w09VyA/8gcuPamfA9FDqem
328Gn5lZWFYqLML6qH90mgbP/aycOqGD+h82bp9ezGJIZdvxqtfQh4aJ9SPG
WG/rfkunxdXI5xu7QDHQe7HGea+vUUShdXluGNuffjrzZSbShFLZ+0cE85vo
8tS3Hf5zLC58VAj6ei7v1HgC/Ll9l9GdcfDgnzqu3MfgpbXPJMauHwWvclya
57aeJiot+vyzHsDv8/V89oP3Dp4xuRUCflkT4/kjlUG9CCUek0e+eOG8100i
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
yPf9877vMaTIsx6j3fbQy9leNdYlNhQxHRDgX4D+ZIW9OGNrRJEH55rKOevB
54koPb7gS5PxiqxXExlsEtb9TucDD/JyW0XSp60Micif7+i1nCZ1jZ7f+dCP
PXKhuW+RZ+ebPimXvYzPy3DeluJMkag+gYxuWYZE8ZmG15jQZGGXflrESeiZ
gtMK26Wc/zvUehagP7J/mfH5F1Pk1pf6T3/twWuaQcPf8fnGm75vsDvBkOcX
K8/kgbdcJ0xeVWK8hIVkGpO14S/0zK0U/Py76dZJu0SayPEf/zgFXo7scjY/
d4Am6jNqLtng89jpt4Lb4d9VGR90HaDftwJOTHz/jyI7mYLJGIynsq8lUwT+
KfXhfe2H8Wxz/qi7nUZeqdkZYwk+5hr+7SUO/U688q1ZoYFNaAnVzrtXaaId
ZhBlDT9MaxkNmJhDk1uPZm0Q0mfIs3c7LNLeUKREWi51wXGG6NZeaexCnoiS
2ixgCf8OXCw4/AvjMR17Y2X3fcxvopNY32Pk5YuLmE+o72utC/fMeIG80N58
tgf8zevaWO/URBHtZZY1rnsY8mHRP7Ufspzvl0fLmsG3XBfkVgk4USSp6HGk
axaDnJ+aI2VHkeuZa0bsrzIkpO2bjhH486PSxZfnkY97ufJesOGvlV2rJYP/
scmfivmW/lxihMfv8LEFZajfkBm733H2B62dIfoYfvz15sSSq3Xgv/z5Uov+
solb1ezr4m8pkixxeudL5LeKqaP1h07Q5GfwTq8q9L+Hjoy290Xw0cm6ws7n
DJl/9GXAjpUUIVfuVb8ZYhORkO7r4ugPT521+1dhPAx6w5cVT1DkbXn51E34
0YLW1jon8Ftc9lSUDvLy2c3ikzXQR8XKwCfR4IecslMrN2ykSXZCRqWFN54/
ntfHv4ImLlc+8nP2z722ptHdfhR8Myc2YDn0xmxy3mXReuSZGr79neCdifS7
U9cN0E8L+E81IR+/0w+UL/BgkfnPFUvqwetlt+Sa69oocuShaqg/xp/r4Bc5
VYz33V/u7tsxv/XrTk0H43zeM3L1bPhP303biRjkc6Ncj9NfwR+3NnzRHGhh
EYFVS7Pm4v3MwNSUnAhNxDZ36oW+RH+vPFXljdfTrsZVZ4yR18dHF3iDr22K
r8yVQZ7x6Nuot9yaIjVJBWnBgcj7KRtlO3SgZ9xchY8tGcLt3l1iAr4ovXZ0
KPcxm0Tu5Kn6/pQmoetq3ir+h/Gm+nb0gy/oui6hnkiG8KgVLPwGP+0ZuGbt
Ab5+cIdESfIjH60/uTIQ+i1+yDxD8BZFuC++ruBnkAfWc/ly2SCPkuoLv3D8
VWUBTuXFNGnhc2znrHc3rLs4fdF96NucTmc5Lui/jtePLch7TessZxi+Y4j8
+B/L+2EUuRwV1JWB8bLUGh+ei+stVRHXcQIPVe1oUzXro4gIbevnw1k/yDs0
11oF+p66+uRt6KfXo9jZq5HPwsL9u/aG4vz3j/mxV1DEJEqU4uzXMvtaWVAD
RRF5530PBdF/UbGzAvKQz1UThjWKuthkVVzInXz019W0vU3FyIMbPUTvvDsM
fryie3tsAUPaW2zTZpyjyNPemWcnFnL+r+LGqvaDPkgwTTIJ4IOyQhPXBxT5
Z+r5uA762PjK/rP9ZtTfjjO976E/Z89sfViFfBp9WLGhaQb8rndJcs4y6M2U
h4xLJZt8PbqktQ79xArd3ZzJuX9P9jDr+WeKfJI3L0zDeB2JTek9vIAm3xoi
9i39B3+bLeYcc5JFrnetSAjCeOTvO6XtB/3/Umfu2fCFIe9XlDc67aFI8ZBB
zC3Ui8stkzktozQ5G7c2pC0O+rZWQa1CmSaXn/d8lX2L+T9mrby8hkV+eHzp
6f0Knix53t5xnSKJVaZZTvAjI+UjD6KraeJRcmmxBPgl6mq+WSb0bufy2LU0
+ENPbePQbuSDJx+0HP2gDxFFnffPgiepDN5Me/jD7+CZKQNWNLEXbpqmWZzv
YwYa4sppwm5PKesWkSQO17zkikJZ5NPC2rVi4M2Y7ae8H/tR5D9NDTUv+J/L
0tzb7lkUmVq3N+muMkMuuQ6ez0B9P9xefa8AeeNViMWs3ado8l1r/xsV5JVd
Pit+CuVQ5IJN4VQf+v+/gUivBao0yXp183kx+O1aJ9/hJQs5ftXrLw+9Eui5
V6YLvps3baDReYMhBYJfLIbw+tWKKmt2I9+QP16NDxMp4sOYuRujPocbhfT6
wc+jnhtjhcArPT8m2EHgHfv2mJDd0Dex+imLYvj3XH7Bc9nQI6VVJ/5EKlPE
Tv1AXf1Jzv1LBwRO2MLPs2aKPIb+OaY7b7yHeiTH/c+NpbPJ3pt7ZoraIS+1
6zgF7GPIzZgvx2unwK92+p+UwPubtog9pRThB1ekXhhCH67v+W7ensMifYXv
k369hj4887jhCn4/Gr7qnC789SZXWvUj8L/T+sFPj9EfvlfNeMfgz6z5nzpO
wt/y3Y8PvnwH/XjpeJJbkSGp1pePxg/SxG7n+1Vf0c8+cVu3y0KPnIK+mw9C
H09OCm85gnyd9mRFjzb856dHYStfJEU8dq5L8mhgSN2W/fKKRSzS6O14Kc+E
sx9BhPMh8Fv1tTunpcAn1Ji8QSCO7+xB9XYif59ra1mhe5cmb2dUiFruQJ5l
B69R2wf92HUnadcYxnvff90P6likYE1Z/Qh4UyCeWPzSQx5e9/v+jyk22TZ3
RJaz/6VU2h9eF5ohJ1wTL/qjHp66Tn0uAk8M+PB+zYA+XG47vbx2hCH+cgVj
/yxZJGQ0zuy0OUPepnbpntaiScjB5MctOL+GkcTl7fDvNXMLPTRkGJLZfHRp
NOrFVVZ7fyv8cVvQ7Yy+NRR5kWM7EFTIkOaZQ6Eeosg7kictZoG/+RoXnuJa
SxPzxwcVIsErH9V0Pgm202RR9qxr6aUM+cLVwmWG/lzR0XGMc39MoOmJD5z9
c/4lhp6r+cGQK/d7vbzBXz+ibojZwm/0rOKrb1mAxzbMWrYN9fO92M1ypTBN
uJfOVOtEvx1f5M7TtA35rXKdx19t5Fc5zfE/6LeyD+OzNuN8VZSWmZ7aRxG+
+T1zqsE/Ply7RtyQry8f6H9ui3yVVKrqMWhPEV2Vudtzt3D6OYTftZPjZ/RV
019sEudzJv0ILUYSMqtlV2B8ygLOBZRDj82sFjS4JEEvLm+QN3bnrJfj/ssA
/BQfvJhLFHwi/D645GIFQw5PB7FYTSyyN61UiHcWjt+Z8mt2L01UuLLe9DWz
yUozv+NO9jRZuUjnqB7eP2bZbHoH8/vmzKb1K6Dfd1oaznKtoskRnjtmYvsZ
Yvy7POdjDfJ+sLHrdlf0s2Vq2Z5ZNIlR+azSGwu9t5IV7QJflhR4peYlMmR8
wMrzpBZev7Y0wwx69K36tXRKIEXKtGfUbUf+Xfpfi6h8Dfyk5YltHPq91ebS
7eXHUU+WURW54L3IDeYNq7kocvCsj2MY9DmV953QtyM0SVia8G+iBf06aCUp
Br4Lmarb8hGP2VduNeU5gUfiFtwqQ/8dV+3bSfejfxXvRp1GP7UUjd+5sYQm
1Uz7hjT4SXu0TuVV8GbLhSVLq5FHeFacGkyYhL+nz+l3q4H+bBNNbnBjkQS9
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
F3rzTk81egFNXoSdeLA1liGPrM+wn32iyIulajra2xhSdne7wRwu9M+IsFC5
HfKy5WueXacp4ta9YWYs/K1TbukVgVbkz5FbV9y/ssmyqN75n3C+Obld0hGc
5/e/7ijScaCJfWdRvUkG/Ppuv7LNPIrcLVh38e1ihvgtM66s5vz9OP55X9UQ
m5zM9pmWiUX+H7OX8z3NeZ/v46Y/vykSsaBOuvwgZ796Us83E3kyssR6D/yz
7kLtqiDob4Xnbf1p8N02HcXXB9/QpLOc/2IX/Dl+rYKS82eK9Ay9naW2kiG7
MrtduZeBL+w+7yjqQ7/r7hqdkoX/rjjtKIV+V/d69vq/nRRRaP1wXwT9xZX4
UuFsPUUul17qaYWenZC3ydmOfPFj8OQWbxzvSYx/vjH4yOMK/wou+IWPbND8
3RI0Obbx0mLBXPD64jABI+QhqzKR9l3IG/TGJ4JSnPu93b7NzAO/d8kvoW+s
Af8GF2qcMGFI4rTVi27okapvpgxfDMZbuMyy6xxFROf68Zmj/yS6jd8YwR8e
vWpZHsapx4PF20/E0EReU6zjK/LxzI78g+dR71c7zLVP43gbDz6IjZtJkwft
Ht1KSxlyPsKMxURw3pd0SUwZ8xn42GPlnEMY/3uHRQfAN1lmX8qboDerfLI3
7UpGfu4U+r4E4z1xNOrAJ6xn9SERz9B4mljkDj8+uYQhad/fJh/qokj3XO3J
EfQPm3/BoH8c/O5yfthC8NtsixBLuRngFa0/IsLQH5nk7IDbtRTJHJ9j04b8
F3HYoj0ReWGEXy1LC/4ZnKEo/kcH/j1G1md1swmXy/B/B//QZMMLddcx8L5Q
pK7Fm2KKFL1d9GAN8pX38z6XKPCq19GE/UamDAktm19yOYIilRY28muPMOSM
lIiSYwJFlBip/zIo+GmqzVEB5ItNbvOVq+EvAonh7FbUp92/n2s3d6EeHm5t
34m8GcKv4ZEF/irXMHLTx/q3mlEr3kEvua/4rfJOoAl37aF1bt4MGXijLrYF
87/9rRnflguc9xWua3dIpgjXhRYZX6zXk5c/kxtvUuSZ5pfFZb2Y7zN/5EvB
s7ss599bC33+6HKn8ijyTdbKDh6uETbJWH/zyrObNBltuZFdjn5pFCmYHX4M
euU2I1Effvdl1nUld+h5fdMmk0+j8OPK9QpT8BfLPo/nqe8YIpu2vPAu9Hv6
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
tJoNv3egP+Q80IK/HslxVOtik5sRXtV20MvLWeu+y0Jfalvo9EuYj4Wm4V3e
4BHl3VlGedI0ifkZpfsU+WDGZAGf5wCLjEbN2nWS876G/VoZLpoUmbXDxH4A
PCOw0c5u0pomNftDJ45ivR1naFUkg5c/q7S6fOlmiL69SdgCc+i9RcazFz/Y
5H1hWeMzrP9/l3VXnb3NkGWhCb3ZIywSM/Zdr00U+bHD0Zf7F/x0nHg7Ie/Y
a40m1Shy/LPNjv2bTVYNVkWIoJ/3Navy2IDvi3eecvsKXuM+6rv7Mubnldas
7J3/OPvnX+u/fhj66rZaexo8/CXodKhvNkNUNsx1nqMEPu3faM4LPXbd38UT
FkQRacE73A7I02lP/vtsBB6fHlFo9MH8fo7mW1LexdnP60KzEtZD0yLky5u/
FHm3p2Ln4z0M2RF7Ol78DUWO75seH8V6LnKfV2ewkSYaZ3/2h1mj3/3yRZTv
U0Rs7GQJ5/91vy8zSkdQL32CfpuMwQ9d3XdW9f6hyKHhW29NdyKfbRhN0gNP
JU+dOMN5n1n8wsq10ospwpJV9HX24uzP5Sk+B/35tb7wQgaOn82alNuQR5Gf
jVZfioKRv17sfJCIerd+yPbvwXjPhcok+iJ/jbwNXX4d+YMV+MY67SFF/iXd
okRQ7/e645eZaYNvz35d5w29Ei4ecYgMZJGi3Qml5tBjUcfoeWnJyAf7bYss
wO+dzd3Jo+A7O1H3TQPgZxl3qafFlRSZbXW2yRV8McPuULYN1mdJ/H8Nd5EH
X16Neaq4APy+8cSKBxLI2394BO2e06R4MER/Lhv+ab5RdDYn75T+40s1Q72K
j7aswfeVNXMy/3D2q3Ja/tluF01s55T7OyK/1z1U8RdqoYjxwn/J4uDxxIcK
hbp3kE8bJFLvz0JeiVG9IbwIfH342ctN4KFvCinymwNpwvcnSHgQ+YarvKSj
SYEml7jOfNLCerdsCR1Yk0GRp5KnjqxDPdz99LlAAvlu3+to+0jMd6yXcmX7
JprMu/rCzAJ5161z/ey8L8grRxqefId+1revGPqCPNtVrrVkIfpHfVwp1xa8
tTeWLe4M/ena8kD42X6aOLj9S4jbwZD2USnZPFfwh2/TxAF1howeVnX1+wY/
Z25a1jQyROS+vswa+HfodbGrnsgrbX9m8+5HPVqtHj04tgF6fnau5J/N0Pvn
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
/7/d61fPgPczuO90CMBf17Xv9q9A/S53hr/lYd8f6Xtne68gTTxkLRLnQZ8r
1uYOan1gP0+s6ewa+I3cXZMbiuo02bP2oG/rNxZxibCW/MqPPOFSPiaK9ZO7
fSHJ5gf7/z/raurBm+cOSg9MxNMkRiTmWosI+E1XPd3bgSbm13dfnq3GkGKV
L5xpCTRp0Vt8Y4Z9Pc5GiSr+kzTx5+9d3w1eutmntKXmOE1+ukn81lmE/g9W
/rDsP+RNtTUi3ez//4z1bU/AenzauC5qmr2f+NVv4Z7geZ8xyzM6OP47/6z0
Qjhp4vJw34ieLfIcLw9n4BuKBCfuX3IO+tLVcul5JPJat9DEux0s6Ilz27LH
rdCLVm7hQvTnr/1qKcmZFAn0Eh5LQj7Ru/M6kH1/4PEgwzUu4KP/rmzcGPKZ
IgqT1UN1vAzxDuIM8EQ/0LrMuyeYx+bz0iJTkTTJmt0RcBD++o57UYZ9EkUq
UmVWPBWWJ0uuLhs9FkUR1SXqKwxQf46mumsvsb637ZtTlaHXg2vpDI98inCG
RpubY54zHy0xc8F68m34rjrAvt/CcnFmiBvy+Zirm30K1udwPK9dKEU4kjuy
s7C+72PXKIgLIQ+5Jdt4oB8svrbyemP+1NW2bi+G/lCjQ4+nK2iiOmXydR/0
lWe4ovDPC4oMn3sW6QN9tvjZPZqYRhH7SpmKC/j5DwFnMf55NDkpVyIXgTwy
tyZSl9lIEVdpDuM9BzGfiTKcpIwiz4Srb/kif31c79C+Ejxuku+i7AUel3/O
Ga9nQ5Nq/26KvX/1y2rLcSHkjdK0hLeFpgy5GK88sc8E60092O8CfliwsDUy
ZDtel5jOHCtnEe8th4wC4Zf2O0Z0srDeFt7RZ/tCaOR52aPHVjEkKmTO1uVp
NHlZmK6ph/Mbr+gWr8D5tg95X9txniFjTm3J2Usponxsbc1RzN+KdbrN0VgP
s6vHrDmzGaJ5Iua/cuiLp9BZ0SjoWW1Il14t+Mru7KWlB/D+QM15PD3Iu3sv
nd/hj3xIdhhtf/0Sv3/NwbJdmb0/75fup6Lg7ybX46/hhyNF0bNUoR/lJ38H
/Yc8tM3pWYoo+nv1ifNiD9E/uvNVa0exnnUDG/xW32GRlVn9EW9YkoQ7YNGI
KPR3+WsRG14pmjyliuYVgV93/TavU8L7N2rnnryNfpZ7XPZcBPMX4pAa/ZYH
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
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
6fLRmJ9/tN9bUrOEhuK/JUMqUSRMbGpul8fXV4ynvc6WoYA1ZWCbMF7v/dW0
oJExCSJ2fRPagQy4/Er77vMsCuxCTCLPpTDgltoHr3H0I76nOxzmUa/PqAcU
33UkoftYSfDnHPSXqiRbV1vki/EbXdc9aCgS3n50FPm5nPihcvAk8lTMPtOL
chQcq9359yH6+/FWIr0W+/f2Tp/qt7g/1hN1xz2mCNBN1P3hiPoSNjNvrq9J
wWyTS04K6vUBtsjKs8UEpHZu/zOC/PZus5um9CUCVmSP2CwGIx8/XpwznyCg
IHdBJNiH+f8pKiO5Mb+XTmnQa9B/S4zNnOXx8RPEKYnoy8hvD+cOiEwToM2X
MsDWhfP3xLTuOs4Pb1LL9eZDmA/2Rfx6JIW8/ja/vAf958Db1SeOGVLgvdRa
4xXOl+fSyMVFzH96BQG+35F/Eo5rTLmeQj4tk6w/jjxg+KTwu6cDBW/t9k2y
2aIfDv8MWo48Mjf47PRNfP1tbWtWfcyLb6WePF64iP6d03cowpsCz5ls/0DU
2/hGPVMbXP+x9YvhV8+iP0mpdg+qkNBuw3BywPw9tWaQs2EPBSxeewPqrtLg
UyzDTjkTkB8m7qOC/mMkmVW4E/XccWu5IYsBDS9iRC9tayNA3ICDZSf2e9eR
woKeVeiffRtjLRUx3+8lb9XGk2BBVHKdQv6hWvqlJHUosMwZPNwWwoAjXpyZ
WRYU3Ez0TAhDvgkM4Q7SyEF9ao9VbQYalEj1X0WfkacbmgzmcT7fsFqIvUJe
+b6lZqs+8mQn1FTJoh449rC1rulkwMGD6WqZyPurgltZdJAHGnyshXYeZ34e
Zuh7Ff1Mm0PfZYaLgh19kjXD6pi/nvk5nEU+ujn64J0x9ktLh0mEpSIBkrJ2
n3MNaTB5srD+qiQJylaDO9fi+puOmpbIXiFhQWKkmOc48kWtwB3BrwRoXr4i
YIDPZ6+8b9lyH/ttp//adRV4feFfL6UdJqAyo3Lt2bfIn1eG1i9i/i0u2riz
fgHnWYRzp+4JEsJcqOXKyL+NWxgV86hPdsX652Ywn1in8kfEvET/DZVsIwrR
jxNUP5xDvkhwHXs8jPMtXHb630nMrz8MQkvnkCduBIXZa2RSoP1v4aoD8t1G
LotnGX4kNL3a8uI96olI5RmfSAHMVwX575/i9fhYfDJ0xv0hekaa9NA/vgW4
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
62fx+nmaf4Yq4vz/D1oNkXE=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
9lYhqc0W86d4y7sOvJ+ev+P150noy6OPzb+Chz421c4f/wzntTts7tiN8Af+
tCt10IdQrE+FniRH0xuyLKLBPxfaPj2oB7/V7/wdUoY+0KOk4TAZrz8uK//+
AHpug03z4qm49z9NEzwmsAzlZ+zfvFUY/KlS1H9ZAHMh+mu9myNHjw617fu7
jiH5u266ItD3YdlTjeORuyszdgUH70Ifn73Wb40gQ4dUZj708UNfFH521ha+
N9mMefAB+TekcD7F4xf0801WqluJpURbT6cUcGhvT/z0/oO4lxChErl7yO+5
83yeIUculJ195rsbfHVuit418PnZtKKHhM/TKbS0b13HkqpAdFUwP+79iiqf
fhxLE9NcTMrdcF7aEZqLWqE/iW+PB4/CX9fry5dCz8n1Ay6CFjiv3pgkgXpw
hLb4Wzvcz+qd+bLvweumC+3e6mLebxWIdvRBf/V1yi92Ij/5rmmt/LAbXGi/
avYs+Mm7umIp0SCWLibb6nvhfrouZt9cKMqSw+Fy0fs34LfKBZNL0Rt2iknx
iyL/NyZU+d2bwpJV5Gz+zBGGoi6+i76N/DVVaWxpu8kQ9Vo1uSbAR97tKI1H
X3k19EBTLQnz0vkp5Z8/7+17XDzDlqPIjPVjD8GfsvSbI8K1OBLXvt16ejJD
ibOal4ii/45dH6NwcRf6v3v5sztY30DSuIO1HuDjaFnFCvSh1n0B0TfO86ha
kbG0hj9rRuUqbP7AozNXHrUIwr8llePr2pVxfq8+toujr20S/d60QI6l+XsK
7Eqh/9G1497uwueHfcv8lQmfMfIpnhcI37rP9TemzQUfF/cs/vwF67HIrgvC
ve1OPHbVAfuuctcaHgmGT1/Y3iLIMdSzSCpvySX4U/KFKXNNGTrDiCjuxzzx
PTWeaxbBUIXp1o9t4MlPNVuMPHB/p0722U1EPz53wDeEfwj8kC17wx15uFjt
dKy8DEuMdkyJ3EeGnDtsrv37Hqajxo7mY3he5Y5TlowKfLN72htF5E2754Yv
l3Df0rcEMv4bAJ8c1HCxUQPPiZ9+dXoVS5dlpm/SiGRo+F3CUEE6eJK5e2EB
8v3ZuE8t1ugra89vk36xHnoyqS/5Ah6L5LOZbKHH0kvSs7VHjz1hs61ebSpD
itX6Fcroo1PV/67MOskjlQ/XQ/XQ35xkG5wPBKB3OV6UKJYEnyg65Tw2Ycha
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
rvZnCfjif7cgPwI=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {6.800163355230203, 5.554049042458383}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"p-SOS\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"p-p90RSK\"", HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{6.800163355230203, 9.214052463507933}, {5.554049042458383,
       7.413749307793936}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Reference\"", "\"RASi\"", "\"MEKi\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8677424199835253`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"069d4b86-8939-42f3-b352-c37143a86f22"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s check how well our formalism models the data (in the \
absence of noise). We use the true local response coefficients to \
\[OpenCurlyDoubleQuote]predict\[CloseCurlyDoubleQuote] the effect of total \
protein variations on the protein activities. The plot below shows that for \
the reference state, this gives an excellent agreement.\
\>", "Text",
 CellChangeTimes->{{3.8677451556628942`*^9, 
  3.8677452340820103`*^9}},ExpressionUUID->"254eadc2-75b9-429c-a6c8-\
670259c4dbaa"],

Cell[BoxData[
 RowBox[{"sMatrix", ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"si", "[", 
      RowBox[{"sys", ",", " ", "pars", ",", " ", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"vars", "\[LeftDoubleBracket]", 
     RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[409]:=",ExpressionUUID->"000c241d-7edd-4521-92c7-664c4d03b802"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmp", " ", "=", " ", 
   RowBox[{"population", "\[LeftDoubleBracket]", 
    RowBox[{"1", ";;", "100"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refActive", " ", "=", " ", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"vars", "\[LeftDoubleBracket]", 
      RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "/.", "tmp"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refTotal", " ", "=", 
    RowBox[{"Mean", "[", 
     RowBox[{"totalProteins", "/.", "tmp"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rGlobTot", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"totalProteins", "-", "refTotal"}], "refTotal"], "/.", "tmp"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rGlob", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"vars", "\[LeftDoubleBracket]", 
        RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "-", "refActive"}], 
      "refActive"], "/.", "tmp"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "rGlob", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"-", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", "rloc", "]"}], ".", "sMatrix", ".", 
         "rGlobTot"}], "]"}]}]}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Actual response\>\"", ",", " ", "\"\<Predicted response\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.867742974646421*^9, 3.8677430738326397`*^9}, {
   3.867743109611792*^9, 3.867743317390493*^9}, 3.867743391002491*^9, {
   3.867744399793241*^9, 3.867744401440995*^9}, {3.8677446193289824`*^9, 
   3.8677446194332647`*^9}, {3.867745122626582*^9, 3.867745149284032*^9}, {
   3.867828260392354*^9, 3.867828269911319*^9}},
 CellLabel->
  "In[707]:=",ExpressionUUID->"63f10090-4b91-4347-b615-8ab3d65b6020"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
PBz/j4pPmtd/ce6i4m8W7cPbLyWjzd6s5pOKyRi2bq9Hb12JrWNr3UctKnHv
66v3h1hLcD6lLb56ix88bt1JF0kFt1zGrgsnUoFW1rg0Y38q/JjTuiGyOxV0
dh4r9u+sA2Iv+VXa+zqY9Ta5YpeSD0tnb09axuRD8NWzz/d8LsZDn5kWObcY
q3OlL+EpCdZDNM6DGQkS/+ifPV7hj21uZ/9xrfjjXh5Jm+frmfjeIU3fnD4L
d80EdbP/l4DPJZkdnwgl4Maf56kZKfZYFHeito/HAc88FTRgk3wKIQwrr/sv
WUAUycIiQaEeU9REP3BK1mP92M4YnYwizFuXUL+TWYTiz45LzrKWAe9M45zX
f2Ug5UZjt7BZgonEhSa2LfbyprWmTJbD/YntPxumy2GzdkUGhUow8wRfjP8W
53vYMhN3puHGVcqIGnsaenUTO/qk00HyiIqAjVg6eNrS3LLvqEU7weXPs9Ra
lJGwDP+na46F5u6WxboWaL7570sNIR+PTxz8y7nVWwxEg9+8e0uEkalxj4F2
IizlKUBtQBbk2Zy2KXHLAi2+S/pKsV6YvkuhjW3AC8ecUnr7TasgXCHmz/Vn
VWCzFDi8J7Yc0sM8FH/GlUPKka775o6Iojx3FiYtEHPsdrDrhgaDXsMf/f3P
g6G1PQKKXubg9K4zo/pBOfjjgm3tjf2IzkJa7pLMiPw5awUh2TF4qK+9+0tj
DHZlf3PPoinB+7onZCK3eDyP9CXINg9ctukenjTPg5elN/pLPYuh8TRRXMOj
GJqOj92z3x2EEvcdJlEpCN8MOYzZSpWA6/7q7hTJErhF5Fcmt9Rs5XKtUEp3
DdAReHw91grQZC1NjXGzAG0NeQcNZjRxoI7w8vasNv449yomTLIANiW7RsbF
CqA021Ft7VctiMRePs29XgtHX5bsRecKuPB2fNrIrQK4zpN+L7AG4L7OPXeH
b215xpzSj4oEInSNhhglhxMh+cj63Y8yhfgq+7Fe89VCDPhm5DZ/9zZc/e6P
VwkqULf0vc/sYCToLhsq0W55jPjBl7/aqoqg6v7z1a8VRaC9WNWqHF4Grrf2
w62IMuhdZTgp+fQ1LE55XuA5+xokdeRcOEQb8J+E2Q5BvgY0T2RiVaSWg5qY
7otrDeUwZ1f5NuBxOY7w3TSLe1SO2mKnLewDmvC7/Z7QcqcmHCdONp3+XArF
NyRpYraocr845TgpEbcdZeJcbUvE3tXVqFDTOtxzosby9qM6/Mb1wsdepwzY
s8Wjb+qWATV93yZ0kSDgcsPvg+0ksDxv6/i4owhiCwN9/dqKQCxdgp0JCqHU
TbfstGQhOH092PP7TRVcaRGXDwuvgtsD4TVrk0VwseFbrchEEfxa5Hvjf+oJ
RO8b6ZflN4HL5/j4iLL58GdDiGp9KR+8Y5cO9FqmYROzSoaOcxrKvdymum/M
B9tirxra8viiZokP93hsCmaLcWgFZKagEb9lk1hMPVBKeZQlCPXARXPt/b6W
bHB9z+gdV5sNOquR/pPW8Tgpn9ppFhSPfw7M6Fu6pyDNmXM8PIEpeDcMbjnt
SEaXcClKLnsyinwXITdiJobn+FcNtmai3YHqP87lLeDa66ztadwCmYxeHzqG
opDjoYKm2PZIzOPJWdY5UoTXE3oFleoLcePlfLFCRQ8S/8YQjWh6keGZWKPX
YBJ23ue2I/xOxAS3FOdfJYW4Vt1OymsrRGrogZ0bD0oxdfbwv4nYIgwZFVZi
bSjClbXOI19Zi/HURiobw3kKkIrJs0cGydD5jZHuqPxF7Kzz2BbR8B9w3+a1
KWpLA4um6677KQRwjjOV7tUpBPodzs9qzhbC7jQaZ1PVrf4WYD0flVeP51p4
ZK6vvQbrvcovNFr94H3/YMgoSwZMXXQUHmZPhyr+SoqqTyw+vZ/DRimIQb2C
1ceHkqMxN5bpn25dCOJopN+gcAl+1SypfrNUhHaUT+uMe/OBnXj3vvcUEQye
+JbQaOeBgNumqc9KHkxT/zP4oZ4PmTSBOUHy+UBILiXIcdXiiuv1y1Ivq9Gp
wizouU4qhl57Fm9oSsBouUtFceW1KLLL27TyXh1KW277rhVYjopMF62lD1dg
n6d70M9aD9DKs5Im3vYG86fWJ1puJEDfjlq2pvw48EzL+ru2lwpfXFzH1IkU
8J4Qt+M6WAvFbNIFvy7VQUzDfyxd0nkoy1axaZZIxOqgao2vjekQ831s+eGF
DNDYce9aCiEUh+S6NXITw9HmY9YsTVgy3qWT7dX6mYzLtBSDHXn34NG+0vjD
Yk8gcN9N1fjyLNBUG5kQc8yD4+wB1+zPRqDJzTHBZ7si0PP7lZsiSk1YFeJN
U53fhKoX/z3N8CXhvMFH4T19JNRhriPrHCdB/PVXnRWvSPBOscTyflMu0lpZ
yMz8yUZpP7bC1YViEMl+Nx5GVwJNN5fUstMrcMHJu+SUUCXqSeS5fpzKxCVX
fbHOX1nYITd3WfRrCmhO2kik7U+B/e4qzx0vVuDFyXuysY7l+DXtC9NeV0l8
Zceps6BigD/UKuijljPxwt+8/tSbWRjEPOJ4SKsI/nZaWrY3FcL2Bfc8Ec40
KOWkzh1/RoDBpWsW4VwWYOAixav99RHwaj/ZZSycBbRDlIPdc3nAdGo6cMet
Esgp3N7aIF0ClrYPH9ESq/CP1nwOB1cVbsqrT6yZxKGBBZ/hbtooPO7KWr04
lI9LpaHDHLMFqBWW2fBTioLiQ7+UfkdQ0DcwvOrvUgjWhSllMdaG4eUJ2auq
zGVoTMf4mLzlPfcf532/vocIX24sl5qeyAW6PXYE3svl8GTbVX+FrTyVmbYT
WDuciisjhBgx11Tsurbq872DBBnC3zJPVZJg8QZ1DRZrgUxn93lBuxbuq+p0
aZwtQgtpi1SXmiJkVb2iomqZCrwX9QQOjBPgS1My1acgCZL2sW0cP5oCxO/i
PlFbXmJgfn980J4ML25qsMjnU8HyWMFEwjsqJGTn+fWvPIVYp9bUeQ4jEPc2
q5sPLoL9/7TaBv4VAsHhfBS7ZxbSKzwo3H48C4Pzm9mTAnPA7wAMad3Mh5dh
8hJHnZRAyurvyxYHBXB+vL1reicJqkfc7buzCoCTSe3EQ60y2PG4gZAxXgr0
7mbtBe2AX2u4ewNmHuDlHJLL5LYm7Nv5dVDLtAnpZjP3n6HJBckTDL9/MORD
ffag5JE7ZciYrzbIXliGO4vqY7gvtaGAgOUZj4I2HBw8SDv7KAfURuhkQ62J
8Gvva/vt17NxQe7WXZ0v2bhbHnR2e5cgU/Ri+ti3Qrzl8Jw+63IJ0I6WC6tu
FIPM2YR7uj3VMGut/cuepQa4Huf5NnwrgqMWkwHvHxeB5gbT3pHmLHDl+NzO
Q5sNLPKFXiwjFCj06X+1lEaBKmnaKcPf5dAf1HDAVrMc9l4RS6TZ/xqKTpTY
vrznB35fZ0OPzxSD0D1Ljg2tYpiuult3obkA54xfigWdJKGrp+mllt9ueHvx
7FXOg954Mow+x7OWgGciLTg929Kwb26iP31bPTBkSDaNfqPC6TrDL8qlZXD3
tgzV/HMZkO7/outgiMRLO3jN5T5F4ZESXuku2njk+Z3Mbk1OwLVvZYfMVTIx
IMGwR3Dr/vQpVlbE5XzMIT4/nvO1APWXPidQu2qBUci/LOV8HUS22Xk+NktG
9dZtbZLvk/BI57RR1Ztq/EGlezDdUoPiG69jrP4049CALOvV2ma83/cu+cY6
CZkC7kaSt3Jj8pdU4EWvaqTf0xgVdaoGT/S6H6VPKkXKrKK3gX0JjhSNBbg1
ZKMhtF2lO5SLnAlFS9/fk6FvlvrsGA0ZRrL3HBjSy8WxopB4pceZKDWk7xI6
nQ2GuVlNfiJZMNYVxTIaXAw+wfe+pTkUwTbX6YZzAk04rYIx9NubUZJZ7ari
vxh8oS5CrtNMRpMb1MPtMkkY9iaOlN6WgoK8MydehqaDNhoSEgpywInANpr4
/BXOK4o8HfzPFbf5JlZwbiLS8Ztv05lB3J81WSGn6gmmenTkVQYf+H1egN6x
gALypYLZYZJUCCb9fh7p/xLCmxS72PoC4EVw9Lep/XUo/I8goPikFpN09ouX
ZcWgxD82g4nQOPzOIWewQ6ECHx6IvCklUIX63sQykfISDI4RrT7aV4oSe62o
zSqFMLL+4/fujwUggh8HNxyJWOm+cvANfT6OMLCraCVVwHtxHQOvN5XAvy1V
fWaUDDmzPxP5qWQY/5FMDF5PQeIRTw+zyBQk7Fqdc/tfAFsEpPtVoz+qkl22
zcCiPyLofogbSXa/RS+Yj86EgL/qSD+ddEOZP4dS4FMSVJI/u3DEqpN4oT9n
RZyG4fmjP4XdOs18mYq/FW3OgQQabr8MY7s4oIafv0zd22R9/5+/W+nZOrLw
vL9hhOLNv169vwbczd9GHyi/ccyQY9cCWz8j9ZOpBPmsP8Tkp/Iasas/lzVv
pMNWuL+tP4YBGui3v9haKLs1aLE/c9RbrvKXsD8tEMdyL2Wkvy6u5C3GYKW/
cCGdoFQpvr/v+waUM3m+v03DQkbtyKU/2566/ST3oz89TmBBljejv76bvtDy
Jp2/jMFIqUPEoj8ZZqamkH6gP+fWpT5w+UA/ANTgPXxuXD/3uwzp1tNxv5E3
j/JOV3s/YpjEpJqJmD88MIEUsnOZP9xwsFf727S/oEHlMdL5s79B/8HgeiKB
P/2v3UbLNpQ/mb0ouXUCir/SX9oYMNuSvyzshTFeDai/vajXEnvTqb9nC1Mo
QjqHPzRQqXg0vos/zD8LdYefrr8Xs4FFQSOwv45muNhrHrG/uQDblFibrr9U
hm860CqZvzpdve4hS5q/2Wrfqhbttb+268b58A+3vzJ2OEo0ppy/315Dj4aC
lL+pbyB2t9KwP2g51DQEtK4/2zg5FxNoTL9AwdSVQoZ0vwU9iLtbWa0/c7l3
q3Awqz/+NFuWmNHAPwv20x6Kbb8/O5HZfkRIoL+T8ysVkCqiv4K+Hh/2arE/
mnP8RM9EsT+nOoXVYkNwP8W7V4Hi0GI/ho3zXpZVuj9RgTdL+Ei5P9FF7Cnt
M7o/5GvnTSC3uj9FafYqgUHBPyEjdCQYJMU/OTToMgvJqD8eym0/6AKmP2Kv
JTGPg2w/ORdG6GjeeT+U5gDpK1G5P7ylTl3fTro/auOguUPLkT/MHhfrA0+R
P8X2ia+0gaI/FyafNaOwoj/QmDdzZduyP7sm6xKoXbE/6pgVZU8Bor9IjDv4
pASjv/DsDlRXFbO/tFc4MXils7/C+FEUeaSLP/ywA6/BOZg/wn4LwCcQt78t
LQR0giS5v0E/v4EA9sW/rD3gcgQox79vD3F1vMJov9ER8LS3DGg/NNvIlKyG
ez+Wx1iYvWpyP2P4y1/jR6C/GJUQOmDVkr9iu/TY4ieIP07FYvZE/YA/JRwF
cfQPwj/1DUzjKgHCP/nC100tsrQ/AE8/BE/2sz+ypApSLzCoP9vs9Q5foKc/
x28BVcHItD9LqEhpQcS1Pz9/dLgqn7w/oFtUlj5guz+RtrkRScCHv5e2a50R
1Im/rp+BGzIjpT8T9NCorPeiP/RR3sP2c1S/B/qWev76Yz80mbknGe1TP2nl
M3qCoEC/AjxpDybIvL+3Na+4v8W7v2JGZj33scI/NiPszdXawT9vAqTsQ7qw
P0C5mC4VSbE/gpFt+1I8W79cStOqItpqvwE/juTxScA/av/R5IbJwD9PQvOU
vTakvxD3pnJvLaW/JjUhrwvJub+4YyzgR4O5vxJmB/M=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Predicted response\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Actual response\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.29292268931387233`, 
   0.4019042843016992}, {-0.3268820555533982, 0.37209772916508654`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.867745150134251*^9, 3.8677452373559227`*^9, 3.8677453020105867`*^9, {
   3.867760273332405*^9, 3.867760289800776*^9}, {3.867828242306899*^9, 
   3.867828270897511*^9}},
 CellLabel->
  "Out[712]=",ExpressionUUID->"58893ce3-90df-406f-90d2-c3eb8edaa6b1"]
}, Open  ]],

Cell["\<\
However, if we look at a strong perturbations (80% reduction in catalytic \
activity of MEKi), we start seeing deviations for the points that have the \
strongest (negative) response.\
\>", "Text",
 CellChangeTimes->{{3.867829021446562*^9, 
  3.86782908547209*^9}},ExpressionUUID->"982ef389-c71b-45e8-aab1-\
ef54aad673c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "0.8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsMekiLow", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"pars", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", " ", 
     "d"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"popMekiLow", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"generateStochasticProteinAmounts", "[", 
       RowBox[{"parsMekiLow", ",", " ", "0", ",", " ", "0.1"}], "]"}], ",", 
      "100"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationMekiLow", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popMekiLow"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rGlobTotMeki", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"totalProteins", "-", "refTotal"}], "refTotal"], "/.", 
     "populationMekiLow"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rGlobMeki", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"vars", "\[LeftDoubleBracket]", 
        RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "-", "refActive"}], 
      "refActive"], "/.", "populationMekiLow"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"pi", "[", 
        RowBox[{"sys", ",", "pars", ",", "#", ",", 
         RowBox[{"{", 
          RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", 
         "d"}], "]"}], "&"}], "/@", 
      RowBox[{"vars", "\[LeftDoubleBracket]", 
       RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "//", "Quiet"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"piMeki", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", 
      RowBox[{"tmp", ",", 
       RowBox[{"Length", "[", "populationMekiLow", "]"}]}], "]"}], "]"}], "//",
     "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rlocinv", "=", 
   RowBox[{"Inverse", "[", "rloc", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predictMeki", "=", 
   RowBox[{"-", 
    RowBox[{"rlocinv", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sMatrix", ".", "rGlobTotMeki"}], "+", "piMeki"}], ")"}]}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rGlob", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Inverse", "[", "rloc", "]"}], ".", "sMatrix", ".", 
           "rGlobTot"}], "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Thread", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", "rGlobMeki", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", "predictMeki", "]"}]}], "}"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"PointSize", "->", "Small"}], "}"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Actual response\>\"", ",", " ", "\"\<Predicted response\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "->", "\"\<Strong MEK inhibition (80%)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Reference\>\"", ",", "\"\<MEKi\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.867760415477107*^9, 3.867760418634088*^9}, {
   3.8677604705077047`*^9, 3.867760480984515*^9}, {3.867760569366754*^9, 
   3.867760587552104*^9}, {3.867760655322042*^9, 3.867760707242572*^9}, 
   3.8677609770529013`*^9, {3.8677610604260683`*^9, 3.8677611700266333`*^9}, {
   3.867827371468433*^9, 3.867827432766423*^9}, {3.8678276877509604`*^9, 
   3.867827711480941*^9}, {3.867827780510035*^9, 3.867827962439315*^9}, {
   3.867827999911487*^9, 3.867828015655818*^9}, {3.867828307765298*^9, 
   3.867828341118535*^9}, {3.8678284253953447`*^9, 3.867828800239438*^9}},
 CellLabel->
  "In[1053]:=",ExpressionUUID->"ef4101d8-02b0-4b8e-8412-f61c1ca3bb77"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
PBz/j4pPmtd/ce6i4m8W7cPbLyWjzd6s5pOKyRi2bq9Hb12JrWNr3UctKnHv
66v3h1hLcD6lLb56ix88bt1JF0kFt1zGrgsnUoFW1rg0Y38q/JjTuiGyOxV0
dh4r9u+sA2Iv+VXa+zqY9Ta5YpeSD0tnb09axuRD8NWzz/d8LsZDn5kWObcY
q3OlL+EpCdZDNM6DGQkS/+ifPV7hj21uZ/9xrfjjXh5Jm+frmfjeIU3fnD4L
d80EdbP/l4DPJZkdnwgl4Maf56kZKfZYFHeito/HAc88FTRgk3wKIQwrr/sv
WUAUycIiQaEeU9REP3BK1mP92M4YnYwizFuXUL+TWYTiz45LzrKWAe9M45zX
f2Ug5UZjt7BZgonEhSa2LfbyprWmTJbD/YntPxumy2GzdkUGhUow8wRfjP8W
53vYMhN3puHGVcqIGnsaenUTO/qk00HyiIqAjVg6eNrS3LLvqEU7weXPs9Ra
lJGwDP+na46F5u6WxboWaL7570sNIR+PTxz8y7nVWwxEg9+8e0uEkalxj4F2
IizlKUBtQBbk2Zy2KXHLAi2+S/pKsV6YvkuhjW3AC8ecUnr7TasgXCHmz/Vn
VWCzFDi8J7Yc0sM8FH/GlUPKka775o6Iojx3FiYtEHPsdrDrhgaDXsMf/f3P
g6G1PQKKXubg9K4zo/pBOfjjgm3tjf2IzkJa7pLMiPw5awUh2TF4qK+9+0tj
DHZlf3PPoinB+7onZCK3eDyP9CXINg9ctukenjTPg5elN/pLPYuh8TRRXMOj
GJqOj92z3x2EEvcdJlEpCN8MOYzZSpWA6/7q7hTJErhF5Fcmt9Rs5XKtUEp3
DdAReHw91grQZC1NjXGzAG0NeQcNZjRxoI7w8vasNv449yomTLIANiW7RsbF
CqA021Ft7VctiMRePs29XgtHX5bsRecKuPB2fNrIrQK4zpN+L7AG4L7OPXeH
b215xpzSj4oEInSNhhglhxMh+cj63Y8yhfgq+7Fe89VCDPhm5DZ/9zZc/e6P
VwkqULf0vc/sYCToLhsq0W55jPjBl7/aqoqg6v7z1a8VRaC9WNWqHF4Grrf2
w62IMuhdZTgp+fQ1LE55XuA5+xokdeRcOEQb8J+E2Q5BvgY0T2RiVaSWg5qY
7otrDeUwZ1f5NuBxOY7w3TSLe1SO2mKnLewDmvC7/Z7QcqcmHCdONp3+XArF
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
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
v8O81PE=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Predicted response\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"Actual response\"", HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Strong MEK inhibition (80%)\"", TraditionalForm], 
     PlotRange -> {{-0.7978418725291909, 
      2.67900167672287}, {-0.9793619184299855, 1.0146028337940372`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Reference\"", "\"MEKi\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8678284612109947`*^9, 3.867828641421219*^9}, {
   3.8678287369945517`*^9, 3.867828803715391*^9}, 3.867829777887562*^9, 
   3.86783020321375*^9},
 CellLabel->
  "Out[1063]=",ExpressionUUID->"ca51d76a-1109-4739-ac64-a9514a8c3b17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PairedHistogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"rloc", ".", "rGlob"}], "+", 
     RowBox[{"sMatrix", ".", "rGlobTot"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"rloc", ".", "rGlobMeki"}], "+", 
     RowBox[{"sMatrix", ".", "rGlobTotMeki"}], " ", "+", " ", "piMeki"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<No perturbation\>\"", ",", " ", 
      "\"\<Strong MEK inhibition (80%)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "->", "\"\<Distribution of Residuals\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BarSpacing", "->", "None"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8678297249113417`*^9, 3.8678298705019703`*^9}, {
  3.867829907648057*^9, 3.867829908752824*^9}, {3.8678299454833717`*^9, 
  3.867829951622303*^9}, {3.867830011821392*^9, 3.867830111691689*^9}, {
  3.867830193808387*^9, 3.867830197654707*^9}},
 CellLabel->
  "In[1064]:=",ExpressionUUID->"37ee15e0-a45f-4f1f-9006-984488a0eccb"],

Cell["\<\
However, our method does not directly minimize the difference between actual \
and predicted response, but minimizes the residuals of the MRA equations . We \
can also check how those distributions look, and these are indeed much \
broader for (a subset of) the MRA equations .\
\>", "Text",
 CellChangeTimes->{{3.8678302167108192`*^9, 
  3.867830271766161*^9}},ExpressionUUID->"b62114ad-106a-4fff-8aff-\
9f6113ef3249"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.976, 0.6848, 0.26480000000000004`], EdgeForm[{Opacity[0.616], 
    Thickness[Small]}], {{{}, 
      {RGBColor[0.976, 0.6848, 0.26480000000000004`], EdgeForm[{Opacity[
       0.616], Thickness[Small]}], 
       RectangleBox[Offset[{0, 0}, {-667., -0.2}], Offset[{0, 0}, {0., 0.}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-433., 0.}], Offset[{0, 0}, {0., 0.2}],
        RoundingRadius->0]}, {}, {}}, {{}, 
      {RGBColor[0.976, 0.6848, 0.26480000000000004`], EdgeForm[{Opacity[
       0.616], Thickness[Small]}], 
       RectangleBox[Offset[{0, 0}, {3., -1.4}], Offset[{0, 0}, {0., -1.2}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {13., -1.2}], Offset[{0, 0}, {0., -1.}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {42., -1.}], Offset[{0, 0}, {0., -0.8}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {30., -0.8}], Offset[{0, 0}, {0., -0.6}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {12., -0.6}], Offset[{0, 0}, {0., -0.4}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {1., -0.4}], Offset[{0, 0}, {0., -0.2}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {519., -0.2}], Offset[{0, 0}, {0., 0.}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {405., 0.}], Offset[{0, 0}, {0., 0.2}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {64., 0.2}], Offset[{0, 0}, {0., 0.4}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {11., 0.4}], Offset[{0, 0}, {0., 0.6}],
        RoundingRadius->0]}, {}, {}}}, {}}, {{{{{{{{}, {}}, {}}, 
        InsetBox["\<\"No perturbation\"\>", Offset[{0, 4}, {-333.5, 0.2}], 
         ImageScaled[{0.5, 0}]]}, {}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {}}, 
        InsetBox["\<\"Strong MEK inhibition (80%)\"\>", 
         Offset[{0, 4}, {259.5, 0.6}], 
         ImageScaled[{0.5, 0}]]}, {}}}, {}}, {}}, 
   StyleBox[{
     TagBox[{
       StyleBox[
        StyleBox[{
          LineBox[{
           Offset[{0, 0}, {0., -1.5}], Offset[{0, 0}, {-700.35, -1.5}]}], 
          StyleBox[{
            
            StyleBox[
             LineBox[{{
               Offset[{0, 0}, {0., -1.5}], Offset[{0, -4.}, {0., -1.5}]}, {
               Offset[{0, 0}, {-200., -1.5}], 
                Offset[{0, -4.}, {-200., -1.5}]}, {
               Offset[{0, 0}, {-400., -1.5}], 
                Offset[{0, -4.}, {-400., -1.5}]}, {
               Offset[{0, 0}, {-600., -1.5}], 
                Offset[{0, -4.}, {-600., -1.5}]}}],
             StripOnInput->False,
             FontOpacity->1], 
            StyleBox[{
              
              StyleBox[{
                InsetBox["0", Offset[{0., -7.}, {0., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["200", Offset[{0., -7.}, {-200., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["400", Offset[{0., -7.}, {-400., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["600", Offset[{0., -7.}, {-600., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}]},
               StripOnInput->False,
               FontOpacity->1], {}}, "GraphicsLabel",
             StripOnInput->False,
             FontOpacity->1]}, "GraphicsTicks",
           StripOnInput->False,
           FontOpacity->1]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False], 
       StyleBox[
        StyleBox[{LineBox[{{0., -1.5}, {700.35, -1.5}}], 
          StyleBox[{
            
            StyleBox[
             LineBox[{{{0., -1.5}, Offset[{0, -4.}, {0., -1.5}]}, {{
                200., -1.5}, Offset[{0, -4.}, {200., -1.5}]}, {{400., -1.5}, 
                Offset[{0, -4.}, {400., -1.5}]}, {{600., -1.5}, 
                Offset[{0, -4.}, {600., -1.5}]}}],
             StripOnInput->False,
             FontOpacity->1], 
            StyleBox[{
              
              StyleBox[{
                InsetBox["200", Offset[{0., -7.}, {200., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["400", Offset[{0., -7.}, {400., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["600", Offset[{0., -7.}, {600., -1.5}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}]},
               StripOnInput->False,
               FontOpacity->1], {}}, "GraphicsLabel",
             StripOnInput->False,
             FontOpacity->1]}, "GraphicsTicks",
           StripOnInput->False,
           FontOpacity->1]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      Deploy,
      DefaultBaseStyle->"Deploy"], 
     StyleBox[
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {-700.35, -1.4999999999999998`}], 
          Offset[{0, 0}, {-700.35, 0.6999999999999998}]}], 
        StyleBox[{
          LineBox[{{
            Offset[{0, 0}, {-700.35, -1.4999999999999998`}], 
             Offset[{4., 0}, {-700.35, -1.4999999999999998`}]}, {
            Offset[{0, 0}, {-700.35, -1.}], 
             Offset[{4., 0}, {-700.35, -1.}]}, {
            Offset[{0, 0}, {-700.35, -0.5}], 
             Offset[{4., 0}, {-700.35, -0.5}]}, {
            Offset[{0, 0}, {-700.35, 0.}], Offset[{4., 0}, {-700.35, 0.}]}, {
            Offset[{0, 0}, {-700.35, 0.5}], 
             Offset[{4., 0}, {-700.35, 0.5}]}}], 
          StyleBox[{{InsetBox[
              TagBox[
               RowBox[{"-", 
                FractionBox[
                 InterpretationBox[
                  StyleBox["\<\"3\"\>",
                   ShowStringCharacters->False],
                  3,
                  Editable->False], 
                 InterpretationBox[
                  StyleBox["\<\"2\"\>",
                   ShowStringCharacters->False],
                  2,
                  Editable->False]]}],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-700.35, -1.4999999999999998}], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], InsetBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"-1\"\>",
                 ShowStringCharacters->False],
                -1,
                Editable->False],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-700.35, -1.}], ImageScaled[{1, 0.5}], 
              Automatic, {1, 0}], InsetBox[
              TagBox[
               RowBox[{"-", 
                FractionBox[
                 InterpretationBox[
                  StyleBox["\<\"1\"\>",
                   ShowStringCharacters->False],
                  1,
                  Editable->False], 
                 InterpretationBox[
                  StyleBox["\<\"2\"\>",
                   ShowStringCharacters->False],
                  2,
                  Editable->False]]}],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-700.35, -0.5}], ImageScaled[{1, 0.5}], 
              Automatic, {1, 0}], 
             InsetBox["0", Offset[{-3., 0.}, {-700.35, 0.}], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], InsetBox[
              TagBox[
               FractionBox[
                InterpretationBox[
                 StyleBox["\<\"1\"\>",
                  ShowStringCharacters->False],
                 1,
                 Editable->False], 
                InterpretationBox[
                 StyleBox["\<\"2\"\>",
                  ShowStringCharacters->False],
                 2,
                 Editable->False]],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-700.35, 0.5}], ImageScaled[{1, 0.5}], 
              Automatic, {1, 0}]}, {}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]},
       Antialiasing->False], "GraphicsAxes",
      StripOnInput->False]},
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Charting`FindScaledTicks[
      (Cases[
       (Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& )[
        SlotSequence[1]], {
         PatternTest[
          Pattern[System`PairedHistogramDump`a, 
           Blank[]], NumericQ], 
         Pattern[System`PairedHistogramDump`b, 
          Blank[]], 
         Pattern[System`PairedHistogramDump`c, 
          BlankNullSequence[]]} :> {
        System`PairedHistogramDump`a, "", System`PairedHistogramDump`c}]& )[
       SlotSequence[1]], {Identity, Identity}]& , None}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {-200., 
       FormBox["200", TraditionalForm], {0.01, 0.}}, {-400., 
       FormBox["400", TraditionalForm], {0.01, 0.}}, {-600., 
       FormBox["600", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {200., 
       FormBox["200", TraditionalForm], {0.01, 0.}}, {400., 
       FormBox["400", TraditionalForm], {0.01, 0.}}, {600., 
       FormBox["600", TraditionalForm], {0.01, 0.}}}, None}},
  GridLines->{{250, 500, -250, -500}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  PlotLabel->FormBox["\"Distribution of Residuals\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->(Charting`SimpleTicks[#, #2, 6]& ),
  TicksStyle->{FontOpacity -> 1, Automatic}]], "Output",
 CellChangeTimes->{{3.8678297807810163`*^9, 3.867829871574161*^9}, 
   3.867829909263522*^9, 3.867829952906806*^9, {3.867830034423737*^9, 
   3.867830077412057*^9}, 3.867830112821856*^9, {3.867830198766726*^9, 
   3.8678302043469963`*^9}},
 CellLabel->
  "Out[1064]=",ExpressionUUID->"56d30f0f-e8c8-4ef8-8e9a-048ddbbae186"],

Cell["For weak perturbations this does not seem to be the case.", "Text",
 CellChangeTimes->{{3.867829091383157*^9, 
  3.867829111945716*^9}},ExpressionUUID->"e4a673ee-01aa-4e8f-98b5-\
56f4ddfb2309"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "0.25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsMekiLow", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"pars", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", " ", 
     "d"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"popMekiLow", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"generateStochasticProteinAmounts", "[", 
       RowBox[{"parsMekiLow", ",", " ", "0", ",", " ", "0.1"}], "]"}], ",", 
      "100"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationMekiLow", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popMekiLow"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rGlobTotMeki", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"totalProteins", "-", "refTotal"}], "refTotal"], "/.", 
     "populationMekiLow"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rGlobMeki", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"vars", "\[LeftDoubleBracket]", 
        RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "-", "refActive"}], 
      "refActive"], "/.", "populationMekiLow"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"pi", "[", 
        RowBox[{"sys", ",", "pars", ",", "#", ",", 
         RowBox[{"{", 
          RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", 
         "d"}], "]"}], "&"}], "/@", 
      RowBox[{"vars", "\[LeftDoubleBracket]", 
       RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "//", "Quiet"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"piMeki", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", 
      RowBox[{"tmp", ",", 
       RowBox[{"Length", "[", "populationMekiLow", "]"}]}], "]"}], "]"}], "//",
     "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rlocinv", "=", 
   RowBox[{"Inverse", "[", "rloc", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predictMeki", "=", 
   RowBox[{"-", 
    RowBox[{"rlocinv", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sMatrix", ".", "rGlobTotMeki"}], "+", "piMeki"}], ")"}]}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", "rGlob", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Inverse", "[", "rloc", "]"}], ".", "sMatrix", ".", 
           "rGlobTot"}], "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Thread", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", "rGlobMeki", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", "predictMeki", "]"}]}], "}"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"PointSize", "->", "Small"}], "}"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Actual response\>\"", ",", " ", "\"\<Predicted response\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "->", "\"\<Strong MEK inhibition (25%)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Reference\>\"", ",", "\"\<MEKi\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8678288992941017`*^9, 3.867828899404974*^9}, {
  3.867828931172731*^9, 3.867828942172*^9}},
 CellLabel->
  "In[1039]:=",ExpressionUUID->"09f9a0b9-020b-4528-ac14-83664fef4dde"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
PBz/j4pPmtd/ce6i4m8W7cPbLyWjzd6s5pOKyRi2bq9Hb12JrWNr3UctKnHv
66v3h1hLcD6lLb56ix88bt1JF0kFt1zGrgsnUoFW1rg0Y38q/JjTuiGyOxV0
dh4r9u+sA2Iv+VXa+zqY9Ta5YpeSD0tnb09axuRD8NWzz/d8LsZDn5kWObcY
q3OlL+EpCdZDNM6DGQkS/+ifPV7hj21uZ/9xrfjjXh5Jm+frmfjeIU3fnD4L
d80EdbP/l4DPJZkdnwgl4Maf56kZKfZYFHeito/HAc88FTRgk3wKIQwrr/sv
WUAUycIiQaEeU9REP3BK1mP92M4YnYwizFuXUL+TWYTiz45LzrKWAe9M45zX
f2Ug5UZjt7BZgonEhSa2LfbyprWmTJbD/YntPxumy2GzdkUGhUow8wRfjP8W
53vYMhN3puHGVcqIGnsaenUTO/qk00HyiIqAjVg6eNrS3LLvqEU7weXPs9Ra
lJGwDP+na46F5u6WxboWaL7570sNIR+PTxz8y7nVWwxEg9+8e0uEkalxj4F2
IizlKUBtQBbk2Zy2KXHLAi2+S/pKsV6YvkuhjW3AC8ecUnr7TasgXCHmz/Vn
VWCzFDi8J7Yc0sM8FH/GlUPKka775o6Iojx3FiYtEHPsdrDrhgaDXsMf/f3P
g6G1PQKKXubg9K4zo/pBOfjjgm3tjf2IzkJa7pLMiPw5awUh2TF4qK+9+0tj
DHZlf3PPoinB+7onZCK3eDyP9CXINg9ctukenjTPg5elN/pLPYuh8TRRXMOj
GJqOj92z3x2EEvcdJlEpCN8MOYzZSpWA6/7q7hTJErhF5Fcmt9Rs5XKtUEp3
DdAReHw91grQZC1NjXGzAG0NeQcNZjRxoI7w8vasNv449yomTLIANiW7RsbF
CqA021Ft7VctiMRePs29XgtHX5bsRecKuPB2fNrIrQK4zpN+L7AG4L7OPXeH
b215xpzSj4oEInSNhhglhxMh+cj63Y8yhfgq+7Fe89VCDPhm5DZ/9zZc/e6P
VwkqULf0vc/sYCToLhsq0W55jPjBl7/aqoqg6v7z1a8VRaC9WNWqHF4Grrf2
w62IMuhdZTgp+fQ1LE55XuA5+xokdeRcOEQb8J+E2Q5BvgY0T2RiVaSWg5qY
7otrDeUwZ1f5NuBxOY7w3TSLe1SO2mKnLewDmvC7/Z7QcqcmHCdONp3+XArF
NyRpYraocr845TgpEbcdZeJcbUvE3tXVqFDTOtxzosby9qM6/Mb1wsdepwzY
s8Wjb+qWATV93yZ0kSDgcsPvg+0ksDxv6/i4owhiCwN9/dqKQCxdgp0JCqHU
TbfstGQhOH092PP7TRVcaRGXDwuvgtsD4TVrk0VwseFbrchEEfxa5Hvjf+oJ
RO8b6ZflN4HL5/j4iLL58GdDiGp9KR+8Y5cO9FqmYROzSoaOcxrKvdymum/M
B9tirxra8viiZokP93hsCmaLcWgFZKagEb9lk1hMPVBKeZQlCPXARXPt/b6W
bHB9z+gdV5sNOquR/pPW8Tgpn9ppFhSPfw7M6Fu6pyDNmXM8PIEpeDcMbjnt
SEaXcClKLnsyinwXITdiJobn+FcNtmai3YHqP87lLeDa66ztadwCmYxeHzqG
opDjoYKm2PZIzOPJWdY5UoTXE3oFleoLcePlfLFCRQ8S/8YQjWh6keGZWKPX
YBJ23ue2I/xOxAS3FOdfJYW4Vt1OymsrRGrogZ0bD0oxdfbwv4nYIgwZFVZi
bSjClbXOI19Zi/HURiobw3kKkIrJs0cGydD5jZHuqPxF7Kzz2BbR8B9w3+a1
KWpLA4um6677KQRwjjOV7tUpBPodzs9qzhbC7jQaZ1PVrf4WYD0flVeP51p4
ZK6vvQbrvcovNFr94H3/YMgoSwZMXXQUHmZPhyr+SoqqTyw+vZ/DRimIQb2C
1ceHkqMxN5bpn25dCOJopN+gcAl+1SypfrNUhHaUT+uMe/OBnXj3vvcUEQye
+JbQaOeBgNumqc9KHkxT/zP4oZ4PmTSBOUHy+UBILiXIcdXiiuv1y1Ivq9Gp
wizouU4qhl57Fm9oSsBouUtFceW1KLLL27TyXh1KW277rhVYjopMF62lD1dg
n6d70M9aD9DKs5Im3vYG86fWJ1puJEDfjlq2pvw48EzL+ru2lwpfXFzH1IkU
8J4Qt+M6WAvFbNIFvy7VQUzDfyxd0nkoy1axaZZIxOqgao2vjekQ831s+eGF
DNDYce9aCiEUh+S6NXITw9HmY9YsTVgy3qWT7dX6mYzLtBSDHXn34NG+0vjD
Yk8gcN9N1fjyLNBUG5kQc8yD4+wB1+zPRqDJzTHBZ7si0PP7lZsiSk1YFeJN
U53fhKoX/z3N8CXhvMFH4T19JNRhriPrHCdB/PVXnRWvSPBOscTyflMu0lpZ
yMz8yUZpP7bC1YViEMl+Nx5GVwJNN5fUstMrcMHJu+SUUCXqSeS5fpzKxCVX
fbHOX1nYITd3WfRrCmhO2kik7U+B/e4qzx0vVuDFyXuysY7l+DXtC9NeV0l8
Zceps6BigD/UKuijljPxwt+8/tSbWRjEPOJ4SKsI/nZaWrY3FcL2Bfc8Ec40
KOWkzh1/RoDBpWsW4VwWYOAixav99RHwaj/ZZSycBbRDlIPdc3nAdGo6cMet
Esgp3N7aIF0ClrYPH9ESq/CP1nwOB1cVbsqrT6yZxKGBBZ/hbtooPO7KWr04
lI9LpaHDHLMFqBWW2fBTioLiQ7+UfkdQ0DcwvOrvUgjWhSllMdaG4eUJ2auq
zGVoTMf4mLzlPfcf532/vocIX24sl5qeyAW6PXYE3svl8GTbVX+FrTyVmbYT
WDuciisjhBgx11Tsurbq872DBBnC3zJPVZJg8QZ1DRZrgUxn93lBuxbuq+p0
aZwtQgtpi1SXmiJkVb2iomqZCrwX9QQOjBPgS1My1acgCZL2sW0cP5oCxO/i
PlFbXmJgfn980J4ML25qsMjnU8HyWMFEwjsqJGTn+fWvPIVYp9bUeQ4jEPc2
q5sPLoL9/7TaBv4VAsHhfBS7ZxbSKzwo3H48C4Pzm9mTAnPA7wAMad3Mh5dh
8hJHnZRAyurvyxYHBXB+vL1reicJqkfc7buzCoCTSe3EQ60y2PG4gZAxXgr0
7mbtBe2AX2u4ewNmHuDlHJLL5LYm7Nv5dVDLtAnpZjP3n6HJBckTDL9/MORD
ffag5JE7ZciYrzbIXliGO4vqY7gvtaGAgOUZj4I2HBw8SDv7KAfURuhkQ62J
8Gvva/vt17NxQe7WXZ0v2bhbHnR2e5cgU/Ri+ti3Qrzl8Jw+63IJ0I6WC6tu
FIPM2YR7uj3VMGut/cuepQa4Huf5NnwrgqMWkwHvHxeB5gbT3pHmLHDl+NzO
Q5sNLPKFXiwjFCj06X+1lEaBKmnaKcPf5dAf1HDAVrMc9l4RS6TZ/xqKTpTY
vrznB35fZ0OPzxSD0D1Ljg2tYpiuult3obkA54xfigWdJKGrp+mllt9ueHvx
7FXOg954Mow+x7OWgGciLTg929Kwb26iP31bPTBkSDaNfqPC6TrDL8qlZXD3
tgzV/HMZkO7/outgiMRLO3jN5T5F4ZESXuku2njk+Z3Mbk1OwLVvZYfMVTIx
IMGwR3Dr/vQpVlbE5XzMIT4/nvO1APWXPidQu2qBUci/LOV8HUS22Xk+NktG
9dZtbZLvk/BI57RR1Ztq/EGlezDdUoPiG69jrP4049CALOvV2ma83/cu+cY6
CZkC7kaSt3Jj8pdU4EWvaqTf0xgVdaoGT/S6H6VPKkXKrKK3gX0JjhSNBbg1
ZKMhtF2lO5SLnAlFS9/fk6FvlvrsGA0ZRrL3HBjSy8WxopB4pceZKDWk7xI6
nQ2GuVlNfiJZMNYVxTIaXAw+wfe+pTkUwTbX6YZzAk04rYIx9NubUZJZ7ari
vxh8oS5CrtNMRpMb1MPtMkkY9iaOlN6WgoK8MydehqaDNhoSEgpywInANpr4
/BXOK4o8HfzPFbf5JlZwbiLS8Ztv05lB3J81WSGn6gmmenTkVQYf+H1egN6x
gALypYLZYZJUCCb9fh7p/xLCmxS72PoC4EVw9Lep/XUo/I8goPikFpN09ouX
ZcWgxD82g4nQOPzOIWewQ6ECHx6IvCklUIX63sQykfISDI4RrT7aV4oSe62o
zSqFMLL+4/fujwUggh8HNxyJWOm+cvANfT6OMLCraCVVwHtxHQOvN5XAvy1V
fWaUDDmzPxP5qWQY/5FMDF5PQeIRTw+zyBQk7Fqdc/tfAFsEpPtVoz+qkl22
zcCiPyLofogbSXa/RS+Yj86EgL/qSD+ddEOZP4dS4FMSVJI/u3DEqpN4oT9n
RZyG4fmjP4XdOs18mYq/FW3OgQQabr8MY7s4oIafv0zd22R9/5+/W+nZOrLw
vL9hhOLNv169vwbczd9GHyi/ccyQY9cCWz8j9ZOpBPmsP8Tkp/Iasas/lzVv
pMNWuL+tP4YBGui3v9haKLs1aLE/c9RbrvKXsD8tEMdyL2Wkvy6u5C3GYKW/
cCGdoFQpvr/v+waUM3m+v03DQkbtyKU/2566/ST3oz89TmBBljejv76bvtDy
Jp2/jMFIqUPEoj8ZZqamkH6gP+fWpT5w+UA/ANTgPXxuXD/3uwzp1tNxv5E3
j/JOV3s/YpjEpJqJmD88MIEUsnOZP9xwsFf727S/oEHlMdL5s79B/8HgeiKB
P/2v3UbLNpQ/mb0ouXUCir/SX9oYMNuSvyzshTFeDai/vajXEnvTqb9nC1Mo
QjqHPzRQqXg0vos/zD8LdYefrr8Xs4FFQSOwv45muNhrHrG/uQDblFibrr9U
hm860CqZvzpdve4hS5q/2Wrfqhbttb+268b58A+3vzJ2OEo0ppy/315Dj4aC
lL+pbyB2t9KwP2g51DQEtK4/2zg5FxNoTL9AwdSVQoZ0vwU9iLtbWa0/c7l3
q3Awqz/+NFuWmNHAPwv20x6Kbb8/O5HZfkRIoL+T8ysVkCqiv4K+Hh/2arE/
mnP8RM9EsT+nOoXVYkNwP8W7V4Hi0GI/ho3zXpZVuj9RgTdL+Ei5P9FF7Cnt
M7o/5GvnTSC3uj9FafYqgUHBPyEjdCQYJMU/OTToMgvJqD8eym0/6AKmP2Kv
JTGPg2w/ORdG6GjeeT+U5gDpK1G5P7ylTl3fTro/auOguUPLkT/MHhfrA0+R
P8X2ia+0gaI/FyafNaOwoj/QmDdzZduyP7sm6xKoXbE/6pgVZU8Bor9IjDv4
pASjv/DsDlRXFbO/tFc4MXils7/C+FEUeaSLP/ywA6/BOZg/wn4LwCcQt78t
LQR0giS5v0E/v4EA9sW/rD3gcgQox79vD3F1vMJov9ER8LS3DGg/NNvIlKyG
ez+Wx1iYvWpyP2P4y1/jR6C/GJUQOmDVkr9iu/TY4ieIP07FYvZE/YA/JRwF
cfQPwj/1DUzjKgHCP/nC100tsrQ/AE8/BE/2sz+ypApSLzCoP9vs9Q5foKc/
x28BVcHItD9LqEhpQcS1Pz9/dLgqn7w/oFtUlj5guz+RtrkRScCHv5e2a50R
1Im/rp+BGzIjpT8T9NCorPeiP/RR3sP2c1S/B/qWev76Yz80mbknGe1TP2nl
M3qCoEC/AjxpDybIvL+3Na+4v8W7v2JGZj33scI/NiPszdXawT9vAqTsQ7qw
P0C5mC4VSbE/gpFt+1I8W79cStOqItpqvwE/juTxScA/av/R5IbJwD9PQvOU
vTakvxD3pnJvLaW/JjUhrwvJub+4YyzgR4O5vxJmB/M=
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Predicted response\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"Actual response\"", HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Strong MEK inhibition (25%)\"", TraditionalForm], 
     PlotRange -> {{-0.47141908328177834`, 
      0.7658754131993328}, {-0.5870972679524985, 0.5687387279860039}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Reference\"", "\"MEKi\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.867828902496224*^9, {3.8678289345977173`*^9, 3.8678289458256083`*^9}, 
   3.8678301293067207`*^9},
 CellLabel->
  "Out[1049]=",ExpressionUUID->"b2bf756a-39fe-4314-9ded-199418e8f10d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PairedHistogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"rloc", ".", "rGlob"}], "+", 
     RowBox[{"sMatrix", ".", "rGlobTot"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"rloc", ".", "rGlobMeki"}], "+", 
     RowBox[{"sMatrix", ".", "rGlobTotMeki"}], " ", "+", " ", "piMeki"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<No perturbation\>\"", ",", " ", 
      "\"\<Strong MEK inhibition (80%)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "->", "\"\<Distribution of Residuals\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BarSpacing", "->", "None"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.867830151106772*^9, 3.86783015569058*^9}},
 CellLabel->
  "In[1051]:=",ExpressionUUID->"724827d5-9a10-4a80-a409-549a5b0cf71a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.976, 0.6848, 0.26480000000000004`], EdgeForm[{Opacity[
    0.5459999999999999], Thickness[Small]}], {{{}, 
      {RGBColor[0.976, 0.6848, 0.26480000000000004`], EdgeForm[{Opacity[
       0.5459999999999999], Thickness[Small]}], 
       RectangleBox[Offset[{0, 0}, {-1., -0.08}], Offset[{0, 0}, {0., -0.06}],
        
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-1., -0.06}], Offset[{0, 0}, {0., -0.04}],
        
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-16., -0.04}], Offset[{0, 0}, {0., -0.02}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-649., -0.02}], Offset[{0, 0}, {0., 0.}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-418., 0.}], Offset[{0, 0}, {0., 0.02}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-12., 0.02}], Offset[{0, 0}, {0., 0.04}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {-3., 0.04}], Offset[{0, 0}, {0., 0.06}],
        RoundingRadius->0]}, {}, {}}, {{}, 
      {RGBColor[0.976, 0.6848, 0.26480000000000004`], EdgeForm[{Opacity[
       0.5459999999999999], Thickness[Small]}], 
       RectangleBox[Offset[{0, 0}, {2., -0.26}], Offset[{0, 0}, {0., -0.24}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {1., -0.22}], Offset[{0, 0}, {0., -0.2}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {2., -0.16}], Offset[{0, 0}, {0., -0.14}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {3., -0.14}], Offset[{0, 0}, {0., -0.12}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {1., -0.12}], Offset[{0, 0}, {0., -0.1}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {8., -0.1}], Offset[{0, 0}, {0., -0.08}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {10., -0.08}], Offset[{0, 0}, {0., -0.06}],
        
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {16., -0.06}], Offset[{0, 0}, {0., -0.04}],
        
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {59., -0.04}], Offset[{0, 0}, {0., -0.02}],
        
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {554., -0.02}], Offset[{0, 0}, {0., 0.}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {364., 0.}], Offset[{0, 0}, {0., 0.02}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {52., 0.02}], Offset[{0, 0}, {0., 0.04}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {20., 0.04}], Offset[{0, 0}, {0., 0.06}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {6., 0.06}], Offset[{0, 0}, {0., 0.08}],
        RoundingRadius->0], 
       RectangleBox[Offset[{0, 0}, {2., 0.08}], Offset[{0, 0}, {0., 0.1}],
        RoundingRadius->
         0]}, {}, {}}}, {}}, {{{{{{{{}, {}, {}, {}, {}, {}, {}}, {}}, 
        InsetBox["\<\"No perturbation\"\>", Offset[{0, 4}, {-324.5, 0.06}], 
         ImageScaled[{0.5, 0}]]}, {}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {}}, 
        InsetBox["\<\"Strong MEK inhibition (80%)\"\>", 
         Offset[{0, 4}, {277., 0.1}], ImageScaled[{0.5, 0}]]}, {}}}, {}}, {}}, 
   StyleBox[{
     TagBox[{
       StyleBox[
        StyleBox[{
          LineBox[{
           Offset[{0, 0}, {0., -0.278}], Offset[{0, 0}, {-681.45, -0.278}]}], 
          
          StyleBox[{
            
            StyleBox[
             LineBox[{{
               Offset[{0, 0}, {0., -0.278}], 
                Offset[{0, -4.}, {0., -0.278}]}, {
               Offset[{0, 0}, {-200., -0.278}], 
                Offset[{0, -4.}, {-200., -0.278}]}, {
               Offset[{0, 0}, {-400., -0.278}], 
                Offset[{0, -4.}, {-400., -0.278}]}, {
               Offset[{0, 0}, {-600., -0.278}], 
                Offset[{0, -4.}, {-600., -0.278}]}}],
             StripOnInput->False,
             FontOpacity->1], 
            StyleBox[{
              
              StyleBox[{
                InsetBox["0", Offset[{0., -7.}, {0., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["200", Offset[{0., -7.}, {-200., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["400", Offset[{0., -7.}, {-400., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["600", Offset[{0., -7.}, {-600., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}]},
               StripOnInput->False,
               FontOpacity->1], {}}, "GraphicsLabel",
             StripOnInput->False,
             FontOpacity->1]}, "GraphicsTicks",
           StripOnInput->False,
           FontOpacity->1]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False], 
       StyleBox[
        StyleBox[{LineBox[{{0., -0.278}, {681.45, -0.278}}], 
          StyleBox[{
            
            StyleBox[
             LineBox[{{{0., -0.278}, Offset[{0, -4.}, {0., -0.278}]}, {{
                200., -0.278}, Offset[{0, -4.}, {200., -0.278}]}, {{
                400., -0.278}, Offset[{0, -4.}, {400., -0.278}]}, {{
                600., -0.278}, Offset[{0, -4.}, {600., -0.278}]}}],
             StripOnInput->False,
             FontOpacity->1], 
            StyleBox[{
              
              StyleBox[{
                InsetBox["200", Offset[{0., -7.}, {200., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["400", Offset[{0., -7.}, {400., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                InsetBox["600", Offset[{0., -7.}, {600., -0.278}], 
                 ImageScaled[{0.5, 1.}], Automatic, {1, 0}]},
               StripOnInput->False,
               FontOpacity->1], {}}, "GraphicsLabel",
             StripOnInput->False,
             FontOpacity->1]}, "GraphicsTicks",
           StripOnInput->False,
           FontOpacity->1]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      Deploy,
      DefaultBaseStyle->"Deploy"], 
     StyleBox[
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {-681.45, -0.278}], 
          Offset[{0, 0}, {-681.45, 0.11800000000000001`}]}], 
        StyleBox[{
          LineBox[{{
            Offset[{0, 0}, {-681.45, -0.20000000000000004`}], 
             Offset[{4., 0}, {-681.45, -0.20000000000000004`}]}, {
            Offset[{0, 0}, {-681.45, -0.10000000000000002`}], 
             Offset[{4., 0}, {-681.45, -0.10000000000000002`}]}, {
            Offset[{0, 0}, {-681.45, 0.}], Offset[{4., 0}, {-681.45, 0.}]}, {
            Offset[{0, 0}, {-681.45, 0.10000000000000002`}], 
             Offset[{4., 0}, {-681.45, 0.10000000000000002`}]}}], 
          StyleBox[{{InsetBox[
              TagBox[
               RowBox[{"-", 
                FractionBox[
                 InterpretationBox[
                  StyleBox["\<\"1\"\>",
                   ShowStringCharacters->False],
                  1,
                  Editable->False], 
                 InterpretationBox[
                  StyleBox["\<\"5\"\>",
                   ShowStringCharacters->False],
                  5,
                  Editable->False]]}],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-681.45, -0.20000000000000004}], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], InsetBox[
              TagBox[
               RowBox[{"-", 
                FractionBox[
                 InterpretationBox[
                  StyleBox["\<\"1\"\>",
                   ShowStringCharacters->False],
                  1,
                  Editable->False], 
                 InterpretationBox[
                  StyleBox["\<\"10\"\>",
                   ShowStringCharacters->False],
                  10,
                  Editable->False]]}],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-681.45, -0.10000000000000002}], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
             InsetBox["0", Offset[{-3., 0.}, {-681.45, 0.}], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], InsetBox[
              TagBox[
               FractionBox[
                InterpretationBox[
                 StyleBox["\<\"1\"\>",
                  ShowStringCharacters->False],
                 1,
                 Editable->False], 
                InterpretationBox[
                 StyleBox["\<\"10\"\>",
                  ShowStringCharacters->False],
                 10,
                 Editable->False]],
               NumberForm[#, {
                 DirectedInfinity[1], 1}]& ], 
              Offset[{-3., 0.}, {-681.45, 0.10000000000000002}], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}]}, {}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]},
       Antialiasing->False], "GraphicsAxes",
      StripOnInput->False]},
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Charting`FindScaledTicks[
      (Cases[
       (Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& )[
        SlotSequence[1]], {
         PatternTest[
          Pattern[System`PairedHistogramDump`a, 
           Blank[]], NumericQ], 
         Pattern[System`PairedHistogramDump`b, 
          Blank[]], 
         Pattern[System`PairedHistogramDump`c, 
          BlankNullSequence[]]} :> {
        System`PairedHistogramDump`a, "", System`PairedHistogramDump`c}]& )[
       SlotSequence[1]], {Identity, Identity}]& , None}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {-200., 
       FormBox["200", TraditionalForm], {0.01, 0.}}, {-400., 
       FormBox["400", TraditionalForm], {0.01, 0.}}, {-600., 
       FormBox["600", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {200., 
       FormBox["200", TraditionalForm], {0.01, 0.}}, {400., 
       FormBox["400", TraditionalForm], {0.01, 0.}}, {600., 
       FormBox["600", TraditionalForm], {0.01, 0.}}}, None}},
  GridLines->{{250, 500, -250, -500}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  PlotLabel->FormBox["\"Distribution of Residuals\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->(Charting`SimpleTicks[#, #2, 6]& ),
  TicksStyle->{FontOpacity -> 1, Automatic}]], "Output",
 CellChangeTimes->{{3.867830134330166*^9, 3.8678301565717173`*^9}},
 CellLabel->
  "Out[1051]=",ExpressionUUID->"b81e8ee1-bd91-4d2f-87c7-672d0770be37"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.867829657150066*^9, 3.867829710080595*^9}, 
   3.867830213402432*^9},ExpressionUUID->"e946bb30-0255-4801-8d5d-\
0cbf97d982fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate BRAF mutation cells", "Subsection",
 CellChangeTimes->{{3.805525072490922*^9, 
  3.8055250835844927`*^9}},ExpressionUUID->"9c98e5f9-426a-4c3c-ba0a-\
dec6552d212a"],

Cell["\<\
We model a BRAF mutation by a 100-fold reduction in the BRAF deactivation \
rate.\
\>", "Text",
 CellChangeTimes->{{3.805525136999042*^9, 
  3.8055251736123133`*^9}},ExpressionUUID->"6fb07f29-5393-4b23-bdd9-\
edd57f140277"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parsBRAF", "=", 
   RowBox[{"pars", "/.", 
    RowBox[{"Rule", "[", 
     RowBox[{
      RowBox[{"reaction26kcat", "\[Rule]", "x_"}], ",", 
      RowBox[{"reaction26kcat", "\[Rule]", 
       RowBox[{"0.01", "*", "x"}]}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.805525096238209*^9, 3.80552513487615*^9}, {
   3.8055252705369797`*^9, 3.8055252748284273`*^9}, 3.805525366782151*^9},
 CellLabel->
  "In[397]:=",ExpressionUUID->"feed1a01-7c3e-441e-bcc5-a4165d495b44"],

Cell["This indeed leads to high Erk and Mek activation", "Text",
 CellChangeTimes->{{3.8055253071718616`*^9, 
  3.805525327086173*^9}},ExpressionUUID->"dad23b04-1447-4ca5-add2-\
c86a14bb3393"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tsBRAF", "=", 
   RowBox[{"tsol", "[", 
    RowBox[{"sys", ",", "parsBRAF"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "t", "]"}], "&"}], "/@", "vars"}], "/.", "tsBRAF"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Text", "[", "#", "]"}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}], "&"}], "/@", 
      "vars"}], ")"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.805525092203547*^9, 3.805525093611598*^9}, {
  3.8055251796627817`*^9, 3.8055253004906588`*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"a807930e-bfae-4d1c-b3dd-2a817923cf90"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVyXk8lfkCx3GS7lhDXWM/h8fYwiivTAq/ryU1kTLInTbOsRwqFOmWuLqW
0WmVhEzGIGZkD3UpKvTYyRaG7lhS1sF5iIPJnfvH5/X+46PJDfrOZ4OIiAjv
r/5v2r+4m7Z7X7cS3/uKXgqUQl0X29Gd7U9eWqycXb42gnW6OprNvkTe0wED
4bbTkE14UizZF0UsjLsO+hTMIe3lTZY4m08m7O4brosKYDjrfWudd5u4lBcK
XEsFeCf70+e13gRieiUoZVmWgXaOhNnK6j2yMzXSK8OSwRnL0IAl1n3ywiLa
r9CVQWn30MMF2wfk2myFu7sHg5XTjoPzvHQywjhERXox+Fl0kL+0N4O87ljd
auXNwK71zlefejOJ3iM39x1//fGUfa8W/B8S61U9WzMOgxvefx5nVrNJkuig
9fOTDExMSpfnb/5CBNlpHJHjDLpW/RLnWLkkKDRFV+t7BhfqNUxmSx4RBxl/
1o4jDFTudjfP2OaTvHar5V0uDLgGEJviFZGnh0VO7jnI4GK+VIWg9zGRNUrs
/caawd8GRnRnWBXk0Nr5fGt9Bn0vq0KnxytI8HDAmp0Og0c5KbVTJZXk7ucD
dfspBk7BTh6Tts/JlVP8Z87qDJIkKpM+8l4Q1bl/2PvLM1B40LBhvreGPNpp
X1UoFCCjKf3cFKuRyCkOFSQ0CbCQUm7w+41GQodHN/vUC2DPax7tFDYSvVy/
EPM6AabFltwqu5rI9zapnJEqAXZZOu3mx7WQRqvN5btLBHhTtLZBd7adbPKr
pMRTBIhsMjyw3aOLDHw1FS7iK0BhEX/gjPFvpFjknsINMQF4pOP+dPAoybrQ
o2PqPI/AMf3RssIJEu81oKyUOwdJzRjd33fNEbeYT0mrzCxuyTUbZHgyRKX2
gujuyj/AHXB9IdbyiUT4ydoMh8zg3OsYbpDuCnlw2KK1FtMoOSvtovTtn8Sj
yPuLfKMpZFw+PWniLgJnlb6AbzdPIip9zXlhWhSHePkaBbITEOkawvMwMQyy
zKoa1cahc973oquBOGSv13ZWsz/i/WLyEamqTcgVT9i0YPUBB8ZORSSc+wJm
w8IgcdcxOL2P36ahIYnHphJnpi68x2Qt90pDgRTyrtUdGS0ehbH8W3VbDxmM
xRvZ/joyAkmyyBlkZPGUQzcP649g38zRJS03OdQ+zeQ88x9GX4236FFDeaSE
bb4/UTaE8qt1J9mL8nCZ8LCbUxiCr3joUFubAvjOm6pLu/8Lr+DL5dKpW8Dv
MfO8k/MOX/O2tTlytiKkIeLLev4g2hUMpULN/47kaxMOSpwBPCuM+tFQTBEt
lXmRju6/4bKoweGWd4owjrBgtdr0Q3IwbH9g2Zc45qLnmWzVh7EczcT0cCUM
zTTpx7r1IlFPeWOFmzJuGxdk9XPfIj7Vt57DVsHgtns3TvF7cDTxRJv0RxXI
1u97F/K8G8t22cL0alVYzNxxHPjQhdExm4s1cWoIcmTZROt2IdNyu2orRx23
My91+nh2oiA2VJ5npAHytcXPSwUdiHPzchBb1EBUpr9So3gHdg5m5Ma1siB8
4qz+05E3SNH/saDVgY04pSj7YyHtiHx5M8Whgo2YpYCr44ZtOKjqlt2krYnU
uzLtpcIWWAfWH5PnayJgz1hv7IdmpKtxtVsWNaF1InSDQkMTtGt/SXI6poU5
On+LT30j4o1qDDqrtbBFXa07uKcBvszGjkYDCmH9mTkn+uvBLRGw+bcpqDZb
J15donEmymXtwB0K0v/k78lnaIS6lPVK36UwcNY1/s0sjauLobfikyi0awqt
VcdpFJoLV5PTKKifNq35Tx8N4av1tzl5FObjN6ttraQR3yl9s66eQnGSMtch
gkZqVoDfD40UXvscioy5RCPrfJvt/mYKybvs7atDaTxRjF9pbqPgry3SYRpI
Y/DoFr+uHgolezlvdTxo6I4q246MUpAYyvnB0JqGSVmYxsMxCuaKi9vPWtLY
HTsg9PlIYc89/dgycxqOumnFE5MUTta1a5EdNIJPszXm5yk4Sfd/c5yiEW7x
b+FjhoLsMzYrm0UjVmak+/wihc9J3II/VGmkFGVdX16m8MTYszp6K43MKxt5
lSsUspOG0S5HI8/ZxyZ8jYJCzLi/qgyNMi1a3eozBblWd3M/CRrVjI5wfZ1C
0T6FonJxGv8Di2QggA==
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVk3s41HkDxV1KFtnUymV+GH6ipkmjxerC9wgzbmtteOvRlozLVG5RNsmu
liSKZF0rO8mlixJRvdnIXa5diDba5FJLFIYYo/V6/zjPec6f53Oeo8sP3uEr
IyUlFbSo/3v2r3w5Y58zls88V+g1xYlQ18F02sk8QLLVp9ICYwax0FAZw2Qe
IxL793MeSS+gnHKvWOFlNOkcuOKsfrMB2VWJOkuZ8cRErddAfeA+2J98khYE
54i54vjby+Q6Xiv/8e98dwoJfztzL+uvC9Av+MpsTpJGQqqPNDL6ziLAIixw
RieLnKoPmksujkJpZ1/elPUlUtEaIBchE4o5f6feCYGQUMvl66lrvrgs3Rs/
Y5tD5uwGlWO2/gSbtvNrPndfId8fDN1h7uKGfzJ51VMH8shN/YA+G0MXnPX5
8pNIkk/s3gZaDnx0BIdTOjuReJW8OeC/NyrHHh2S/anjOteJ5VtXhBy0w8+N
2pxPJTfIF2ZU6PF6HjR/72wZs75JAm+klpoE8lC5N0Ew+uIWcc0PcjWy4IHP
guwHwW1SyikatdPjQUYS8WQqspikG8vORqzkobPPXWvKtoTI7nmaEiXPQ0ED
x1+kfIcIK9a+SZHmIfym4oPJ7jtknbCcWM1z4ZDyTm7ycim56rSksHGGCyq8
2m3iQBkxlFr98JGIiyrro+OfJHfJ7LaSIN4oF8t6+g3HdB6QpoaaPTJ/c/Gy
qiJs9J8HRCZ74d2xV1zcKMis/VBSTvjg5k12ceEc6uw5Yv2QjGTsyHv3hIv0
r8rT3wsekZGuQbOuai5WXnosM9FdQ+Ld+zhP87nIaRaGfNBpIn8rr7LbEMTF
VOZd1puzTWRpSsz2wINccAUtA8/FTYQEDPff8uNiVHbGvbyjmWyMtlc19uTC
3MJ5S3xcK+ktjFMkLlw8vT0vY/jpCSmgg72ObeIiqpntYOzZQVwu9q8VzNii
6HZ8T4DRK2IUeriOGWMLAXmWNRo6QHx6XmueKLZB0NC6gbKiYTJiv7trZtga
CronDd+YjxN1y1gNNsMaSStaWDn7ROS0uaHrO6/t4Pe4PZJt/UxSZDt5xjlW
CKk/yQ82nCPyL3843P0BKDmk5Kpu/4W4J/3l5GcP5Bz3H+HslMKOnnSbVBBE
C+d/nBqVhqnVVGesiiWkOvrwMEIWCamaJ1+JtsHgiF+4G2sp7IPNaOPmrRic
zviPYoUcsuSEJqcfbYHD0MFfUkLkEc89K/PNjc1wHkxer62tgIgaBc50njlG
avknHt9ShIbFPhvVP7+DkUqXlrXnckQfdjh0qtEMCmTaq1ekjIShaC/nMVPw
xjxm9NxX4DdqV+4+BVO8rPGR9mCrwLoiMKHTxAR3T9ftZU6rIFFYqJ4Q9i38
lob1tbevRMvdKvahok3wDj1+V+nCKkR6S9ssmzfGRsH6dievbzBuqmPS62qM
JyvZimGbVfEx08OrMI+DP4uiL7JlV2OL1cDF+8s4OC7Ncml9vRq9Htd5g4+N
oNAbYRdUpobL9h/z09I2YKhAN1UYqY5cns7XbtFspK7VWPLAXQNOEsHOh97r
kXzBr9GLqYkx42D+5OJ5PFL3tCu910RrwK83+w+tw6xNvlhYycB3pZaqOUfW
YmBoe3hNHIWF+tOqV1MMccXCmNHmpYWkKkZO1FUD3IoNUxFs0MZn8aXm+s41
iHP3dpSd1kbGl644A+U1MO3NuR7XpgPJLhV1HtFH5rqLt9ocmTARzbR8jKUR
VZWY6fiACUd63JdVr4fvGe75zfq6OGoX0V7ztR6sghp3q8TrIql58LxNoC6E
FF+/dVoX5zXNtmnXMaFfezXdebcelqiZmyaymUjeUMN6XrmYa93i9mzVgZ9o
ybMmFo02D4n8NRVt8EsmmfHnaDS/Yokn5bQQEO0673Cehue37ApvGS2EuZZ1
K/1O44O/mvOLLxROT4clJafTONqg0VU+RaFos1iSkU3D8rL88XP9FMTVC10F
hTTuz+8S762kkPxcKbGukQZrKKAt7WcKF3ID959qosE/UzOsE0oh90i7tV0L
DdWslPYbgRTurU6ea2mnoauoOlHjQy3uump/xwsaQk5D2vwOCoYDGtb9A4uc
/OVJ2kYKnLII7byhxT6acc/Xr6ewJbZH7PuexsaOH9i1BhScDLOLh0doRHqa
bJrSohDqz9SemKAx+EdkjKcShchtv4nviGhI1H6xnV9GIXZ5f+eRaRqmGcWt
WbIUMm/nnpmdpZEwbMDqnmPgyoklgvI5Gr6v9aWOfmag8Eff7ZHzNPrVWy+o
TTJQptegZfnvIj/2nPi/YwxUigzECws0Nl87q7V7mIH/AUZMJUg=
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ekcgeavt+jp5AeoJB4euMgKNj5RGFO5ZgItBrpN3XxGYE2+RwXl8AeoMD4XU
FhNoqvywtjJ0AWRLqnhjHxJY6PSPmCJ1AcQnVr0cGfO1OyYsu/vvAlxNfVat
dYNA1tddSrd5F6FjpuDrBn8CLdmu63yXXwQD7c/e1z0I5Mz66JJstQikqpCa
QsY8t+0zf09qWoS/Z/775XOQMf+I71c8ehZBrOzsxkg1AkssXSWGxhcBL8/I
xCkTSOoN9ytnXoKb3pkHvOUIzO4uV/XYvwTkOUuTHH4Cx79K5w1mLYHrIYuw
B6MUvNQ6FVvmtwyXH5dYWIRSUDDWD+TDl6HzKavmYAAFy0+wzyQkLENsxldv
C28K8rRIGboXL4O5gZWwgjMFn34xZZMfW4a5mnxTHWMKzjS88Us4uQKLZH66
hQgFPT6F2brJr4J9pXWsS0YqSo7qsS+qrkLqZWWurcmp2MjC9SQAV2ETT3hD
TUwqymE0NeLsKiTy3Tu1GpyKPeWJwdmRq8DRKt7z1zYVtZ7lZvTMrsL6vU/b
feVSUYCo69V5swbfm+3VQ7NT8Lk7r9mWY//B+oXDtOHoZHx4/fKkyhkmfGbk
NSxITcCQzD8m81PMGHZ0RG+fUzwydQxjhT8JpcwvabDwxuL2aw6+5gpsKLij
tMUnNhJ3qw+ZZaqwocW0qTg1OBLVmCyUJ/exYaQG88A1j0jUjjo2HqTDhv67
XlUTppFolb3LvOA8G3Kom+x03BSJSZ00ZZYYNnTO4PCYT7uLbHuDfhbTGd9L
rEr8eBGBowvJp3nesWOzBg9LANMdzNJSvTrwkR2ntd+8dqOFo3V0c0xxAzsu
le2dcR0Nx15ZtnqzbnYcKd5THVMXjm1mnhppdHZ8OAVgGReOlc+NpHcrcKDg
u0uqvHLhmHyFedI4mQPTYp0qCs1vo8HYpcB4D058TvjXbOwIQ71A8tMjvpxY
sPmqQG9tGGpv6u9dvMGJsYU+7oUVYaiue/zAuShOXO8y03bLDUOFHGU6+THj
fY+yrpV/GPLYzzu97OfEp5zVx36Qw7BpNNC8W58LNyyz1ukFhqLxaKyipCQ3
bsrozXmuH4JNiqOd52W50VkomGsrhKDh1f03CAVu9CXNRtzbF4JHWQZbt+zn
Rh29mLpQuRDUllb0FjrJjes2XEmvSCG49/ynKs4QbiysXNU68OEmSnSunKKP
ceOKqZhrKN7EyY+2wXWFPOgVHhfKeSIYlQS6tupYb8APvkPTQayByA0LNv10
PtzGS0TUyfuj/rTl0rZT/PiDP7Rqa4APdlfbMVvuEsAm1eMkm/1e+PJOjZX0
ggBq6SRPaJ6/ig5sXsPNzYLYq7b+93uiB170vP6SlyKEA7SgNX5Jd1R2VGw2
shHGoLpX9WN5V7BFcBeP18FNqGVcf6Rkx2V8WxRC7CKJ4CqLiOW//M54nVnh
ZNOACNp9ms1eZ3VE7n7/o66lm1EzxcbPfZ89juXKJGQGbMEEte70A8UXMWGH
KGvZKVF0nMhvLd1ti7EUh1obaTF8gvwL8uMX0DLh32ben2I4ZjKkKBtsjctH
clYyK8XxQeeEmdCBf3FkTNu3OlwCB8ZsXT4dOYdZh/eIf7HZiplfNFrlzc9i
4S0vAcfdkuh3eXxJ88kZDD910ZC0IIknMrqd3u44jXv7H+aHf5HCGiXJn0KP
zTFlJ1H4xVAaBcM0+gYtzTCoKjrFsEwah9TWOY34TPG4+KmcBlkZTO8a0OP4
fhK1XGvPCUTIYJd0Zu2mshOYKWEr27QggxV7+gnpwuMo+/FxkvG5bbiofFBL
6achxu6uVmiv3IZfvpHarh41QAc6a1u9AhmHHISbCnOOou1zmnREDBnVXb9+
7Duojy4hZn8M4sjoNJYo+lZVH73MSr/x3ifjqo2WUdpufbyz4HUvNomMI645
unYy+lh0cGUtOZ2Mfz/UeHNz6ePKh/Wu3AIyilXRtIu79TC2nTe6ppaM34Rf
M53200PKoytOt+vJKMfvWup2VQ8fXWvWOdpIxi73bJXIK3r4SiR2tbGZUZ/o
5uBaGz3stxRy6vhKRgvRIOdTBnooPyKq82OEjFv0S799EtdDlVJ/yewxMv4u
U6pb26SH6rf6Vux/kvH2X00fVX49NJJPf/ZrkozHR1/y5bHqoedlaUkqlYys
Z3kEc6d1MeDQzZUSOhln1VXGf/3UxVsbfnReWyCj9X3SNeUfuphS/ChyeZmM
g46nyt936WJWMKtj+SoZ/3x85MHdposFJvbaAX/IWHEah0836mLpts9bNf+S
cRv/fbacT7pYSd++wrgQUXWY9H3+vS7+D8OJl8Y=
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FFj+HyYqX7A=
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
dNZpsHOUruL/Lp7/b2VjgwbHFl9YbiP9P9SR4VU=
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwNlWc4FY4fxY1CZigh43JFGSUNSe73m5GRVCL9/Sq64pKMRGSkQigkLRHZ
q8yQHbKuvXfZI3vv8u/Fec6r8zznvPkcEbKNrikdDQ0NHe0//fOwR2SGo7df
kBh7t8MVn786UdZC0DYgWMB07JrX7m1bpe2KIg8C4SHoasifjVz/qcQelJ3G
3PkUhPYzVsZfFyCFFfsL7yT4wrLI1D3JKHWS9OztgG3KS4jQTH2UJW1B+ske
/nerIwiMot/gbUVPkljcrpMbm2/BNia992BdCOmukoPVqvAHwBARhoGOFNLX
1v6YJZWPUCLQf4t19Dtpw1K7d57yCfKDKWkSBvWkCNpe31W1SAj+Ems8s9FN
Uq17dWClIwok1jj5+DNHSePB6iVLFjGQ22fFmk5aIPnd/nN9cTMWUoztwuiO
b5FkZb+uzfvHw2Skv5Xa3p3Qsmn+Zk44EaJdjmSVfmKHB5VCsrPpSfDDYr6Z
LW0v8L9urZlW+QLOy+Um6ixCUHTzOWWqLRnaZ3vNwiliQJZE+klKKkzQPF+e
V5QCuk3nhiXXNOCTi9zeNXwUWvv1BZfU0qGMPl41Wloe4ipkLRfZM2AmdN7/
fpQSOH1hyV3oyACKz7NVmTxl0AoaZViI+Ap+gkam1DvqIOBUojdvkQkvQvUc
Bv9qw8yNj1FzclkgrgMKF6ovQ7GK49zsZhYoGfjJnIzTh6BDuqTZsmzw2eml
ECZmCLc5ZPxm/L8Ba+PvEplrRnBymbF7+moOHClglbqTRAbGnkGJaeFc6LH8
+XBgnxl0Fhc6TI3nAn1F25WCbQtIigv+MZmeBz+GpMUGrazB1e8+56RzPrDG
nGe9/+0e6NjpGE2oFMCzuJUVeh97IFw7lPybtRB0ioSnQ1IdYUFpx+Z4WyGI
BA+mPT/hAmXEPo3x8CIwZdoZ5iziDu925b0bo3wHX0Z1vZzCJ5DpqGV3n7cY
aEczGMcOeMLHCXm+Rddi2BT9nBdX9wy8bhwothsohjb1rRyPXF+wbuSiLKiV
QDuZon56xg8MVGjY7ZJKoCvdWcHwVCBg9nTmPHspSI79TtxJDAKuj1V08x2l
8ER7X4Ku+zvYZM9OtD3zA37luKh7rQTD8JPoS3MRP6Ck3m5YIyoU6pYCV212
lkHkJdlrUV7hkE15FD5rUQYaW7xmHU0R8KnbUs2mvgz+mkRXNblHgc+F/03N
yJXD03Z1D4pODBgeO356ZrMcdBNMXZT0EkAlTmTAyrgCoo5LNzO9TAJpPg6f
6bIKqKxOyPea/wJ7/bYOWx2qhF+6wv8Fu6XC37+/26b8KyH6mYNiMH86jN3r
cL27UAl+RbWPxf0zoHG4jDh1tQqsz34zcd6XCZHVn+5NClOB0zl1X5zjN1gK
zpLs86OC0UGpzo9OuXCOUjPUvE4FOGgamRGSDx9ODHysMKuG6ud1gv/1FcIU
/ap+Xks1rCyfSt4lVgzQzMqRgjVw2Mez/YhlCQRFiFZFJteA1DXgGSsvhVNK
Oqd9vWtBXudYs3xuObxgub3oulQLfM15Sfev/NvR9fCL7a06SOC2+uO5gwqe
D2KFrinWw+8b+x1DUmqhQzW/43xCPXQxXxclJ9aDJHdTIOxtgM5DyQIqRo3Q
mLpFJzHbAJ/3seXWhDUDF+y6yXa4ERS4JR0ym1tAUfzNae/bjXCtze51Kk8b
BCwlLjo3NYLX20zljroOyOk53rjE2AR85tC+U7kLBkq/f7EmNYGpT5np+cpu
OP6qzZT8uQm2zC6JH2f8BTedjJV7B5pg7/2LPr9L+8DbaFLoKm8zSIeS309V
9UO3DG2nplczVIioP2/MGgT3ammto0YtsKuSvMOMYwwS0r+Jf37bAoyMdA8J
yuPQHKxMf6C2Be779qRTH/8GMcq1Al6FVnhqw1YvSpwCHZ2h4CCbVth/UUfU
znsaHE9YO7DGtcI010/e2bUZqKb3PEzD3QbiovIXb9DNw9IEO4uzZhsw1gV0
djTMg2Dzh7FF9zYw4zP5+jJmAWwjUiPGptqAq/tqIvn2EvAo9XA1VLRDLWGU
+bryGqCY2azGn3ZQX28P89RZBwuW+ZrSYx1AYNRpPW+yAQVdDF7ZER1A/655
wDp+C8gP5FbDnDuBuelY0+sGGvS7UdiyL70TAicPDqY702KWqkbaq7FOcM+T
Tu+VpEMm7psWXnpdYEf0pM0PoceUVN+eu4e7Qe7PBurlM+AE14Sf1q1ukL/M
MS3rwYgSD7RIB990A5nnYKToJSaMOMMSObTeDQWN58I/rO/CIKqfmWF5DxRW
O5Ok/dmwXnp636m1HihKqw9heMyOLIEXqHuleiHmGxMxyokDPa+ySzcF9gJr
nZ1fXuFufDD0cl79+k+YoJ949GeYCzPOzUUdePkTItnZ1eIfcONs4iU9+tKf
oLsN5Bcse9DclvNbkcQvmA/ZDJCFvWj4J8j1xOIvSLtOjJFr2IefWGo8ONX6
4Vlx3bUbHwWRpORy/fHNfrio2JwgThHCXmupE7OO/XD+ZKv22Alh5G1+MVqb
1A9bJQafvtsQ8FWwtqbP7gHIFhdxl5UTRdnqLZHVQwNgNxrTLZggivWbXzZM
VQbAgsuE4xSBiMxGbF9UHgyAK5V9lWWfGHocqGff7hmAOheptX5hcRQ1eDRm
tTwAPSJSusPx4ljsc7i4l30QDDqKis7JSeDWZMC9vLODsJEdI6OscxAdMi62
OsQPAk9AXVh5tCRSoOnDlN0QGArEuX2oPoI0USt5PS+G4M4UZyrDGVkM3iHQ
Wx0zBMKzgjF738hiFdVMKLF9CNgU3rWSNI7iQb2tKNPTwzBZz71zT4kcjptL
fPlFOwLvTY2TnFZP4OMa7bo6/hGIYr31YeH2SeQ9bDdTcGwEquqZohZaTqLG
YoFsqOkIeCtvab3KlsdEN90sA+oItFK+b4YHKOCdILeixsBRSFI4UZjkp4R0
y1F93xNHgcbHyXSFm4QhBlU0qaWjUPpSQnz9IwmrBbhV/JdGodc9U1A2E1Aq
PqFS89oYOMrMmfduIk7ltzSWCo+DmZKr29QdFfQUWp9PPzUO8gP3LGkKVVDg
iRB35OVxqF9oWGbcrYra5yz03T3GoS7JsHY1RxWTG/92KY6Ngx1sFnjwnEPr
kUNDmSm/wXi98OFrWk3sv9nFVEL9DVkVcmcnLTXxSqfP4brh3xBwQVPGrUMT
T9WMPRzhnwA61orPVzO0kD49djeP9wQ85ABLLkdtDHYVITkaTcLdsXU2AeFL
yLzSaOLhPAlHj3m6e9y8hG42j31fvp0EbmIww7vwS0gm97XG10wCnfPtzO+E
yyitEWbZKT8FbxnfdJ2R0cUSbr4PCrv/cSVpOvINRQ+P+1cVqUlNg/utvkGO
DD2MY3AavnxuGqQ95wgqf/TQb739yB3XaXAxrYtofauPV/veVISMT8Now1x2
TsNVnEjavbRZPANvy9bTDlL+h8winhJ9p+bg+pGjj+wOGWHVmVdHHqnNwbb9
2dHPXkb47Fq4vKDuHNjNcJ0IHjRCusAc9f8s5+AklfGL2kVj3Pg7RekImwOb
EsG99hy3cLJXP6HhH+eaqOX20xFkrA2WOFRcOw+B0yae8bvM8Hnm8aNGXfMQ
7iczo69ihhqNZxX+jszDycbAFBM3MyxjvK55ZvtffsmiMGzBDAseBFrkHF2A
asut6JcDFEzWW09Me7cAjzJWbng2WWDA7hrJSONFSI6SjdPbsMJcecEsHetF
WJOOZPmjZo3DN21gy2URnlQav+cNskbFZG49g/eLkLvrlXKilA2Oa153Y6tf
hJgzT1t45WxRxWO64aHiEnBtRbjaOtzDtWUOB12eZRAaih89J2GPREHy9jZx
GSrfLeue17NHHdVM3+Sjy5Av71Tl88QeY4OuhTNdWIa3BRMfUnrtUfdIZGWR
xzJIDv4QjnnrgMnmcvxS88tg5muUKMHliOQeve/0tSsQG9xvsXncGZlDB6zu
da3A7ud14kzmzphhaC3QN7oC7g8WZDRDnZG+2/thHu0qiC3xR1HoXDCmM+/Y
PflVEI3sbeZqccHRNkLCr6hVUBjOe83wyA3vNE4F5j5cgxBaB+9vro/xXrkn
2UZiA2adIma+kTwx3Zb1Cq/mH7il2MIAfH4Y6WI5IWtAg3o+dPvVyoLw6aet
y0tTtLjPdjMv2vY90rT0Y4EzPS6kXx92O/QRxe3NnPQkd2Lfgba5nJQIHF5+
f5WlkAHdBsvGbhKiUWvkjlvQPSZMPqlkTF8VizrDgVJCQswoO5SRssckASd+
kB9XJbNgfOTdAxcak/AwZ7ugihEb6pufHoq3TUZmWL7Vu8iOo0X1LlGDqag+
bbgqqr8bc/Nz4jxV0rGz9DatoTQnmssvUvwCMjDLp+wmYZkT5x57MVmXfkWz
nQ799fVceHGp1k2WIwtN7FyyWEO4EW+4svWrZuMRilS99q09aBVqRfS5/w0b
uKRZHBT24nuBwJbavBzMT3kaKk3Pg2ZaFRfkJnPRhVbyUu1PHsyOfWVEczwf
mXudNawz9+EvCj9TqkMBjsSJvPnkyovGsa+acyIK8c1Bvh25+nwYZTjdNDlU
hIEhZpW3CPwYTL6gpc1UjIZvbtSzjvFjOSHQ+2hoMa6pxq5/KtqPgxMe/Gyn
S3BoRNmp1FsAVUJWVH/UlWCU0tH9dbcE0Zj1tbCBVSkmezlwUmSEMLmj6kYb
7Q/01jc5T7/878eSLXJngn7gid7IRO86YfzgMEJbdaQMgw+FJtedJ+BzzftV
iSVl6F7sH3w+l4ChWrwix4zK8cJ+/dhqMRHsuvpoz8X1cjxrXfkfp68ICrW+
vhzkU4GfBMhitcsi+MROU96IWIliP+Lf6fwnivyOAbImXysxUKZUsrlIFLMH
Zg34sArNFnc0USWJ6PnCCc50ViE5fYHg+5KITaG+zJmmVLz79Mq/4yDi/izu
GElzKjpcyexgfU3EmxZCxyPvUNFn2SEg8B0Ru3ZlywfYUDFFYX3zfRgRGenm
aykPqbhest0e95mIA75fjvD5UzGwmdW/rJKIQ7Gz7faZVAyJtjJ/RiUiPeU7
TmRTMdq+XkWjhog1dNyRRrlUzOYJ3Kip/9dH7pyaVhEVew25zVvaiHhZp2+/
cBUVJYb4VAaHiChxcpG2soeKspnOQjEjRDzZzdqq+IuKp7161k3HiPh94/PH
tH4qakuEpf2eICITvwtnyAgV7SwJQvPzRORKNfK9O0tF1zNP1jMWibh7TwLH
wDwVvdgGW+2XiVhe8cBPf4mKwanRL9bWiGjzKN6CtE7FqMc7KHkbRFz4tqs6
Y5OKny+bKrtuEVE1YYEg8ZeKmaIVgqS/REyxIFuH0lRj0aL4+j9AoRPP/zI4
6Kvx/6162IU=
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#8"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k0lF8YB3DLzFhDlJ8k24hCtlKJuo+kUlLZUklliVKWSoW0UZasJURI
SZYk0kK2UPadskZ2so2xzJgZfnf+mvM597zn3Hmf5973+crZupo6cHFwcERy
cnCwf+Pv2JI07R/vcW5MUVZI+7qnvEXW+ITsRaToFbgzcMwNVn4W+crKeqK9
NMGVuzLBIPTk8wf+9gdItbq60r46FuJLQmSIsoEo1ETXq+lOMqhO24euOIah
Wxd7tDTnM6BHKGGZ+fsJCr/sJq1Skw2Xd3tcWZR5jmhTs+Sbd/KgheEUOSOT
hoTDB8n0jhrg6epXmpTJQ1QzC4nHM13QXlLoMTGah7hfDveZlXdDekpM2b/s
fPTr077zaVE9YHLV5Oy4QQGitPapsbb3QhRfftSIYzEauG7YumXrXxB9UclF
+V2KEupkNx2HQUiqTnT/J1OFpB09DIZbx2Au5pNyb3AVerhZzcFJfRz2O9YM
NNOrUNBfmp184DhMcC9a5LdUo4eEJFX9Xf9g526TXYH+tUj68upZeDoBjVlM
LqXpBkSduqXKLzcNoojPZpVaI5o+0lTg6joNuoqRu/ztG5GBpu+m9YXTEDqX
RvVqakRFdIUcssoMbItoc7DNaELbrxkc4y2ZgbvVqoc0z7YgShOZLt9BgdTs
L4oZz1pQRVj2RPESBZpj9nJvrG1BKV7jPTxSs6DgaFUgodOKvrr1tMeemYVq
bj81DrE2ZGmgqN7dPQviu7tEG37+Qtv0Krj311LhfVZg12W1TnSGS0cq6uo8
jIuOBx8634k+HiSeEgycB6Ubh/ZsiuxEzgErnQcS5+GlnkDSAL0T6ddP3RSp
mYcnVcEXTv3oQrPTTxvmZBbgxkAY5YB1D5rz8OpzKV6AnP0zrzaG9aB158W8
XZsXYDrtmDl3aQ/SlxTw1xtaACe31V+KlP4g38Ls3N38i3CK9eS2NvUP0i47
kzh6fBESBWp8Vxv2Ie/gdrJ++yLs2e1tfc+mD33/eTZfb3QRul1UtKdv9qGw
sxqxArRFkGh+PFyb3ofizu/sVviPBhExxkYBIn9RTkJd2zEzGvhurBda6fqL
xL8Z6Y2W0UD+xJ2RK/N/UeF33+KDTTQoCVAr6RbqR6p5kYMP/tCA+S/UPV+/
H6F34lEPaTTwyDna6vG2H/lXWHM2KNPBETU9n7g6gL5634ayADpwvFrI73o8
gBJEe2RzntIhhiDVXZ2M3VSRfD+BDpVVF6TTfg2gmoTG7rKPdNhkznzlsGsQ
9WvzNPZ002HUSendH84h1GZoO5GxeQnu1RjX1UkOoYiJ4pEqrSWQULs6VbB1
CNVwRFrW6S7BQWqBRpzDEBII48h8eGQJ0nxMP52oGkJlEgazZa5LcOmJT1Fj
+DBqJabH5WQtAdf8q97itGGULz+ncvDLEsSeqOTIKh1Ge+pPO1QULUG1lJhB
yNwwChbcW+9btwQqb1MrjKxGkJ7w7CbG2BJMfGtpLJUZRVF2x1//J8MAP2k6
JXvnKCJRElvsNjJA6r60WNLxUbTXv+JYvAoDjPdftLjrO4p+dJzg7djBgMzG
5Q7dkVGkeqZR0fMoA1yGNg/kvh9DZ7Q5jQO8GdBn08H7vWoMqZY9HdC8zwCz
9gC1usExlPzRRqnqEQN21ox4DkmOI8svqnHfIxjAnf1GRNx/HK1yWmffl8KA
mNtye26e/YeyK1vGCPUM4F9otPP1+oeSfDaJv25mgI/rvcCwZ//Qz6XPBlq/
GWBr29v6tuYf6pCk2Cn0MUD1YLxz+44JdDc8qtuawoDvYuue64hMIrfDFYuG
q5mwLaSyyFBlEq1cFE/mW8uEFNKtweP7J9Hjg5fWfJdgQjD9l/ql25OoR768
V0CWCZa9kT9jRyfR+h811mvVmDCeLjLHKJlCPC1XD0gcZIK1Qsk63u4pdDDC
t2XzYSY0xLuiNYtTaDGyxEnThAm54fVBqlum0RvdZg2yORPu3giWO/N8Ggm+
u5kVeZYJ/HJ+Sr07Z5DG80t/q64zoVIvQv2O4QxyaWqYkbnJhEdWCTs2mM6g
qYlj0y6eTOAK/3rgtPMM8ub8I0zzYcLS8oTj7/gZlHSwUy3vERP+dVukNnBR
UNHouTDeaCak02w/uAhT0ISWjPpiDBOc1rh9XSVFQZ91Yxm9sUwYPBxUeVib
go63K9u+TGBCd37RaIUjBaWkpx7584YJtTFKm0tqKcgvOEHjzEcmBOVu0zzb
QUFVLbXBC7lMONior7M8REFcOVnrH39mQjmPtZHeCgVdMS8STMljQsGN8Itf
NWdR8VlyfXIxEzLN6WkfomaRvP632qZqJlx2I+UcfT2LTF609SrUMkE5WCx/
KmsWMSb8WNfqcH3KtlSrVs0iYSfNQFIjExK0bMdTGbOoKOySynIrE0JFapST
zlHRWedXt/X/MCFvx4ZPJi5UVKIWxnLvxf/PxhUxvakoz5iZltDHBN1MMfMT
0VTE23zwy0Q/E0aNrH1W1VPR+8wIhvUIEwx8Jxs8deeQed8Jt5hpJriko1NK
RnNIyEkMRcwwIbYpYrDVcg4FN0lQHlGYMCOzna5+dQ413W9QuEjF+yu4Iz+c
OodoziFUvkUm0OaFPUzF51F7ccylHywmkDfYrqyQ59H75afz4ctMMNmXG5ip
OY+yfv6mnVxhwpsnVgm8R+aRw56pwEEOFpiqJ1UU+WJnTuV2c7Mg00lLUoUy
j8LOTA+e5WNBe5hfcvvyPDLPLown8bOA8OWX2iPBBUSRDT2QgX2K6G3wV2kB
tcHmgCkBFvC+KrscbbOAjF0WXM8IscC2y7yYu3YBab1WP90vygL+uL9X3DsW
0IfCyDgnMRbknHKR6h1eQIK7SndPYnN3+nvmcy6iClX3b5Q1LEhuz9/qvmMR
HZ8oVBoVZ8Fwm2zqn1d4/Xb7bKgkC0KfZVoaf1hEhjdcn7Kwt1vsIuYXLiKR
O/59l9azwL/VzPZZ+yLaGSwZoS/Fgk0tj6SMhWiI2Z7zrXcDCy41ToTnedKQ
/ABvUr8sC0TDPZGSPw3xjhwZ2C3HgvyjpKnISBrie8MhHIMt0CBz2C2Lhr7o
eWgYybPgXZ0pUWmIhpSE3ywkkFkwVf3VM/IYHVFdhqzWK7IgKshwE5cNHSXK
/vp4AXvPoeZfrs50lD42tzkbO6zq39bDj+ioJ6v4qoESCzQqpac4C+joc0Vv
yZlNLHD/4WfrqrSETttwhzsrs0B6cD9pYesSEtl3JPMNdg0XX/ptWEJfGV6K
vdgbIYQSeHIJVW9Z2HpMhQUd+c/uJT9eQrY+3yaVVVmg/yEloWN6CV1LHLAu
34L3W++09xxzCWmLX+efx46bVB4e5mUgDuVltY1qLJhXztoyJ8dA/N/4B3yx
0958KRAyZyCvtnlZXXUWrI6r7DT4ykAN6hOaTzRYUJQXdKe6nIEyV79l5mM7
txvLH29iIGn9TvMB7B9rmy7ajDPQiZteOVqaLPAM76DdkmIi1q5b+2qx/z4c
F39/j4m2lv1q+KeF65v8Ln9bCBNtjCJyCm1lgW6Zi82350ykpbK3WR37GQf1
TWUOEy17j1ldxTbyZmwbGGSi6cKnolTsbDdBMwkjFhI7LbBucBsLamPFPDMt
WShFSWMztzbup3LJxL32LJRWWdEphy25bvO/y3dZaM76pqINtt93Q9/vn1iI
p9H7TjO2pejdj5fkl1H05SDJjO0scNN71LGivow2GFoXl2MHXQhZidy9jOjH
stf+wS7OjztcbLWMuue3dwnvwP1n93VALGwZ8f3h63fFXvpIEStkLCO/Uf8X
8jtZsOYPTceUbwXlu/aW7cBW4+U4NyK+gupC16YbY9tZC71brbWCyC3XP3tg
1xJU9l1wWkE8WS8Hy7ETLOyvC7etINHSjxpWOiz4etc5Nrl/BenRs+IvYrek
XS3RmVlBF+JyWr2wCXeBlEPkADkd3dcvsHe2mJh2y3LAKrJKSw92krfzuMYJ
DnC5nrdiuQv3Zwkfzf8MByTcLjhnj11CSCX22nHA/Z93Y92x+0IGZUPcOMDR
ziD2Mbb0yzMnxgI5YGrmcVshdmz50fKkAg5YXn8oYr0uC5T5pppopRyg3XX3
vSJ23pHg3qNVHBDHTEjXxG7/VbnEauOAL/hbcwBbfExf89Q0B1hHZ0y7YT9Z
tS1BVJ4Tegb84ouw5U2bMy5u4gQf+57GCuzsKLe8EjVO8FfQG23EbpTJbHXR
5YSY7O3l/dhCWooCNeaccKKFvpOoh+tnKXHL158TjvaXmRpiS8Z9ftgZwgl9
BfEjxthpveZPNSM54XT+D3tz7EqniPe9LznBXGRCwg6b5M0/pJvPCeHr3Vzv
Yj9IZB6fm+CEsPF9vLnYxzS+uqtQOeGtUaZ0Prb092sRtnS836pSuRLs/P7x
xkYiF+j8zZuqwZ7d2HE0U5oLRM0k0/qxbd99OnLhGBco/mdfKbgb12O3+5V4
Sy4IKootXo29XKca0mrNBSNXjFLEsWOnX9fuvcgF6aY9e2Wxm7WeHJZ5wAXy
Ks8LtbD181yM2j9ygfuRJ53m2EKHlC8K5+N1kbxuK+zuzqGA/SXY5nWN1ti3
mNaVubVcQLE0D7PH/oAOH4gY4gKjPo+L17DvNJIcK/9xgQ+1cfkGtvH50kcr
FC7w3LDJ3wt79IHOzyvLXCAra+J+H1v2p5Lhof+4YV3d6PtQ7CnLAfv7G7jh
wMaY3gjsgpEEv69kvL5Wn/AM24pPvFxRgxs8z45vjsMONyYYcBtxg1DMj7EU
bI6WPijw4oaH8WLmBdh+Y0VJXve5wX2VCE8xNh9HPJdOADdELv/L/I4tuuVk
+adn3ND3vPj3T+yN/k0Hsj5wg/pR+cRG7PT4rNQrX7jhQeD1uWZstdwQPtUi
buidiN3Thr3zr1FNag03UF60ZndgH9ItNXk1zA3OBUL/9WPXH3+ZdW6SG9bz
S4oPYps53RGRmeOGlU2d/MPY1s92NcdxEoA12d82hu0ynWPxTIoAbnvn5maw
Z4kRn83IBCj96pc8i31TyvU/UWUCkO1iDs1h3zNS6QjdQQC70xlei9hPX7+2
DjAlwO9IkSssbIn8+4X7TxLARuxkyzL2i8az0sRzBJDz/6vBsYcFKaz1ffev
EEDnp2AzF/bXE5F23gEEuDavkcWDredytVwnjAChgv1NvNjf/Y5tpD0jwOUt
Dyb4sKuzBUeuvyYA/0wXnyB2t8DDSy5FBNgYrzkijH1O3q5G9QcBGjse1Ihg
D+3UV/1XQ4DTjBOpq7GnHFiTjh0EWL1m/LAY9rXbXSaKfQRY/7RVdA027Ule
1uAwfn5tTDPbnCUe7ufnCEBxG9ETx370y6xZhkGAgBPRI2zzT2pu/cNJhGfc
Do//w14jOTV3SpgIrzgTiiSwYzRqLdaJE8H8oJbJOuwNB9I//5YiQpyD3G+2
Fa9fuGWuTARC8KU2Sewtu3rNEjWIUDO13WA99jYOK/Xx7USQ3OyVwbbuz0Z+
7d1EkIvVFpLC3htsNHzXgAgnJ244s21kWvq92ogIJ4JMytg+JqEbv/YYESLM
atduwLZJVjXPsCbCYBg9nW2HS2/UF2yJ8GOsZJLtyxrSAvoXiVCSaaMizX4/
C1HDj12JEBTWa8e2V4Fw6S8PItgcOxrN9v0HAfFyt4kQ8DzvB9sBBzk9Lz8g
Qliy8jTbYUJe5l8CiDBHzhSTwY5qnVXnCsPPNxhvZTs+1lngyDMiSEyLm7Cd
fG5wODqOCONGovZsZyieKe1PIoJpgbEH2zkTbfFbUokQerjhPtt5OSaet94T
wWg4OZDtklsV5mW5RGj1bwlmu2IPaAh9I0JTh+NjtusJeQInvxPBTd/lIdtt
1ZojryuIMECmerHdHZ5eOlVHBOthrstsD1iSE3RacX2T3lqxPS71wtOvkwiC
P0aAbUr/GouGPiIUutQpsE1LDdGQHCHCmRBbAtvLLiRBh0ki5LZ/6GW/D6L2
3ZEsKq7fldLPbAsyFkuX6ERwcHsZyLbod7cEQw4SLCuYW7G9zn/MM5xEgg8Z
Y/Jsyx6xtegSJIFziuMYu15KYl0aimIkMPP5lcG2WoeZoPs6EswnwSW29RwM
y0iKJGjeodTF7gcDlaKE46okIFlmh7B9iLLd64UWCXQjLPTYtvLZpKmFSLBf
WjyU3W/XnwkknrEigf23QAK7P71P+3ml2pBgZHImht2/D+RYFlR7EvC9+LqZ
7fDMKcFAdxI8DA4Edv+/+9HklRtEghIkuI99Xj4+PmS5Ek6C429MC9Zi5x8v
0zwUTYLzOts12a7syR3tfU2CjdEzIuzzNzgfbSlQSIKz8qJp7PP7Sn/rtZ4y
vN8npnT2+T4bUh+WVU2COJUeQ7Y7FYhVZu0k2H2S2iKE3WR2VfcFlQTRzUI/
BLCLso1ltyjzwNnba7mI2LdZI3orGjzg49MsScDWMfI92bSDB8R8TmpwY+f2
5T3xMOSBZYP+45zY6cJKxKJzPCC3lObKvu+ir3COm0TzwE4adf08tnneC5Jc
Ag/UHoogsO9LUeJOMjWZB8rGHcbZ92noCxfr6Bwe2Mpflcm+b/1quup763ig
U1h+zQS22+bPH90IvKD5QcWefZ8fGrrk88SdFyg9u3bUYe/3Ib/bd4sXHESp
v2uw967t7ly4wwsdQfE3qrF3GR7ZeTqYF6brOzIrsJXfqFPJb3lBNfEcoRRb
wGHO6VM3L2SclLH4jF076GPefoAPgoWJifHYJoPhKtLS/NA0IfvQkb2uMthq
rcAPN2y0ux2wD1/bcSdOmR8GZlW12N/jg1x/GiV28EPc79rOc+z9yKrcEDvG
D9wvOGVOYWtb/yjhfcAPUs9zrxtjS7XSLahD/DCeevKcBvZ4me29ykwBiDYV
eDSP5w211b82GJxdBVGd5HxnbH40f76bKgQejQLb/uL56cDkqUV5CxFozPt1
fi97Xiu15zyluhr+7LlakoDnvU8B5Tay86shctuzohU8T14gevTV14uCxWHB
LGNsu6venwRjxYC6Zso8Ec+v6o4q9cbn10BLTVXMNJ6PG0RVBTx01sLjf1JO
ytjf3j+IU+UWB5cePqXLeL725lQ+VtsjDps/BRKj8XzO3+110CX3P2j0yk8o
wvP+UIpcZOJtCYhxfLR7CueByE3rCHkW6yDEz5hGwA6PvVBxXlYSLD6J7FDA
eeNU5Jl6wRFJCInSVtPHeYS27w09sWg9VHx0VjTA+WVgaO+tUn8paP/EU2GC
88+r3Zrr685vgNdaOum7cT7KfOix2nGLNBR+lKnYjvOUv4XdYe55afgm0PBw
C85f2t1Jaf51MhB7IHk7EeezmM1xmXWHZcHF8tXV0c0suFsSEnM4TxYI4SF5
6Tj/HVlv8aZaQQ5e6SSdu4jzob5LxenVgXIQ/qdfUBvnx0QpW4XaeTkoD/+h
06PAAoWyt1Emp+WBcYKl9BTn0fAtpcrNRfJwaHLT1H6cVy9QCU1VymTIyUlN
acV51zZ7VjYwjAxctZLl7jL4e/PAjHkoggzqS3l3nLE9zHJ/Cz4lw4DGq50O
2AHzHqHhUWSIDzqSboX9XofOiI4nw7YvQg8RNv37yq+UDDJQ1TQlVmGHNwuG
lFeQQdUyNfetNJ5HX19xelRFhqQJU6sk7NfX6w0O1pDhm6IhIxb7s3j4Uk09
GZ6f5ECh2N2nxJxa2shw3Lex8Dq20sA6g/4BvK5VH6OPrZHrJZ08RIbbzZMa
uti7HnbRHUbIsM/BvHIbtrFS/IexcTIE7ViYU8K+6iwrTaGQYfHUY0Mh7Nt6
9+k5VDIQbf7+5sF+uKq/9fo8GRgMn4uc2DFZrx/TaGSY7A4KmtuA632P4Ji/
RIbV/Ix1U9gZxx323maS4XJKduoIdq78zw17lskg8vb99r/YRVRF+soKGUQ5
Z8s6sf8Hs91AYA==
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#9"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
vsY=
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#10"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV03c81fsfB3AZ1c8M3aJbnNMJN+tKaYjeb9FyS4NKKqushJMdGldEVEZd
uS0jKRkhKspWMsteB+c4x95nfGVUv+/94/P4PJ7/fT7v9+tFtfc45iAsJCTU
Qp7/7idX7ZduOh+5i5W3OW79u+Zdlc2UgycpLvBFd9bSixOBvz4X36BQLgP2
hX/4oJKK0rFvs8U7gmG1m2htTFcePim9oyxGuQXdrZq6GddLUHPq/N1fTlFw
5/PTZy82f8Ie6ac/F9tjIfzowcZzCTV40dDHbVb5X8gqveH4/U4TvmlhpvCN
H8PqAeqnCplWnHc9yJhxSgBv+g5qblA7mtTHqBDtyUDhumynKzCwecH5/rRy
Ghy7bpjUoduPvlVKOlM5ryArXLy3T4WNa+611E4YZ8CvCUkjnxUctFdHkTGn
12DwfUDnUv0ACi8EfOUHZcNKcf4uh8RBbGEeX8ffkwPvWX/6CV8cQv8MiQJu
ey5IlojL608Oo2ns4FJu4hvo+Rbcevj5CK71L7OYcckDi61Hk8VOjGKpsd/0
1EI+iOX+79qm52O4rLtfbUK5AL6sLpsyEprEjtIin/HhAvDiVagqRUziq9T4
irGcQliYpCRpyEyhmaeZzajxR6hqSK4tE5tGiuXGzBHJIrg6TQ2LMppGrqHo
wnBrEdxqbRrYGziNcf8rjBtyKoGmCFn5j8PTmOdn6umlUAq9kfFiT9bO4OPR
bYq8oFLgva7/nmk2g+7f5Jy4e8pA9L5SekLmDMo9/iI8014OMsPWYfaWXFyQ
fptGN6gATyV/ntM1LnL+fnZkOrECBluSfWSec/Gt09WnUy6VUPJBq857nIsJ
Xa57PBoqIeXF8oQD0jwMP3RqfFL3E/SHO92a1Oah1eYt+pMLn0DGO8C66SIP
jVOpLDfbz7DUsd5AJYKHmooy4ROVnyHj5yiFnsrDnz9HWsfvVIE788YWOQYP
k2oSLo0pV4PtGds4LwM+8uPz1ftuV0PYstPDeyz4uNeplt00Vw0GSfqF2q58
HBeZPV7YXANvE2jejnF8hCZJmSysBT+9va2fXvExNnH9l6TMWlisz04/U8zH
7YZm+rfC6oC64ZCLGZuPkRLneUH8Okj3a/B4x+djb+flDLpdPfQdUNDzFhNg
iO9zJcudDbBTz9lJWEWA314vCqtNfYW/X+ywX3VWgHLwP2sp7W/g9WEJtdJF
gDtV7+uHnf8G+18+zOT6CPAuP40X0PgNpvu5Q5zbAnzfveUbf1kjXP3+JiTn
gQBZ5SUZ7rsaQV8kuGJFsgC3xLQ62Kc3wkk3qSMP8gVo7W+7m8FqhEsaVkaf
iwUYZjOmdEKhCQ4oq216UCXALq0lHQdCm8A+6PcqzQ4BXqvRNN1k0wx3v7hZ
XBcI8GXOO9X0f5qh5+GRe4qLAmyK3y2iUtcMTf054CZM4AYny48KO1rIfaaI
m0kTaGbGjo/1aAHfyjdLmPIE+um5+0imtsD7QXnFrYoE1oiEaAvJt8JXfqv9
NhqB/FFpiYADrdC8U7hkUI3AdU3/DvGutYLJCla0vSaB9MTXiUPjreD8dE6+
aguBD8P0r9jR2gBX+li+2U5ghfunU92n2kCnVkrfy4DAVYbdcl8/t4GFqtF+
b2MCcYPj1P4fbWDyWSfs/V4CXSRmass3t8PG8bLbbQcI/Ni5NPRtYjtsi+Vd
eH6YwMHSGDud9nZ4OAPjlscIlHm5dtcrqQ5YErHz8pgFgfa+urNPAjpA765M
SO4pAm+fLWpendMBsvtsTEZOE5hvsj87ZqgDUh9vSxKxJnC5vLVLqEUnnP+q
ikN2BOrOD+/5FdEJBQccLueeI/A0y2v95bJO6O97tsXBgcCs17e6L2p3gUKN
wccQZwJH5UZvm9p1wXLXew+6XQhU8zXd9cf9Lvic6f9D2ZXA852vpsSqukDL
cOzOsYsEJhpIJLHnuqDbOpjt5UYgI8H1WJlmNxQph90LcSdQUaROJMGmG9Rz
f9MO9SAwtvq2o9WnbtASyzS1vERgg+bE6u3fu+FwQW+LhieBEtGHqn/TYMA2
+2SrGdL7eZkBvLMMeMPNME/zIjDkhLRmYzQDjvqe2WrhTWBpgXtPVgUD9rUm
e3FJ/1j79e5tggExeW99Q3wI1L/+J17Y2AMHzVa/Evcl0JcdNbPvTA9QXAo8
Q0nn7p1OVonqAQfhSV0B6am0IxYi5T2g6WFuauVHoKZUjhiL3wM6wdvl80k7
02XfFav1wrXCZUNi/gSmNF9yfmzVCx6SfWsOkWZtbVIMuNMLi7EZQpGklR7q
1p4s7YWc8pvDJaStfsQG6fF6YWN5oPI46Thbnpa8ah+w/syZkrlMYHOFed+0
JWnbNUkapFeo5UU3RPaBiZnWZSB9MGLl7oziPlCNSi/8i3T4hDfv1kwf+B1/
lHqEtP3LC02b5ZgQEbwj0Iy0UNea9GQNJtiem/DeQzpBovaG7B4mcO4ta9Aj
vcsw8Mx1aybsy0ovVibNcNfQm/JjguUiO0iEdEBit5R1DBP6LW13scj3KjRF
Dta9YoKozMyWAtJvRQxKdlYyYY1ubOx//7XQG3/wqocJcpOVoZakuY6P6Yqz
TEjx0DGkkI6JP3ggfAUL5E4bcvrJeerULFJnN7LgxmFuaiLphoWMeQdjFujb
aGedIi1uI5Vh7MuCQs8SlWJyPy+ji0Jyo1hQ4+vc70J6b7nbWWoaC9Ji2gJk
Sd9QaZD+1c0Cy+yqLxbk/tefvDrkJmDBDsaJ0un/8hKuXcqQ7oePPxpX3yK9
OHb3UqFRP0xfqbF+TebLJ/dwi8+LfmB0mtu0kvlcyfmVwSnth30L2vSTpHN/
yw417+oH32Xu79voBE76r9i2SYoN9JVFB+vJfDtB47/jnmyIcPRueUz2QSiZ
KOyOZEM2TZUpRTpedC2jJoUNfdGPGUFkf75UOyqltbEhr0Zi1ILs1x8Wi8kO
+hwICHESniL7OOysltG7ZADY9KPS7WR/L8ReKf4WPQiSKwWeZZYEug9sZOdl
jQBxtmjHZSTnRQ1R69s+DSeuFfUuLCPw7opa9SRbHgRkaJX5NArQvtuiRKSO
AKMdLlmUfwR46VOIvYfaPBzXpmYXWQowhy5prnDgB4x71484KwswKdB1VOek
EOpN7BHVZPIxOGHxKH98CU7OVtuqpfBRqJmJHwNEUG1plbmrMx9VvR39LdTF
0OhYr3+SKh85ggcnJIqWYqnGU/rpYR6aDly4EntpOY7etKGOP+OhGSdaQ0lJ
HOcHdA+32vBwtML++pdMCUxJOXwiSpmH2rJt64xtpPCkjOtSyU4uioPAjsGT
xkcjddMhcVzcN2E1u/74Cjz5jFL/5hAXO8rPL7HSlEViatNUqBgX88MrrSkC
Wdyo99L+adkMOor5MBsa5FChWrXQzW8Gz3kG5ks+lMeMT71GmZtm8E8njYaD
ditRXvH6O/b4NH6V05Tw2fEbztNVO3uSpvFDVvAjTZFVmMP4JzL89DQGLlE/
UtezClNHbsaJyEyjOCNgv3veamw1oMsfDZvCgVTq/YQgBZwbPU+nz0/i/T8U
RQuOK6LRD9VqL7tJjH7oWGVHWYMeNiHCd5sm0Or+2QbJoTUYytkpuLp3Ar+b
PJ9LKP4dQ85Wfk3LGkf2wG7/8rC1GHm60Ryo45hsuOn3ert1aBjVN348fAwz
Q31knbSUkCW2/v2y+VEMO37uLxGBElJN9qrLeoyiHiMpLaxeGaMfWfJXdI5g
/MZHmfV/UXCnKN+bcWgEr5Xeif+rgILrSlmvF98N46Hfjz+v2UDFYMUoQ67K
MBq5V52WvUVFpW7n/NqnQ5iw1n5DnYCKxWu3Pw6XGsINFS/izE6vx1W3lUy2
hg1itFa5elPxenQXMXBtFh1ER55oY7U6DQeTeAmD/gNon8Ol3Iqi4bNtOYFd
sxy8GGy+aBpDQ3WxjrwnAg76mOe1S96j4dKZt5J2PA6GC3zuRsfRcOx+vsLw
JAezdswtPHhCw9X3rZJnBzg4V/arLTWdhnfyL/29toWD0U2SdyqraFh50yX+
SjYHHz5zc75ZTcNV7vJ5JlkcfObdYLy/loZaVrpTEhkcfLsqer62gYZh9MGK
hy84yLCSd25upWHsH7VDBU85qMZWNO5n07Ah/6XSz9sc1MkLUEoZoCFljfWW
qggO6od2zzkM0bBTZcAlOpyDB9WeZI+M0nCZ7LUttBAOerpSlGZmaJh3NHi/
aSAHgwz+nsvl0bDcyOHsysscDJXqb/EW0PDjh32xvb4cjH/9LPL7dxpeYVLP
eHlyMPm6qFPhPA2rWzbMGNI5mH7UYXfQIg0lBg1Tl7tzMG/953W7fpLzKvAM
bHblYDFPde7XLxoGcL/Qn7pw8P9CFriW
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#11"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
GLu4sqYA/weBL5Tb
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#12"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVzWk41XkDxnGRRDSRp4Uch78yhMiSzNTvrjMlS2YKzVzK0EGH0TCMnSIx
MohsmbJkq0kRgyYRTstYTpRsTZQ92Z3lX1nSeF7c1/f6vLrV2N5H3cTFxMQ8
l/f/Zp1lrzJwjdtbMzHvR7z3fv24nWn9PdOD1FjHa8SopJLP/9SeZzKDybBF
lGZi3HOyNvluqczLSFJN7Vy/4iSfZNUnqEoyY0n9myh9ztIq6My4XvzMSSRb
7qS4Hy3fiNdrs5cWu5OJL/MLx7RxDWhclzaZX0gjFaunyvWy9XF6j//PH1T/
IP28gbcmZ0xR3tFfIGJlEqONvBnbtfsw72ndy+fkEFani+6huoO4tqI39sOB
XGI3lkMXfnsY37Rc2vq+O4/s1zHt73Y8incZ5lyRRwFxYISqGIUfQ7zrpxPC
hUJitPN2tqT0cbQvuKfOqt4kJZoqA7UFbAQ0MPRnyopIYttpr84wNyildPCm
WLdJcNefhx9EuoOtDYkJzh3iRgzNbsh7Q3wh5JkorJQYshKUmq180NFvryI6
UEZ2mxhHpKn/iqDba6oE3X8RhWpRTOfqQFgmv10luFZO/I5wr0xvCMaWIK4d
36OCxAgCT2w1CUU9K3B2ZqGSGNrtGPMvDIdUz6DmlGoV2eZ2d6r1ahRe1j/w
n3xXRYq2/+Bs1heNousZjybK7pP0jqrrEloxsPG1cRpn1RDFgXsKT1pjkS59
P32UU0f05D3LZB0ToZDZKM7vfkiMLWqdw4vTkNuc4zOh2kSk+Xy5pYBciDIq
tfvim0hmRKduykwuDnJ4Qy/mmsiuq/2Z99zzMCnxwf5+ezMRSI2pZZ3Ih+ke
G7PYmKdE6u5ZWRPLQjy/syiuOfOMBAptp5NMbyK8WcfSwKmdNLaUU4kFpSi5
E9tzWu8VmV7UDTEavAcOaftj0neI/MY97vS7xmN4jWgNVZSMEd2uc/LhCTzI
qEVp9pnOkvdkWHi+rA0X1/G0c52F5NM21QLunk6we+zqJJ6+J2M/7JmwEb2E
z5MotrfmPKk+pmz26tdelP0ia7vJ4hNx6dtkw0zpQ26o57j+92LYXWSxM/7U
ACJzFo+IJleg5UBdAr9jEGLt/agJkUCWaVzlVe1hbPM7FWSnLYn7vuvNw34f
wTB9+diaB6twLfuajtTDt7Ac+elMss9q+E2XNwSJv4PNcNJ2BkMGtoqc4nyd
MYw/Ykc0Fq+B0y7GlMBoHHryXSosJzm4zRzZGn1gAjKEPtkrXIsLbHNu6K5J
mE85fFC3XwdDg6LSKf0pvHzousJBRx5Z+0Z1/948jcoLj39k0vLw5o2blb+b
xilJ//7WVgUEjzKYN2pn4OIbWil7ZT3iJr8ovrR3Fjs421utTyoiU5jD6rw8
i2cKOmv8d/8PGl6jhUdEs6guibyqI7EBfcE+qdyDfISu0P7u6esNSHnT06mc
yYdMb8ghr4qNYLDNCxQm+Ri5rpaaE7YJTXomgR6GAqR+uXlllf1maM4lzXmc
ESDpyqmGk0wlVJg4RJ+pE8Ah1bFVdlQJTi3Jd9M+CfDxm8K5nFplXFh3T09p
rxBDI/uDHsZswQuWfUpNoBB5ewyUW06qQDFjsTahXIjiaH95ji4D6d/Fj0uO
CRFj72IlQTNQKi3ZYaMsgnFv7s2YFlX8eN55KelbETK0rha3WDHRazdbb3FW
hPD6hAyrKiYGbn10bywR4bCyfWGzhhq27wyStusVYZ9Xw3H5WDW8bH2zJCtJ
I2cLW+MprYbaguS/HXfQ0Hh0I93muDryql0jdtnTSNJ9qP2iVh1ke1FAVxCN
U8KVbU3aFP58kvV+KIsGu0zAjE2ksJRY+UmqjsbpSNtFy0sUsgd8xzOW7W9b
0S2bQqFFnFujVU/jAu1/MSmdwoYASsGKS6Nk99zC5SwK0byYiPhHNOa4n7uu
36IgryX5i0zj8v8L2YTHDRQm7mVXC57TuJL/s/tvTRTi2p+7RLTRyPdrZR3i
URhM1RXIvaBxd0PSPK+VQv1SMPfLdhq9Duvd2zsp2E8OaTt20tAc2swaHKLw
WltHl/svDf2KEEbBCIXwWpbZ4Vc0zKJ75txGKUxWt+n+u2xrzazSsXEKhhUu
jbM9NHw9mQw+n4Ly20Ee4w2NsK/Pzf0lpNDJMpArWna03GCHH03Bp0LZ2LiP
Rsad/LiPHykEOXebWvXTyItYybk/T2F+uEyxa9m3jrjtD1ukELv2q27nARoV
6v+o7F2iUHouMGJi2bXCbXOfP1NYGPRcFzBI4z9MhVIK
       "]]},
     Annotation[#, "Charting`Private`Tag$3899975#13"]& ]}, {{{}, {
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 11275.41940525532}], 
           Offset[{0, 0}, {10.2, 11275.41940525532}], 
           Offset[{0., 0.}, {10.304166666666667`, 11275.41940525532}], 
           Offset[{0., 0.}, {10.304166666666667`, 11275.41940525532}], 
           Offset[{0., 0.}, {10.408333333333333`, 11275.41940525532}], 
           Offset[{0, 0}, {11.008333333333335`, 220288.80882337}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            220288.80882337}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 11275.41940525532}], 
           Offset[{0, 0}, {10.2, 11275.41940525532}], 
           Offset[{0., 0.}, {10.304166666666667`, 11275.41940525532}], 
           Offset[{0., 0.}, {10.304166666666667`, 11275.41940525532}], 
           Offset[{0., 0.}, {10.408333333333333`, 11275.41940525532}], 
           Offset[{0, 0}, {11.008333333333335`, 220288.80882337}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            220288.80882337}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{105., 12.000000000000023`}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{105., -11.999999999999977`}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{10., -11.999999999999998`}, {11.008333333333335`, 
            220288.80882337}], 
           Offset[{10., 12.000000000000002`}, {11.008333333333335`, 
            220288.80882337}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["boundEGFReceptor", TextForm]], "InlineText",
              ExpressionUUID->"0a4dafe2-e1af-4717-826f-97081847e90c"],
             Text[$CellContext`boundEGFReceptor]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{57.5, 1.27675647831893*^-14}, \
{11.008333333333335, 220288.80882337}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 6.977886640272168}], 
           Offset[{0, 0}, {10.2, 6.977886640272168}], 
           Offset[{0., 0.}, {10.304166666666667`, 6.977886640272168}], 
           Offset[{0., 0.}, {10.304166666666667`, 6.977886640272168}], 
           Offset[{0., 0.}, {10.408333333333333`, 6.977886640272168}], 
           Offset[{0, 0}, {11.008333333333335`, 16471.98049159936}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            16471.98049159936}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 6.977886640272168}], 
           Offset[{0, 0}, {10.2, 6.977886640272168}], 
           Offset[{0., 0.}, {10.304166666666667`, 6.977886640272168}], 
           Offset[{0., 0.}, {10.304166666666667`, 6.977886640272168}], 
           Offset[{0., 0.}, {10.408333333333333`, 6.977886640272168}], 
           Offset[{0, 0}, {11.008333333333335`, 16471.98049159936}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            16471.98049159936}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{95., 12.000000000000021`}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{95., -11.999999999999979`}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{10., -11.999999999999996`}, {11.008333333333335`, 
            16471.98049159936}], 
           Offset[{10., 12.000000000000004`}, {11.008333333333335`, 
            16471.98049159936}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["freeEGFReceptor", TextForm]], "InlineText",
              ExpressionUUID->"cc814c8e-4e03-4188-b402-b703724b46bc"],
             Text[$CellContext`freeEGFReceptor]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{52.5, 1.1657341758564144*^-14}, \
{11.008333333333335, 16471.98049159936}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 5558.383005752235}], 
           Offset[{0, 0}, {10.2, 5558.383005752235}], 
           Offset[{0., 0.}, {10.304166666666667`, 5558.383005752235}], 
           Offset[{0., 0.}, {10.304166666666667`, 5558.383005752235}], 
           Offset[{0., 0.}, {10.408333333333333`, 5558.383005752235}], 
           Offset[{0, 0}, {11.008333333333335`, 112923.02053318358`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            112923.02053318358`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            112923.02053318358`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            112923.02053318358`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 5558.383005752235}], 
           Offset[{0, 0}, {10.2, 5558.383005752235}], 
           Offset[{0., 0.}, {10.304166666666667`, 5558.383005752235}], 
           Offset[{0., 0.}, {10.304166666666667`, 5558.383005752235}], 
           Offset[{0., 0.}, {10.408333333333333`, 5558.383005752235}], 
           Offset[{0, 0}, {11.008333333333335`, 112923.02053318358`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            112923.02053318358`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            112923.02053318358`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            112923.02053318358`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{60., 12.000000000000012`}, {11.008333333333335`, 
            112923.02053318358`}], 
           Offset[{60., -11.999999999999988`}, {11.008333333333335`, 
            112923.02053318358`}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {
            11.008333333333335`, 112923.02053318358`}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {
            11.008333333333335`, 112923.02053318358`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["SosActive", TextForm]], "InlineText",ExpressionUUID->
              "b8e224ae-37a0-467f-82b3-7de89c7326b2"],
             Text[$CellContext`SosActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{35., 7.771561172376096*^-15}, \
{11.008333333333335, 112923.02053318358}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 1094.9275605332568`}], 
           Offset[{0, 0}, {10.2, 1094.9275605332568`}], 
           Offset[{0., 0.}, {10.304166666666667`, 1094.9275605332568`}], 
           Offset[{0., 0.}, {10.304166666666667`, 1094.9275605332568`}], 
           Offset[{0., 0.}, {10.408333333333333`, 1094.9275605332568`}], 
           Offset[{0, 0}, {11.008333333333335`, 75472.21042374025}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            75472.21042374025}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            75472.21042374025}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            75472.21042374025}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 1094.9275605332568`}], 
           Offset[{0, 0}, {10.2, 1094.9275605332568`}], 
           Offset[{0., 0.}, {10.304166666666667`, 1094.9275605332568`}], 
           Offset[{0., 0.}, {10.304166666666667`, 1094.9275605332568`}], 
           Offset[{0., 0.}, {10.408333333333333`, 1094.9275605332568`}], 
           Offset[{0, 0}, {11.008333333333335`, 75472.21042374025}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            75472.21042374025}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            75472.21042374025}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            75472.21042374025}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{61., 12.000000000000012`}, {11.008333333333335`, 
            75472.21042374025}], 
           Offset[{61., -11.999999999999988`}, {11.008333333333335`, 
            75472.21042374025}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {
            11.008333333333335`, 75472.21042374025}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {
            11.008333333333335`, 75472.21042374025}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["RasActive", TextForm]], "InlineText",ExpressionUUID->
              "c1ba62d3-39e5-413e-97c1-14bfe3fd3078"],
             Text[$CellContext`RasActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{35.5, 7.882583474838611*^-15}, \
{11.008333333333335, 75472.21042374025}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 43.49966061295745}], 
           Offset[{0, 0}, {10.2, 43.49966061295745}], 
           Offset[{0., 0.}, {10.304166666666667`, 43.49966061295745}], 
           Offset[{0., 0.}, {10.304166666666667`, 43.49966061295745}], 
           Offset[{0., 0.}, {10.408333333333333`, 43.49966061295745}], 
           Offset[{0, 0}, {11.008333333333335`, 40238.765073170696`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            40238.765073170696`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            40238.765073170696`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            40238.765073170696`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 43.49966061295745}], 
           Offset[{0, 0}, {10.2, 43.49966061295745}], 
           Offset[{0., 0.}, {10.304166666666667`, 43.49966061295745}], 
           Offset[{0., 0.}, {10.304166666666667`, 43.49966061295745}], 
           Offset[{0., 0.}, {10.408333333333333`, 43.49966061295745}], 
           Offset[{0, 0}, {11.008333333333335`, 40238.765073170696`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            40238.765073170696`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            40238.765073170696`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            40238.765073170696`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {11.008333333333335`, 
            40238.765073170696`}], 
           Offset[{64., -11.999999999999986`}, {11.008333333333335`, 
            40238.765073170696`}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {
            11.008333333333335`, 40238.765073170696`}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {
            11.008333333333335`, 40238.765073170696`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["Raf1Active", TextForm]], "InlineText",ExpressionUUID->
              "985705af-b778-45bb-98f0-8554b84a70bb"],
             Text[$CellContext`Raf1Active]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, \
{11.008333333333335, 40238.765073170696}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 549012.0644275536}], 
           Offset[{0, 0}, {10.2, 549012.0644275536}], 
           Offset[{0., 0.}, {10.304166666666667`, 549012.0644275536}], 
           Offset[{0., 0.}, {10.304166666666667`, 549012.0644275536}], 
           Offset[{0., 0.}, {10.408333333333333`, 549012.0644275536}], 
           Offset[{0, 0}, {11.008333333333335`, 527272.059650292}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            527272.059650292}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            527272.059650292}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            527272.059650292}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 549012.0644275536}], 
           Offset[{0, 0}, {10.2, 549012.0644275536}], 
           Offset[{0., 0.}, {10.304166666666667`, 549012.0644275536}], 
           Offset[{0., 0.}, {10.304166666666667`, 549012.0644275536}], 
           Offset[{0., 0.}, {10.408333333333333`, 549012.0644275536}], 
           Offset[{0, 0}, {11.008333333333335`, 527272.059650292}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            527272.059650292}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            527272.059650292}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            527272.059650292}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{62., 12.000000000000014`}, {11.008333333333335`, 
            527272.059650292}], 
           Offset[{62., -11.999999999999986`}, {11.008333333333335`, 
            527272.059650292}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {
            11.008333333333335`, 527272.059650292}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {
            11.008333333333335`, 527272.059650292}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["MekActive", TextForm]], "InlineText",ExpressionUUID->
              "de8a09c8-2f52-47c3-bde7-499860751299"],
             Text[$CellContext`MekActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{36., 7.993605777301127*^-15}, \
{11.008333333333335, 527272.059650292}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 571287.1672894465}], 
           Offset[{0, 0}, {10.2, 571287.1672894465}], 
           Offset[{0., 0.}, {10.304166666666667`, 571287.1672894465}], 
           Offset[{0., 0.}, {10.304166666666667`, 571287.1672894465}], 
           Offset[{0., 0.}, {10.408333333333333`, 571287.1672894465}], 
           Offset[{0, 0}, {11.008333333333335`, 575127.8997839963}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            575127.8997839963}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            575127.8997839963}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            575127.8997839963}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 571287.1672894465}], 
           Offset[{0, 0}, {10.2, 571287.1672894465}], 
           Offset[{0., 0.}, {10.304166666666667`, 571287.1672894465}], 
           Offset[{0., 0.}, {10.304166666666667`, 571287.1672894465}], 
           Offset[{0., 0.}, {10.408333333333333`, 571287.1672894465}], 
           Offset[{0, 0}, {11.008333333333335`, 575127.8997839963}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            575127.8997839963}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            575127.8997839963}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            575127.8997839963}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{58., 12.000000000000012`}, {11.008333333333335`, 
            575127.8997839963}], 
           Offset[{58., -11.999999999999988`}, {11.008333333333335`, 
            575127.8997839963}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {
            11.008333333333335`, 575127.8997839963}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {
            11.008333333333335`, 575127.8997839963}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["ErkActive", TextForm]], "InlineText",ExpressionUUID->
              "0d0f7fae-3a9f-4cfe-995b-d7181af55671"],
             Text[$CellContext`ErkActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{34., 7.549516567451064*^-15}, \
{11.008333333333335, 575127.8997839963}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 13318.122630248996`}], 
           Offset[{0, 0}, {10.2, 13318.122630248996`}], 
           Offset[{0., 0.}, {10.304166666666667`, 13318.122630248996`}], 
           Offset[{0., 0.}, {10.304166666666667`, 13318.122630248996`}], 
           Offset[{0., 0.}, {10.408333333333333`, 13318.122630248996`}], 
           Offset[{0, 0}, {11.008333333333335`, 256166.46090945837`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            256166.46090945837`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 13318.122630248996`}], 
           Offset[{0, 0}, {10.2, 13318.122630248996`}], 
           Offset[{0., 0.}, {10.304166666666667`, 13318.122630248996`}], 
           Offset[{0., 0.}, {10.304166666666667`, 13318.122630248996`}], 
           Offset[{0., 0.}, {10.408333333333333`, 13318.122630248996`}], 
           Offset[{0, 0}, {11.008333333333335`, 256166.46090945837`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            256166.46090945837`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{78., 12.000000000000018`}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{78., -11.999999999999982`}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{10., -11.999999999999996`}, {11.008333333333335`, 
            256166.46090945837`}], 
           Offset[{10., 12.000000000000004`}, {11.008333333333335`, 
            256166.46090945837`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["P90RskActive", TextForm]], "InlineText",ExpressionUUID->
              "cd39e276-1d37-428f-9e39-fc18677d91ea"],
             Text[$CellContext`P90RskActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{44., 9.769962616701378*^-15}, \
{11.008333333333335, 256166.46090945837}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 119261.67283821505`}], 
           Offset[{0, 0}, {10.2, 119261.67283821505`}], 
           Offset[{0., 0.}, {10.304166666666667`, 119261.67283821505`}], 
           Offset[{0., 0.}, {10.304166666666667`, 119261.67283821505`}], 
           Offset[{0., 0.}, {10.408333333333333`, 119261.67283821505`}], 
           Offset[{0, 0}, {11.008333333333335`, 428724.2106587271}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            428724.2106587271}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            428724.2106587271}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            428724.2106587271}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 119261.67283821505`}], 
           Offset[{0, 0}, {10.2, 119261.67283821505`}], 
           Offset[{0., 0.}, {10.304166666666667`, 119261.67283821505`}], 
           Offset[{0., 0.}, {10.304166666666667`, 119261.67283821505`}], 
           Offset[{0., 0.}, {10.408333333333333`, 119261.67283821505`}], 
           Offset[{0, 0}, {11.008333333333335`, 428724.2106587271}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            428724.2106587271}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            428724.2106587271}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            428724.2106587271}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{65., 12.000000000000014`}, {11.008333333333335`, 
            428724.2106587271}], 
           Offset[{65., -11.999999999999986`}, {11.008333333333335`, 
            428724.2106587271}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {
            11.008333333333335`, 428724.2106587271}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {
            11.008333333333335`, 428724.2106587271}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["PI3KActive", TextForm]], "InlineText",ExpressionUUID->
              "84ebe51c-bf4d-4731-b166-a1f0cffd26a8"],
             Text[$CellContext`PI3KActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37.5, 8.326672684688674*^-15}, \
{11.008333333333335, 428724.2106587271}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 9590.374950140917}], 
           Offset[{0, 0}, {10.2, 9590.374950140917}], 
           Offset[{0., 0.}, {10.304166666666667`, 9590.374950140917}], 
           Offset[{0., 0.}, {10.304166666666667`, 9590.374950140917}], 
           Offset[{0., 0.}, {10.408333333333333`, 9590.374950140917}], 
           Offset[{0, 0}, {11.008333333333335`, 184643.5958145427}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            184643.5958145427}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            184643.5958145427}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            184643.5958145427}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 9590.374950140917}], 
           Offset[{0, 0}, {10.2, 9590.374950140917}], 
           Offset[{0., 0.}, {10.304166666666667`, 9590.374950140917}], 
           Offset[{0., 0.}, {10.304166666666667`, 9590.374950140917}], 
           Offset[{0., 0.}, {10.408333333333333`, 9590.374950140917}], 
           Offset[{0, 0}, {11.008333333333335`, 184643.5958145427}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            184643.5958145427}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            184643.5958145427}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            184643.5958145427}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{58., 12.000000000000012`}, {11.008333333333335`, 
            184643.5958145427}], 
           Offset[{58., -11.999999999999988`}, {11.008333333333335`, 
            184643.5958145427}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {
            11.008333333333335`, 184643.5958145427}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {
            11.008333333333335`, 184643.5958145427}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["AktActive", TextForm]], "InlineText",ExpressionUUID->
              "d6a72ad0-a307-45f4-8943-9cdf72ee1a1d"],
             Text[$CellContext`AktActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{34., 7.549516567451064*^-15}, \
{11.008333333333335, 184643.5958145427}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 41804.95126769408}], 
           Offset[{0, 0}, {10.2, 41804.95126769408}], 
           Offset[{0., 0.}, {10.304166666666667`, 41804.95126769408}], 
           Offset[{0., 0.}, {10.304166666666667`, 41804.95126769408}], 
           Offset[{0., 0.}, {10.408333333333333`, 41804.95126769408}], 
           Offset[{0, 0}, {11.008333333333335`, 309229.2707517205}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            309229.2707517205}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            309229.2707517205}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            309229.2707517205}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 41804.95126769408}], 
           Offset[{0, 0}, {10.2, 41804.95126769408}], 
           Offset[{0., 0.}, {10.304166666666667`, 41804.95126769408}], 
           Offset[{0., 0.}, {10.304166666666667`, 41804.95126769408}], 
           Offset[{0., 0.}, {10.408333333333333`, 41804.95126769408}], 
           Offset[{0, 0}, {11.008333333333335`, 309229.2707517205}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            309229.2707517205}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            309229.2707517205}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            309229.2707517205}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {11.008333333333335`, 
            309229.2707517205}], 
           Offset[{64., -11.999999999999986`}, {11.008333333333335`, 
            309229.2707517205}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {
            11.008333333333335`, 309229.2707517205}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {
            11.008333333333335`, 309229.2707517205}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["C3GActive", TextForm]], "InlineText",ExpressionUUID->
              "a92062da-f34b-4189-a770-fc71bb96d8a6"],
             Text[$CellContext`C3GActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, \
{11.008333333333335, 309229.2707517205}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 8146.107253208248}], 
           Offset[{0, 0}, {10.2, 8146.107253208248}], 
           Offset[{0., 0.}, {10.304166666666667`, 8146.107253208248}], 
           Offset[{0., 0.}, {10.304166666666667`, 8146.107253208248}], 
           Offset[{0., 0.}, {10.408333333333333`, 8146.107253208248}], 
           Offset[{0, 0}, {11.008333333333335`, 149154.8554234739}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            149154.8554234739}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            149154.8554234739}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            149154.8554234739}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 8146.107253208248}], 
           Offset[{0, 0}, {10.2, 8146.107253208248}], 
           Offset[{0., 0.}, {10.304166666666667`, 8146.107253208248}], 
           Offset[{0., 0.}, {10.304166666666667`, 8146.107253208248}], 
           Offset[{0., 0.}, {10.408333333333333`, 8146.107253208248}], 
           Offset[{0, 0}, {11.008333333333335`, 149154.8554234739}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            149154.8554234739}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            149154.8554234739}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            149154.8554234739}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{67., 12.000000000000016`}, {11.008333333333335`, 
            149154.8554234739}], 
           Offset[{67., -11.999999999999984`}, {11.008333333333335`, 
            149154.8554234739}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {
            11.008333333333335`, 149154.8554234739}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {
            11.008333333333335`, 149154.8554234739}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["Rap1Active", TextForm]], "InlineText",ExpressionUUID->
              "fc410605-50a3-41e7-a3f5-d95e25811955"],
             Text[$CellContext`Rap1Active]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{38.5, 8.548717289613705*^-15}, \
{11.008333333333335, 149154.8554234739}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 89639.37900913872}], 
           Offset[{0, 0}, {10.2, 89639.37900913872}], 
           Offset[{0., 0.}, {10.304166666666667`, 89639.37900913872}], 
           Offset[{0., 0.}, {10.304166666666667`, 89639.37900913872}], 
           Offset[{0., 0.}, {10.408333333333333`, 89639.37900913872}], 
           Offset[{0, 0}, {11.008333333333335`, 374865.4309561906}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            374865.4309561906}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            374865.4309561906}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            374865.4309561906}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {10.2, 89639.37900913872}], 
           Offset[{0, 0}, {10.2, 89639.37900913872}], 
           Offset[{0., 0.}, {10.304166666666667`, 89639.37900913872}], 
           Offset[{0., 0.}, {10.304166666666667`, 89639.37900913872}], 
           Offset[{0., 0.}, {10.408333333333333`, 89639.37900913872}], 
           Offset[{0, 0}, {11.008333333333335`, 374865.4309561906}], 
           Offset[{5., 1.1102230246251565`*^-15}, {11.008333333333335`, 
            374865.4309561906}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            374865.4309561906}], 
           Offset[{10., 2.220446049250313*^-15}, {11.008333333333335`, 
            374865.4309561906}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {11.008333333333335`, 
            374865.4309561906}], 
           Offset[{64., -11.999999999999986`}, {11.008333333333335`, 
            374865.4309561906}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {
            11.008333333333335`, 374865.4309561906}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {
            11.008333333333335`, 374865.4309561906}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["bRafActive", TextForm]], "InlineText",ExpressionUUID->
              "61bfc122-e230-469a-9cc4-fc8cd33ef12a"],
             Text[$CellContext`bRafActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, \
{11.008333333333335, 374865.4309561906}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 137.8}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {1.172005470854948*^-50, 571287.1672894465}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.855393989095943*^9, 3.855394197160483*^9, 
  3.855916242483119*^9, 3.8566050146559887`*^9, 3.872849094365409*^9, 
  3.873882300399146*^9},
 CellLabel->
  "Out[399]=",ExpressionUUID->"ce37d131-7de1-49c7-94c3-fcf6c46e6d20"]
}, Open  ]],

Cell["\<\
And a roughly 75% steady state activation rate of BRAF, compared to a very \
low one in the non-mutant model.\
\>", "Text",
 CellChangeTimes->{{3.805525372587502*^9, 
  3.8055254285470543`*^9}},ExpressionUUID->"f79b261f-7bdc-4b52-83e7-\
f6197d7506f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 FractionBox[
  RowBox[{"bRafActive", "/.", 
   RowBox[{"ss", "[", 
    RowBox[{"sys", ",", "parsBRAF"}], "]"}]}], 
  RowBox[{"bRafTot", "/.", "parsBRAF"}]], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"bRafActive", "/.", 
   RowBox[{"ss", "[", 
    RowBox[{"sys", ",", "pars"}], "]"}]}], 
  RowBox[{"bRafTot", "/.", "pars"}]]}], "Input",
 CellChangeTimes->{{3.805525330723435*^9, 3.80552536347414*^9}, {
  3.805525393529332*^9, 3.80552540816026*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"2b5a2182-6b66-4b65-a4c1-5686f548aaae"],

Cell[BoxData["0.751924484653249`"], "Output",
 CellChangeTimes->{3.855394008918529*^9, 3.855394199353986*^9, 
  3.855916244000971*^9, 3.856605017609839*^9, 3.873882300453486*^9},
 CellLabel->
  "Out[400]=",ExpressionUUID->"9e388da2-197a-412d-aea0-320900f16894"],

Cell[BoxData["0.0002144718557891272`"], "Output",
 CellChangeTimes->{3.855394008918529*^9, 3.855394199353986*^9, 
  3.855916244000971*^9, 3.856605017609839*^9, 3.8738823004718924`*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"a5872636-b5d9-44d7-a50c-3d3b0fbc518e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The ground truth values", "Subsubsection",
 CellChangeTimes->{{3.80553295500884*^9, 
  3.8055329735138693`*^9}},ExpressionUUID->"f9e9664b-6d7c-4961-8730-\
aa939ef8f52c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rlocBRAF", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsBRAF", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{"rDSBRAF", " ", "=", " ", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToString", "/@", 
            RowBox[{"vars", "\[LeftDoubleBracket]", 
             RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
           RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], 
         ",", "#"}], "]"}], "&"}], "/@", "rlocBRAF"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/rloc-braf-true.tsv\>\"", ",", 
   "\[IndentingNewLine]", "rDSBRAF"}], "]"}]}], "Input",
 CellChangeTimes->{{3.805532976735959*^9, 3.805532990152102*^9}, {
   3.805533024084016*^9, 3.805533045297851*^9}, {3.8055362897540407`*^9, 
   3.80553629053553*^9}, {3.8553940392751427`*^9, 3.855394042074938*^9}, 
   3.855394089760758*^9},
 CellLabel->
  "In[402]:=",ExpressionUUID->"17202739-2bd6-40c1-85ae-cc8a50886863"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Sos" -> <|
        "Sos" -> -1, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, 
         "P90Rsk" -> -0.9845918436130646, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0,
          "Rap1" -> 0, "bRaf" -> 0|>, 
       "Ras" -> <|
        "Sos" -> 0.999990220027183, "Ras" -> -1, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Raf1" -> <|
        "Sos" -> 0, "Ras" -> 1.0001113629284442`, "Raf1" -> -1, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, 
         "Akt" -> -0.39768789891919826`, "C3G" -> 0, "Rap1" -> 0, "bRaf" -> 
         0|>, "Mek" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> -1, "Erk" -> 0, 
         "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, "Rap1" -> 0, 
         "bRaf" -> 0.08844693448935208|>, 
       "Erk" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0.04940076128593107, 
         "Erk" -> -1, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "P90Rsk" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 
         0.2521887377005051, "P90Rsk" -> -1, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 
         0, "Rap1" -> 0, "bRaf" -> 0|>, 
       "PI3K" -> <|
        "Sos" -> 0, "Ras" -> 0.000014115774142444921`, "Raf1" -> 0, "Mek" -> 
         0, "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> -1, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Akt" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0.39612303273522637`, "Akt" -> -1, "C3G" -> 0, "Rap1" -> 
         0, "bRaf" -> 0|>, 
       "C3G" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> -1, "Rap1" -> 0, "bRaf" -> 0|>, 
       "Rap1" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0.9993602219089815, 
         "Rap1" -> -1, "bRaf" -> 0|>, 
       "bRaf" -> <|
        "Sos" -> 0, "Ras" -> 0.007375362615519584, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0.47703230838447164`, "bRaf" -> -1|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[34], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[34], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Path" -> {}, "DisplayedRowCount" -> 
     11, "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, 
     "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sos"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sos"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Ras"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Ras"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Raf1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Raf1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mek"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mek"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Erk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Erk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "P90Rsk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "P90Rsk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PI3K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PI3K"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Akt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Akt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C3G"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C3G"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rap1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rap1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.984592"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ras"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99999"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raf1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00011"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.397688"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mek"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Erk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0494008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P90Rsk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.252189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PI3K"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000141158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Akt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.396123"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C3G"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Rap1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["bRaf", 
                  Style[
                  "bRaf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bRaf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00737536"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.477032"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{754., {189.134033203125, 194.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{754., {189.134033203125, 194.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.855394207256833*^9, 3.855916250172557*^9, 
  3.856605024643928*^9, 3.858834040180842*^9, 3.858834088720339*^9, 
  3.873882303602676*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"da8d3f23-dfa6-4728-8e1d-c66b8966b091"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/rloc-braf-true.tsv\"\>"], \
"Output",
 CellChangeTimes->{3.855394207256833*^9, 3.855916250172557*^9, 
  3.856605024643928*^9, 3.858834040180842*^9, 3.858834088720339*^9, 
  3.87388230405129*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"3d47730d-a05d-47c3-8842-0a309572ae13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["r"], "Input",
 CellChangeTimes->{3.85883407240149*^9},
 CellLabel->
  "In[405]:=",ExpressionUUID->"b4b5efcf-7956-44f8-bfbe-faada20eff64"],

Cell[BoxData["r"], "Output",
 CellChangeTimes->{3.8738823041025677`*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"1f38d4b1-2155-4a99-bb54-043980871f15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
      RowBox[{"Flatten", "[", "rlocBRAF", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<rloc unperturbed\>\"", ",", " ", "\"\<rloc BRAF mutant\>\""}], " ", 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.858834050817049*^9, 3.858834068186494*^9}, {
  3.858834144052763*^9, 3.858834228078637*^9}},
 CellLabel->
  "In[406]:=",ExpressionUUID->"8b936ac3-e1ad-4fcd-a192-58c8b5cbf96b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPDDllJcZdf7le3Zz94rPE9xeahA5mk
tU/+/Xtvn3w0q/b1//f2EFHquZ/W4Iu0q+4W1g/2S7QPHS1h+EB19+/0iLad
1XJz/+G73z9uL75J9fBwY2/6zha4zR5VlH7h7z6pk0Xa8q29t75AcOkSdHcQ
BlMZJspd3v3e3mGPbQ2f98ohl34+PbdYZjz3nf2tb6bWd5Qv0N39sp43bzpJ
qdvzvNlvGTnrrR11TB064f95FseN5Mib9hMnbsoWibo55NIPdjB03B+8/YDn
oV/v7WE0RJR49//NKjrAZn/U3tNh7eUFpnUklx+UAqnwg06GZa/tM5Jftmxq
v4fhfgAmL41q
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"rloc BRAF mutant\"", TraditionalForm], None}, {
     FormBox["\"rloc unperturbed\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.0013925331456877`}, {-1., 1.0001113629284442`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.858834068719397*^9, 3.858834092308823*^9}, 
   3.858834147429008*^9, {3.858834183291819*^9, 3.858834228528819*^9}, 
   3.87388230415154*^9},
 CellLabel->
  "Out[406]=",ExpressionUUID->"1f0a6091-cc57-4763-abda-91607fcac431"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.858834032993826*^9, 3.858834047421773*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"96e84f8e-244f-4c62-927a-38a529050116"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sBRAFDS", " ", "=", " ", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToString", "/@", 
             RowBox[{"vars", "\[LeftDoubleBracket]", 
              RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
            RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], 
          ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"Length", "[", 
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "]"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"si", "[", 
          RowBox[{"sys", ",", " ", "parsBRAF", ",", " ", "#"}], "]"}], "&"}], 
        "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/stot-braf-true.tsv\>\"", ",", 
   "\[IndentingNewLine]", "sBRAFDS"}], "]"}]}], "Input",
 CellChangeTimes->{3.855394232944809*^9},
 CellLabel->
  "In[408]:=",ExpressionUUID->"76d40d93-bd86-4256-a85e-29188675f6b0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Sos" -> <|
        "Sos" -> 0.9807017469914533, "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Ras" -> <|
        "Sos" -> 0., "Ras" -> 0.2303914652546494, "Raf1" -> 0., "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Raf1" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0.34215222904798615`, "Mek" -> 0.,
          "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0.,
          "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Mek" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 1.0446066580616946`, 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Erk" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 
         1.0055768113434085`, "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., 
         "C3G" -> 0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "P90Rsk" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0.9906351417583571, "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "PI3K" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0.9835271218290114, "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Akt" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0.9741454593663587, "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "C3G" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0.9814683181427524, "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Rap1" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., "Rap1" -> 
         0.23198446799693198`, "bRaf" -> 0.|>, 
       "bRaf" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., "Rap1" -> 0.,
          "bRaf" -> 1.3224382862924127`|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Path" -> {}, "DisplayedRowCount" -> 
     11, "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, 
     "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sos"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sos"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Ras"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Ras"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Raf1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Raf1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mek"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mek"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Erk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Erk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "P90Rsk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "P90Rsk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PI3K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PI3K"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Akt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Akt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C3G"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C3G"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rap1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rap1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.980702"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ras"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.230391"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raf1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.342152"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mek"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.04461"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Erk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P90Rsk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.990635"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PI3K"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.983527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Akt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.974145"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C3G"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.981468"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Rap1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.231984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["bRaf", 
                  Style[
                  "bRaf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bRaf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{758., {189.134033203125, 194.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{758., {189.134033203125, 194.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.855394233879134*^9, 3.855916253016868*^9, 
  3.856605027430077*^9, 3.873882304559085*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"2ac7b0d9-e3f7-4c12-9321-a4f5fb9d1b8e"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/stot-braf-true.tsv\"\>"], \
"Output",
 CellChangeTimes->{3.855394233879134*^9, 3.855916253016868*^9, 
  3.856605027430077*^9, 3.873882304972061*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"a738232f-8b88-4049-b140-0f0f06707e4a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate the BRAF mutant population", "Subsubsection",
 CellChangeTimes->{{3.806394654022737*^9, 
  3.806394672601839*^9}},ExpressionUUID->"068b3f0a-5e0b-43c2-8fc9-\
9678ffc64f2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"popBRAF", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAF", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "10000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.805536818912614*^9, 3.8055368262913218`*^9}, 
   3.85660503196642*^9},
 CellLabel->
  "In[410]:=",ExpressionUUID->"8bfeb8cf-792f-4339-84df-ecc5ca10c7d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"populationBRAF", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", "popBRAF"}], 
    "//", "Quiet"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.805536872093893*^9, 3.805536872373172*^9}, {
  3.805536913449567*^9, 3.805536913742216*^9}, {3.8063946331224833`*^9, 
  3.806394637674746*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"b318f294-f6f1-45b8-83be-7dc3f2141cb2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfBRAF", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAF"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut.tsv\>\"", ",", "dfBRAF"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8055369002596188`*^9, 3.8055369235640697`*^9}, {
  3.806396287898901*^9, 3.8063962882783747`*^9}, {3.855394282346374*^9, 
  3.8553942874970284`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"af0dfddd-b9d8-4145-83f1-7863b13d0456"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-BRAFmut.tsv\"\>"], "Output",
 CellChangeTimes->{3.805536933815209*^9, 3.806394442438147*^9, 
  3.806396314905242*^9, 3.85539431383175*^9, 3.856605234206653*^9, 
  3.873882551906165*^9},
 CellLabel->
  "Out[413]=",ExpressionUUID->"90c01553-c76d-4fea-9b60-639fbbc8e41b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulate the BRAF mutant population with Inhibitors", "Subsubsection",
 CellChangeTimes->{{3.806394654022737*^9, 3.806394699812145*^9}, 
   3.806395038427825*^9, {3.855394344898385*^9, 
   3.855394347858378*^9}},ExpressionUUID->"3b91e678-9c49-4272-837f-\
8bf73cee31b4"],

Cell[TextData[StyleBox["p90 Inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8553943518585052`*^9, 
  3.8553943832032557`*^9}},ExpressionUUID->"61579732-b217-43dd-93ac-\
2d8dde2edbb5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFp90i", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction11Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"vars", "\[Rule]", 
    RowBox[{"Log2", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vars", "/.", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", " ", "parsBRAFp90i"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"vars", "/.", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFp90i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFp90i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationBRAFp90i", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popBRAFp90i"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFp90i"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-p90i.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.806394964091214*^9, 3.806394978518753*^9}, {
   3.8559161761132927`*^9, 3.8559161766982327`*^9}, {3.8559162696331244`*^9, 
   3.855916269769703*^9}, {3.8559165058463993`*^9, 3.8559165512738237`*^9}, 
   3.8559166027650623`*^9, 3.8566047569461937`*^9, {3.870354245173346*^9, 
   3.870354245863205*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"53f09db6-b74b-4bc9-ad35-08917c01dced"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.11531141977046672`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.1153102457434271`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.11532334716749715`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.00007813789133015105`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "3.859968904354061`*^-6"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.11719114883217424`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "1.6945118050050307`*^-6"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "6.712353194921189`*^-7"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.0008834575499039023`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855916276500512*^9, 3.855916520503502*^9, 
  3.855916552560643*^9, 3.856605234315127*^9, 3.8738825521544724`*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"5f18bc2c-bdea-4f32-a454-edca1879b5ab"]
}, Open  ]],

Cell[TextData[StyleBox["RAS Inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8559161834034777`*^9, 
  3.855916192706253*^9}},ExpressionUUID->"839a8902-31d0-4b73-9e80-\
70da804eeea2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFRasi", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction3Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"vars", "\[Rule]", 
    RowBox[{"Log2", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vars", "/.", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", " ", "parsBRAFRasi"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"vars", "/.", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFRasi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFRasi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationBRAFRasi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popBRAFRasi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFRasi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Rasi.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8063950354509706`*^9, 3.806395074131691*^9}, {
   3.855394405190608*^9, 3.855394416605527*^9}, {3.85591645196957*^9, 
   3.855916469082217*^9}, {3.855916573547298*^9, 3.855916598962418*^9}, 
   3.856604759402844*^9, {3.8566053914386463`*^9, 3.856605392548016*^9}, 
   3.870354249813944*^9},
 CellLabel->
  "In[420]:=",ExpressionUUID->"ab8614d1-47f8-46ef-af87-531ebbbfb003"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", 
    RowBox[{"-", "1.6017132519074588`*^-16"}]}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"SosActive", "\[Rule]", "2.9086765755016413`*^-6"}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.4150310633721596`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.41507042660307975`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.0002371051747342406`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.000011714165697361658`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "2.9541924174291695`*^-6"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "5.091265520202506`*^-6"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "2.016771136870296`*^-6"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.0026774416293047507`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8553944214832973`*^9, 3.855916282227358*^9, 3.8559164856758223`*^9, {
   3.855916578859078*^9, 3.8559165876512136`*^9}, 3.8566052717643747`*^9, 
   3.8566054326957903`*^9, 3.87388260478933*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"a76746de-70b4-4344-a343-bc65922bc5fa"]
}, Open  ]],

Cell[TextData[StyleBox["Sos inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.85479145257563*^9, 
  3.854791463342978*^9}},ExpressionUUID->"2419a9d5-77b9-435a-8c7e-\
ff4229847105"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFSosi", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction1Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFSosi"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFSosi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFSosi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationBRAFSosi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popBRAFSosi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFSosi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Sosi.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.854791442674402*^9, 3.854791442998208*^9}, {
   3.8547915547752934`*^9, 3.854791567484654*^9}, {3.855916335489736*^9, 
   3.8559163582936697`*^9}, {3.8559163998958473`*^9, 3.855916400300241*^9}, {
   3.855916741855133*^9, 3.855916741992611*^9}, 3.856604763984522*^9, {
   3.856605340942487*^9, 3.856605343246015*^9}, 3.870354252535709*^9},
 CellLabel->
  "In[426]:=",ExpressionUUID->"5436eac8-0637-4449-8337-39adc6570d54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", 
    RowBox[{"-", "0.4149309383056815`"}]}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.4149274118358455`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.41496676658202175`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.00023705368462908198`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.000011711621619809362`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "2.9535508250459242`*^-6"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "5.090168081192742`*^-6"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "2.016336414468098`*^-6"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.002676860740313037`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.854791568992671*^9, 3.855390767237349*^9, {3.855916391145156*^9, 
   3.8559164008666477`*^9}, 3.8559167473559723`*^9, 3.856605315110261*^9, 
   3.856605477694738*^9, 3.873882652742165*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"8d5901df-5f46-4c08-a680-41f663a1cd70"]
}, Open  ]],

Cell[TextData[StyleBox["Raf1 inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.855916768067503*^9, 
  3.855916773478572*^9}},ExpressionUUID->"40c319ba-596e-4c42-b380-\
4a6d9df50d42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFRaf1i", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction5Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFRaf1i"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFRaf1i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFRaf1i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationBRAFRaf1i", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popBRAFRaf1i"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFRaf1i"}], ")"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Raf1i.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.855916798340674*^9, 3.855916887309113*^9}, {
   3.855916919158341*^9, 3.8559169231091843`*^9}, 3.8566047670405703`*^9, {
   3.8566054701317787`*^9, 3.856605473478475*^9}, 3.870354255359243*^9},
 CellLabel->
  "In[432]:=",ExpressionUUID->"26a095c3-6e5f-4ae2-83c9-41940ca2002d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", 
    RowBox[{"-", "1.6017132519074588`*^-16"}]}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"SosActive", "\[Rule]", "8.506471635090934`*^-10"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "8.506391549428386`*^-10"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.41507766419762154`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "6.934784493222917`*^-8"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "3.4258397693570055`*^-9"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "8.639586825125179`*^-10"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "1.1852678064115147`*^-14"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "4.8051397557223685`*^-15"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "6.273590465057495`*^-12"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855916928497978*^9, 3.856605357043082*^9, 
  3.856605518867835*^9, 3.873882701942286*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"037b26be-e7a3-43e3-9faa-338693b4b4a8"]
}, Open  ]],

Cell[TextData[StyleBox["Mek inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.855916679731929*^9},ExpressionUUID->"67ff275c-0eba-4c81-9773-\
81f7204c2b8b"],

Cell["\<\
Mek is activated by both Raf1 (reaction 7) and bRaf (reaction 27),so we need \
to reduce both kcats.\
\>", "Text",
 CellChangeTimes->{
  3.855389812565415*^9},ExpressionUUID->"d448a2d9-2776-4cfd-b175-\
eaf588b2ae1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFMeki", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", " ", 
     
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFMeki"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFMeki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFMeki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationBRAFMeki", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popBRAFMeki"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFMeki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Meki.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.855389215736013*^9, 3.855389295238365*^9}, {
   3.8553893569240913`*^9, 3.855389370872231*^9}, {3.855389409783628*^9, 
   3.855389495656188*^9}, {3.855389532183825*^9, 3.855389566454815*^9}, {
   3.8553896094711733`*^9, 3.855389624885113*^9}, {3.855389685916925*^9, 
   3.855389699688253*^9}, {3.855389796546981*^9, 3.855389814708454*^9}, {
   3.8559166966187773`*^9, 3.855916698351169*^9}, {3.855916955861102*^9, 
   3.8559169885241823`*^9}, 3.856604770349285*^9, 3.8703542591625853`*^9},
 CellLabel->
  "In[438]:=",ExpressionUUID->"fd78ed9a-1cdc-4b6f-9734-f3e0d95a8e83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.0005314471095234236`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.0005314419111066453`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.0005314999228094508`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.04265304068407451`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.002139065012625354`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.0005397649004600911`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "7.503154913323588`*^-9"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "2.9721746652121037`*^-9"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "3.9202615048353605`*^-6"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.855389427782592*^9, {3.8553894644679623`*^9, 3.85538948340195*^9}, {
   3.855389533144988*^9, 3.8553895675819283`*^9}, {3.855389614517271*^9, 
   3.855389625598071*^9}, 3.855389700952539*^9, 3.855389815187583*^9, 
   3.855390787181408*^9, 3.855916991148444*^9, 3.8566053956176243`*^9, 
   3.873882746006029*^9},
 CellLabel->
  "Out[439]=",ExpressionUUID->"980bd3d1-0ac1-4d6e-a931-4004c6c7c0b5"]
}, Open  ]],

Cell[TextData[StyleBox["Erk inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856605105570888*^9, 
  3.856605113147437*^9}},ExpressionUUID->"d964dcf8-ea23-4903-9dc5-\
ccbd06c90147"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFErki", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction9Kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFErki"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFErki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFErki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationBRAFErki", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popBRAFErki"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFErki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Erki.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.85660514283215*^9, 3.856605168963479*^9}, {
   3.85660523144774*^9, 3.856605253509123*^9}, 3.856607145311761*^9, {
   3.8566074800884333`*^9, 3.856607485117146*^9}, 
   3.870354261461327*^9},ExpressionUUID->"8fbede87-7375-4c28-97ac-\
469a2651c3c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.07763870181317876`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.07763792171453901`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.07764662716625918`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.00005196294505107105`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.2890725791241204`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.07888744229770575`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "1.1259475304223894`*^-6"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "4.460139168000481`*^-7"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.0005874520997933843`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856607485799061*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"c963b64b-4140-490b-a82b-12ba0b8a16de"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 274, 53, 23289667647182399119, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8566072443028097`*^9, 3.856607513183156*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"99c0aebb-016d-4451-ba0e-c8974d4da164"]
}, Closed]],

Cell[TextData[StyleBox["p90 inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856605516706634*^9, 
  3.856605523255095*^9}},ExpressionUUID->"cc5ec8f5-07be-4a12-b217-\
7ad2d11b3e76"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFp90Rski", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction11Kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFp90Rski"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFp90Rski", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFp90Rski", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationBRAFp90Rski", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popBRAFp90Rski"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFp90Rski"}], ")"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-p90Rski.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856605532625456*^9, 3.856605611664048*^9}, 
   3.856607141075502*^9, 
   3.870354265617528*^9},ExpressionUUID->"ff40314d-bbe5-48ed-aba9-\
78f2334350bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "1.0140081452530394`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "1.0139937593829238`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "1.014154279718298`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.0009315226518937478`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.00004600288165175277`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "1.0372110472637175`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.000020760179737969687`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "8.22355178995624`*^-6"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.010568137900945396`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.85660559895737*^9, 3.856607207913753*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"e218e844-713a-4ea0-941a-39635ec094b6"]
}, Closed]],

Cell[TextData[StyleBox["PI3K inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8566059579901323`*^9, 
  3.856605963210279*^9}},ExpressionUUID->"a04e9741-23db-49df-bc7e-\
65dc941effea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFPI3Ki", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction13Kcat", ",", " ", "reaction14Kcat"}], "}"}], ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFPI3Ki"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFPI3Ki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFPI3Ki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationBRAFPI3Ki", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popBRAFPI3Ki"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFPI3Ki"}], ")"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-PI3Ki.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856605970516412*^9, 3.85660601649296*^9}, 
   3.856607136969934*^9, 
   3.8703542686904497`*^9},ExpressionUUID->"07684e36-b298-4b27-a2be-\
f8c27201f412"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", 
    RowBox[{"-", "1.6017132519074588`*^-16"}]}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"SosActive", "\[Rule]", "2.2355985135919183`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "2.235546157608692`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "2.3859434837287425`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.0031454070451784827`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.0001552136747758021`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", "0.00003914150550780522`"}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.8628766244185365`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.41077195142222833`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.03600344789327452`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856606018426796*^9, 3.856607173254949*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"0a08a1e4-0d5d-4a21-bc27-ca055d597201"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 235, 22, 23289667647182399119, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.856607201920027*^9},
 CellLabel->
  "During evaluation of \
In[232]:=",ExpressionUUID->"b9b0d429-eaed-4883-9532-e7d203129b34"]
}, Closed]],

Cell[TextData[StyleBox["Akt inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856606708865156*^9, 
  3.856606715258945*^9}},ExpressionUUID->"23bb5a54-0e30-4923-a045-\
5b3b3a047ece"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFAkti", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction17Kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFAkti"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFAkti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFAkti", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationBRAFAkti", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popBRAFAkti"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFAkti"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Akti.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856606724132073*^9, 3.856606728577445*^9}, {
   3.856606867041391*^9, 3.856606895652705*^9}, 3.85660713335814*^9, 
   3.870354271621909*^9},ExpressionUUID->"7e8a68a6-3ef5-4c05-85e9-\
62751a79393e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", 
    RowBox[{"-", "1.1184824507509003`*^-9"}]}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "1.1184712387581282`*^-9"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.4100618670216323`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "9.118268566444701`*^-8"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "4.504498171307194`*^-9"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", "1.1359850112589894`*^-9"}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "1.585696119388393`*^-14"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "1.4039062322802238`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "8.249463932647762`*^-12"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.856606899819615*^9, 3.856607133972495*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"2826b5e6-92c5-4d28-a5fc-6fedbf7f0662"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 229, 20, 23289667647182399119, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.856607145751539*^9},
 CellLabel->
  "During evaluation of \
In[226]:=",ExpressionUUID->"beeeb08e-bd88-4222-91e0-db07a1e563ae"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 229, 21, 23289667647182399119, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.856607160466689*^9},
 CellLabel->
  "During evaluation of \
In[226]:=",ExpressionUUID->"1b09001a-bb50-4f95-a904-bf55eafadb66"]
}, Closed]],

Cell[TextData[StyleBox["C3G inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856606928510048*^9, 3.85660693708611*^9}},
 FontWeight->"Plain",ExpressionUUID->"09d79c83-c9cb-437c-afbc-354978d8adca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFC3Gi", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction21kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFC3Gi"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFC3Gi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFC3Gi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationBRAFC3Gi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popBRAFC3Gi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFC3Gi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-C3Gi.tsv\>\"", ",", "df"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.856605650914042*^9, 3.856605651110766*^9}, {
   3.856605718818692*^9, 3.856605719091151*^9}, {3.856605947442759*^9, 
   3.8566059527768784`*^9}, {3.8566067191912403`*^9, 
   3.8566067206275663`*^9}, {3.8566069418007383`*^9, 3.8566070034015417`*^9}, 
   3.8566070742694387`*^9, {3.8566071207723923`*^9, 3.856607156585929*^9}, 
   3.856607387643003*^9, {3.856607611405005*^9, 3.856607611826476*^9}, 
   3.8566077092751913`*^9, {3.8566077436842957`*^9, 3.8566077712051573`*^9}, {
   3.8566078483102818`*^9, 3.856607877950519*^9}, {3.856608067752399*^9, 
   3.856608069585573*^9}, 
   3.8703542742359962`*^9},ExpressionUUID->"05f11cac-a243-4351-a015-\
591080c5db10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.4197123047751482`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.41970754048099135`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.41976070554502765`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "4.341886020392457`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "1.2252782240077436`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.42735556159775373`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "6.876154545104329`*^-6"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "2.723800654984025`*^-6"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "2.2969041177395972`"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "2.2961721233780406`"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "6.735219850138794`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856607612575294*^9, {3.856607699217852*^9, 3.856607710190269*^9}, 
   3.856607775669684*^9, 3.856607850351481*^9, 3.8566081430526876`*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"b6db989d-8d20-4988-8edf-0ff6002f6039"]
}, Closed]],

Cell[TextData[StyleBox["Rap1 inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856607354745454*^9, 
  3.856607361925695*^9}},ExpressionUUID->"e28deba5-19b2-4dbb-b816-\
c796db4e13bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFRap1i", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", "reaction23kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFRap1i"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFRap1i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFRap1i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationBRAFRap1i", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popBRAFRap1i"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFRap1i"}], ")"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-Rap1i.tsv\>\"", ",", "df"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.856607367440412*^9, 3.856607374192069*^9}, {
   3.856607404892475*^9, 3.856607433078891*^9}, {3.856607870405488*^9, 
   3.856607884059362*^9}, {3.856608060510192*^9, 3.8566080626489563`*^9}, 
   3.87035427706923*^9},ExpressionUUID->"7c4e0f5d-b829-4743-a7f9-\
7c67551e51be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.4317835904494409`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.43177866756597827`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.4318336022676693`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "4.380522025441273`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "1.2522137114206577`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.4396819629966054`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "7.105027409467914`*^-6"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "2.8144622379047833`*^-6"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "2.3211928986099095`"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "6.773586578641197`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.856607439306748*^9, 3.856607904417766*^9, 
  3.856608096231311*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"ecd90fcb-2585-4dde-bc3c-022791f4af8e"]
}, Closed]],

Cell[TextData[StyleBox["Braf inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856607167093768*^9, 
  3.856607172260557*^9}},ExpressionUUID->"060f08f8-ece8-4c11-853c-\
d90588cd6f22"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsBRAFbRafi", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsBRAF", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction25kcat", ",", " ", "reaction30kcat"}], "}"}], ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAFbRafi"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsBRAF"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popBRAFbRafi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsBRAFbRafi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationBRAFbRafi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popBRAFbRafi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationBRAFbRafi"}], ")"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
BRAFmut-bRafi.tsv\>\"", ",", "df"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8566071632310247`*^9, 3.856607238574957*^9}, 
   3.8566073238796387`*^9, {3.856608032386874*^9, 3.856608051458823*^9}, 
   3.8703542814837227`*^9},ExpressionUUID->"a7bb5999-7015-4f4c-ba80-\
bcaf2382330b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", 
    RowBox[{"-", "1.6017132519074588`*^-16"}]}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.49681499571993426`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.49680919525628137`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.49687392245885953`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "4.575524836957709`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "1.3926424043130545`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.5061259054662274`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "8.371516957687298`*^-6"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "3.3161464722180368`*^-6"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "4.805139755722377`*^-16"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "3.203426503814918`*^-16"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "6.967289783879656`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856607292291016*^9, 3.856607325312992*^9, {3.856608033266902*^9, 
   3.8566080530414*^9}},
 CellLabel->
  "Out[336]=",ExpressionUUID->"6e271123-3f50-4485-b09a-946c288fc59b"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate RAS mutation cells", "Subsection",
 CellChangeTimes->{{3.805525072490922*^9, 3.8055250835844927`*^9}, {
  3.8728483651011057`*^9, 
  3.872848365524585*^9}},ExpressionUUID->"edcfddd6-935f-44b6-8857-\
4525fb278a1d"],

Cell["\<\
We model a RAS mutation like before for BRAF by a 100-fold reduction in the \
RAS deactivation rate.\
\>", "Text",
 CellChangeTimes->{{3.805525136999042*^9, 3.8055251736123133`*^9}, {
  3.872848374341354*^9, 
  3.872848391638616*^9}},ExpressionUUID->"d785f79e-8cdb-4612-acce-\
031c8e9d9aeb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parsRAS", "=", 
   RowBox[{"pars", "/.", 
    RowBox[{"Rule", "[", 
     RowBox[{
      RowBox[{"reaction4Kcat", "\[Rule]", "x_"}], ",", 
      RowBox[{"reaction4Kcat", "\[Rule]", 
       RowBox[{"0.01", "*", "x"}]}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.805525096238209*^9, 3.80552513487615*^9}, {
   3.8055252705369797`*^9, 3.8055252748284273`*^9}, 3.805525366782151*^9, {
   3.872848398366694*^9, 3.872848400165597*^9}, {3.872848579141293*^9, 
   3.872848583891199*^9}, {3.8738797066835527`*^9, 3.8738797138967457`*^9}},
 CellLabel->
  "In[507]:=",ExpressionUUID->"bbc276a8-258d-4b44-9f03-f5b61aaa581c"],

Cell["", "Text",
 CellChangeTimes->{{3.8055253071718616`*^9, 3.805525327086173*^9}, 
   3.8728485953786497`*^9},ExpressionUUID->"4b1683db-38a1-46d0-a4be-\
59e9bba1d3f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tsRAS", "=", 
   RowBox[{"tsol", "[", 
    RowBox[{"sys", ",", "parsRAS"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "t", "]"}], "&"}], "/@", "vars"}], "/.", "tsRAS"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "15"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Text", "[", "#", "]"}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}], "&"}], "/@", 
      "vars"}], ")"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.805525092203547*^9, 3.805525093611598*^9}, {
   3.8055251796627817`*^9, 3.8055253004906588`*^9}, 3.872848605495554*^9, {
   3.8728486545882187`*^9, 3.872848661063064*^9}, {3.8728491249709597`*^9, 
   3.87284915272178*^9}, {3.872849610062196*^9, 3.872849610354747*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"d1f18b7a-211a-4c6b-9732-2bf1a706877e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkXk4lYkCxsW4qBgJh1IN0YKvg7mJoflejuUykcgWQpipeZAoiknIYAo3
NJLTlGRSZPmOXSayL43GelxlaSxJDueczxLyuOaP93n/+z3P731Vz5y39xMV
ERHx3cg/vTjc1qh+8/a3bB9Dd600efTeV7piMhBMvuUGpt4+NAUovD6jNBBD
2s5KW5wr4EPxzTYpWbNEkql4UUr+nBChdnlcsYFU0s2Wq7osQ8O7pCNvPekO
OeP4OOjodzSOKfKurrLukZ4Jzd87e9K4Zxz/ZPWnLDKNejWq5Utj2ywjdZmb
TQb9VOig50Mj7sGTiCW930mLqgjHL7xofLYz9FtIyiWnfg5zE3GnESzabktP
PSVX4t7l5TvTmCo5ZSBgPSOLJf4QGDjQGKmxPT/P5ZB8H8muIyY0MhUYviHi
pWSr+f4rFcY0TgaOuAj1ysi5WG8lAwMa7XuCTPlJFWSFZUaAMZNGeUyKwgyr
hmQ8lCo7sYuGhfr0kIBbT/4d211euCxEjp2tCxXYQLIVjaXJBSE2XeV0B4k3
kuMxw4F/8YWo6QtvmdNrIt+f67ZffC+EbvwWipfUQm5Nvptu2y+EyrR27AfW
K/LPw7P9OiVCLHOP/MrndpMBV5bjqwOEqNST9Mo92ENG9Koyvvxn36QBzdMR
PaSS0JDr6yuE0PRKXcfuXtKKIfphu5sQ0wXVHx/79ZH/ErtsHfUfId5eP2rq
QXPJXSkWL1P2ClHHZM21yQyRfurH/H4dFKCBlZvTlT1GjhVxP8scE0BlpGry
jDaPNIyGU5MNH/L+nnkSLJoM+dq9JbppFqm6Fs9tHT+Rbh5O92smZvC/DJ06
gewayXzpEnUHH3Ez59prUeVN4D1kVF5I+wDG7bFf0n4Tg/zk+L0tklOIP2n1
bfeiOPLyGopWn00ixPChZ1uMJNhrq/0L1hMwm1sJDxzbDHZEYQ1TfhzRxie8
dxhIY0U51212/m98U3i3NLL2SzgsNU6wX7+D/ydBVKv0NjSab7qh1jmKZS3Z
YcJRDkHXzcJP/ncExvnPstLTt+PIe3WF3/KHIJCz9nKql4e9T0viZrG3GE/0
cgqWUESmQ49y64lBWM2FWU3oM7BTNzXsUt8AZnwkQ0qvKUG/NqlXxJ678T9D
NL5eGbmXz3hs4fVB7s99ycVzO8DbenekoqQXKglFdvr6Kkh0SOcwL/YgQ8tQ
dvsPu9AefbqiyK0b7TtMDtMpu9EadiA90KUL36jU32L270FPqGtk4/G/ICOW
fdE75ivsbrylOt7Zid3Re4xd96licI3X5rLwClIa7uX2LaroZHc0iJt04NBR
5aIwDzXwvnDI3lzfhuBhuQZrkb2gGNqi9katmKMTHa0y9uJEskSs43gzLJnN
mVaEOrJ0q45b5zbhBW20utSpjoobOsejfBoRqK032OWngfMFOSwrywYcnfXt
dZXah9KnQ6zrGvUwV1eykc7eh5zr80pq+1/iQNSNy/VH9mOYZx4nZVwHTT/D
Wo3B/Xg0espdJ+MF/F6cjS29cACXHhQ18YU1qM3q9RUoHMTkj+zD1ebPMf9k
fYlZcRAGPywlWFZXwUcjXyrTRhMiP38lq+1ZCYFmmj6Hr4nSg9xptbVyVOas
vltI0ALDWeKma3MZTpnthdFubcw8f6vMyC3FzoD4qkN12rhw6Naj9ugSKGz2
p2ycCYgtFuo4RXGQw7oaznclUMYmXq5EcKB3NZmV5k7g+TPPsKwwDmz5xX0D
3gScJ546zAVyENe/sOzjT2Ap6lxDpgcHn7KvmYZHE9g0pmV8wIiDQaO0nsf5
BIJi/SN2LlE4eynnnlUhAfZnPjEupLBYWOY3U0wg7/LvnwtmKcipDSzplhN4
MH2BZzZJ4TvJXSp/1BFYqPSSj+qjUNP72Lenj4BTp6a+VikFa5lKInSAQOTI
owTxYgoDlm2LSm8IdKQ8EY7mU5iv/phwepSAKcXcyn5EgXioU/BhesOvVsdG
JW2DN2gSmsgjIPtC9OR68gZP3oFk8gmEbFUMGrtB4fv4S10XFwiUB72ZLIzZ
4NXFZTI+EbATriA9kkLMyh2f6hUCnmz9oshwCrL/fqrtsUagTtVc92wohfsB
1Qvr6wRsjYaa7YMp/B9bDQig
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0Wk41XkDxnHrOIeIYy/Zd/5Zkgj9btuRGi5M9pHlEDWWeYgmS5YJTaGi
aWIkeRRjXxqpkYSIpk10ToSaZnpEOjgOSi6PeXFf33efN7dGWJxXhJCAgEDk
xv7t0sRAr/aZC3uUIrxa63N5GC5TOm7PiScPlqsOu3SMA/JPwpQ4WWT0ZULw
Sm0fFMZk6NJOecQocYeuRGAzkjxq2MKcQnJzauhO4ssShLY+rFnP/4WEvt+R
XOGZja8VZtNWHUuJ39MzYeFC8Si1za1eTS0nC4EFBZ17QyHzUbHwE7uC9Pf5
5xl7HEDOleqUZfNrRKzumGLOfTd88bCO4OdXkaRrfeMpV10RLzTozpv6jbAM
ZE9LS+zFVGuA1bxjHZG6Zq9vEeOCgxEzGtyyBjI81io2QbngiERn9lJqEyln
+b5KZrhAOzwnObGmmayptcn1irhgssM9bpHdQqLa7u20/8JEibxieILoDUKK
9ly+xWfiQOyk34L576RSq6OZx2ViUO17h7n8m2SGHtmv/A8TbVnn5T84dhA9
enPpuydMMLWnx+fZ3aS4TsHw6TUmKj3c/Zpje8j9CC9eYTkTgmktQ9+L9hIp
100rPr8y0TGS3M81v0+Kfexa/zrHhFmuRPNsfj+RVdecoqUyoTJtfPK945+k
3S1A/JwXE5/Yu36eYw8Rz0g501wBJtrNaSFVBs8Jo+FhsPCqM5LyOYYHU56T
6L+LlzP4zlhwON71UHWYxGVnhGRMO2O6/vbM9YgRMqYtxj877IxXP9o5BPHY
pPY7L+uFamd0mThyB6TGSZuKkmSXlzN6HKsqn1W8JS2md9tjapygMnnrXZjx
LDHa7/fzthOOkIsOrhFz5JHQV2KFZ6McUGjG/MPde4U4pMiw7d3s8fKSade8
9BpxKzMILDwAnKlMfyKkLAiBI2ymV8MeKF54+1PRZWGYu087B47ZIveA656h
JVE4xSboJNvbIMH6avBAFg0hRT1nQ65Yw4n7OTn2rTj+rBusDzC1QqatZ+gW
K0l8xdnssHXcErsbim+cuLsZIR83X2/O2onolfmMB5IyWA+OMijzssAnI+kJ
ypuB8aouZqXKDtjW1pVfvCiLYaNGIaF1M8wz9oX4dMthyxrryNciZvg7L8Qn
XkwBb/snixNFTOHKPeb6j6UiVs8ft+p22Y4PLFrCjXQl9DYJ3jE+Ybzxv6JQ
brcyAk6bZfzKMQTjkW5BE3cLdOr++Hz+kAFUTjV6WFqqYHBq3tpiVg+XjKyl
ZSO3YcjL0px7VReDW+x38s6rIi2o9ui9OB3sVuk+Z/JCDY9T7Rmmu7QhJVxx
NDRLHWvrAotPtbWgmqlm66+rgUiZ0TBTSU3Qdb5t8+rXwOtw3t7TEhrYbqfc
eCxIEy6lF/ksA3XETzB69gloIS9ul45vtiq4vDxv10taCDzh58acU4GLSV+J
K6WNitikB5zjW9HJs1ldfqwNkcXJlYRVZcQam48+i9CB909hnQ9rlWD3MXzY
n66LV4YXRIu8FeGsreQmWaGL6EvT2/QMFKCfcfqH7l16EEi38cyUlYdhhPVd
nVE91OjnGmmuyCKiM+rkjf/oI9y/RJK1zsDd8uHweXkDZEodnuUKMrBYvb5s
ctMAjarfCcYoyYClU0svcTOEiG/ilcT90pg3LLJsmTNEzZ3CvkeLUmivXH3D
P2WElsdzor3Zkghw0oKNqjGEh3p8fzTfhK0xube2dxnjm46gZ+occciLRze7
+VKoS9LXkq2mo9IxLXnOn8IPVPOT2Qo6zNMKHIu+paDTq8AeuEyH+1zTCCeU
QkjZJn52ER05L/ifWNEU7FmNLKl0OlYq0h2SMyl0ylt0BPvQMWpT9Px6LYW4
+/97LfgVHVGJlaWuDRR8OWXWYoJ0LDX8HvGhicLCOd4byS80MDQ5y2ZtFB69
YKirLdCwn7ZN5U4XBe5s/F7PCRo6hq+HPx+hkJhCW+O10bBPqp1K4lCQGDmk
K9VCA8dlYElpjELBm4/FBvU0LN6eOXXwNYU5K82D4f+lgbpqWv9+moLWVLnn
+7Mb3qh9Ut4sBb3X7G7JMxue3DfEZI4CXpxM2ZFDw6HcxGdH+RTs/np3Lyt1
w+vKKVFcoTAjznWvO0ZD1udfWLc/UyC+sprseBqkLX4zDlqjUOqxtls4loay
mNv89XUKhzN8ik0P0/B/QT3ZLQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/A/SexXk
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k8FW0bB3A7Z7GmyE6WLCeSLE80v9BCUhQlhZL0tKCSypIlolCUUqKQ
pRQpS5ZItKgkRYhKjy27wxlbyDvvX/P5zvnjnus+1/W7Z5T3e9t78HBxcRlw
c3H9/zr5890r1eiEtRdibKK3hW4wbbojfXZd6wlCsvBRqur5BwQWf9ov3RpG
9NB3xNfo9RBL2sVpYpYxRI43l072HQH4bctp4W29Smyq9nTmXFbAvoIPOQux
iYTRxULjsyp6sFkyHDRrkUzc5S9/NWdmhmTTyPuzganEpmbBS/VdGyE+InV1
piWdeLnlFFelvD0u3L0fMKWfSXA7jCjGzTphbpuJx0RsNnEmxySnqWUfTvC8
t+X0PSBkBXjXhud6oq9gt/GYxSOCFf/dinHZCy4eg8qjd/KIqtgr/q8tTuIw
ozJiMjCfwDunLVcbT0P1wAX/UzlPiL0265395gLR8dzWm2x5SvgUGRey94Ui
abHUgZP8hYSCtPz69Ynh2OHVsWtcv4j4+W1FrJpSFETfZm857lZMnLzVMPRn
PhrvFX3M2bHPCPYGS9MP0nGIOGNs5F1eQpQciFl3ee9V4DOXzkhfKdFpzmmf
rktAcVj84iGL50TBf4szQ5YnwafdiX7keAXxwU9wS494CrQNVBb671QSFemu
RWvFUtFwwonkBFYRZh5Walfs7mGD6sCPsZZqIjORnSp5MgcZ22x3PfGqIeRu
yHrn2T8Cd9DTLz78r4i4oD1yu43z8Pyr/9tR/dfE7aWTFzYLPcHKSMaT4di3
RDxPxtvWoULIDeiE91vUEfPGK983Fz7HTIvRdXbLF0Kv0MWLa+41SvSF3LI1
G4nrJR/Vws+9gV9sq5ZLQCNRGnLuRT3XW4ybn636oNBEVMzHGpXx1WIgt2ww
y+MrYeLyqYxDe4/v583M93JaCNrG3zPq9HpU6VqMvhP5QeRt9BDWHPuCGovs
jM/pXQSd+fjStjNtkOso7d2vM0zUi57/QD7oAhfn+M13dsPEOv5PsxEvu9At
oGWtd3qYMNKqE6N/60LuiqTc+ZfDxLm6lNYBwW6sPefve3PnCNF7X8VHxKMb
rvJreOrDRomSlUIH2uR68Jn183LyEJuoZOs9PhrWC8mjrjmCFhwiz3o19zfV
fmgJ3nuzbSeHsGtNinjxTz+Q3tt56wiHCJtOrL++rR9HW4/J6iRwCOXwzGzx
wH68sgyM2dbDIYa6Y603fOmHr/wtr1uRJBGtdEQ7PWAAjfVf9LXrJojXZySs
FKoHcXXlhnJbh2nCr2RwQlNhBLrtThvNDk0T6mlXFtWvGEFd+LFG7YBpQix6
6dIDxAgEWhMGhdKmifLUhE4PtxEEnOuSrRmaJhxrg9Kq0kZw4ENIoFH4DLFr
SDOsSXkUhh7lZkoFf4iHL5a9qWaw0Sjy6Z3Imz9EkhRnz+pFbPiUdDrMt/4h
BhVHmWkybOQw6F5tf/8Qfyd2VbprsqH4dNedBOtZotHkUPyNDWwILUz8Feqc
JRIS210Lgtn4dlOvakxsnogz76/5OsRGUuNDUT+1eaJefFXzLIeN3SIarn9M
5omNdxTEZGbZ1P8v/5fHfZ4w2GHFT9DG8MuLbipZNE+UCdgR2mpj6LPsfmbo
9JfQb4hwvuI8hml24uOAtAXipm9jfFL1GEq1Fy0sFC0Q7S9mJD/UjsH/4GXb
8PcLxA8IK5D1Y5hrDx+O4SwQXO6LPum2jyGkq2TxJxUuGFp2CNlyxhBen7n9
ly8Xgq9xfV6uMo7ojOBPPEu5Qe/uM/DxH4e1wb8Si5dxo0JEN+pu8DiEXtk7
aLC40Vlis6g2fBzhXWrtm9dxw8t+fwfflXEEqtT1JvzLjWVzBwtY98bhlSr9
V72MG4fm7vgT78dhl/xEZ7MzD6SqveKDFnEgpnPbe68HDyp2BHK3S3FQXx7+
1NubBy94x5T05Tiwbt9pnHCeB3EPY4I+qnJgLvPX4sdDHkxJysqWrubA4Ka1
s/ccD1z9ZXd5OnIgldB18VoKL869OZW75hoH0tpF4dNZvHiwNar15g0OZKov
BO/N50Xss3sc9i0OFNiapzRqeKH8XF7waioHajY+buV9vAiITF1IzOVgFd+8
YdcqPmS1nJctfsPBVt8l3frv+eAQvMzQfoKDbYy+n4mNfKhMja1bNM2BfXrp
t7nvfAgqV65o+MOBY8OeT29G+bD8hniZKReJvTr3ynYv5sfri+IhP+gkjnTr
xoe58YO/KUh1vSKJyB1Wa79M8mNNT8pcjSUJmcJ6GR5uAYTtXpSovpFE3qId
UysZApB9q2cUbkWi+YtLfryiAK6foN3SsyWhauerYrdJAJ1R5Tttd5Ko3nJX
oOGWAFoEXdzTDpFwzFXtWrgngOm0ZOviwyQGmDkvdPMEsLKo4uyboyTE6wrP
XKkWwLtzMlWtPiTcrN8P2A4K4HjChOvrMyTmN0zUfzQVhAxb7Gx1JIm4LP+H
8xsEcWLi8tvYi9T6AlxRLDtB9Ma039kRTcLmNX1drIcgtLk+TzVdJpFkoVRg
c1kQR9qqqlOvkzDG5sQPHYI4ZOJgeCidRN3dhpOz/YIIPGg0MnyPWn/BYZs2
KYiGJ/Je3pnU/lS60aKFhGA/ffOrx32qflO/AOuVQrjkq5WvlEfipEma67sw
IfDYWY58LiFhnSpCbo4Rgup6h1iuMhIqgoFR9deFkB93vFC7nERDk+OTxvtC
sFToyzpdQWKFD5P3Z70QkBl3vPclCepu1rgMDZeUfliovCfxQrjnn1OqNEif
zq2X+UDihq/9pykWDRLlT8XF6kisN2dNz4EGZ37ROvZHEuk/Oq0EPWmoPMtx
j/5MYo+k7bBsAQ33/DY+1mglsSqgPPTOcxqaJL/JDlOmdy5fovyGhmwpQe/H
30iUPuYl1L/RQOsKatJqJ7Fkc2mc3gINVc8qBuZ+kBh+oq5WIEQHmba0/cFP
Eq+kE0pXS9ARopRSu72D2o9er85/1Ojw7nDLuvOLqjdU1WD9ZjrcGz+WiXWR
yO6Lr327g46oTJvOTMrnti7ssXahQ+PQlJxxNwmWfFvE1uN0iFVnNm/vIXGp
5EqLUyIdrA7j7EO/SexTnD/yPZWOV5sHCnopG184zOWaQ4fN4+P9+/pI/N6+
XvNABR03zZq/be0nYTn6x9+ri44Sp9tL6YMkzm5K0Ho5RIe8u3qhN+W8NFbb
okk6GuPmsr9Qlt7hZlIqxMDCQfvMuCESW3Jn+hgSDDgvKS4YpBwmcO2miywD
TVM6apbDJIZKXk/xrmCg10VuzTBlZQnXbEcjBg4Mnuk2G6H6/8i04wMwUNST
/yeacpW8drHtdgZemrqeVholcS0szvfWGQZYM9s5WmwSte2aqkOhDPyVaVrv
SXnOoKZxbTQDXkd5pNMoH/w9od+dwkBqWo2l8BiJ27jSaZjNgGIkbwZBueHW
8qsX8xkovLs5xpvyPzbOYytqGLh9zJa7ljLV06mhdQw8UC2+yqac8Td2W9NX
Bu47RhYvGSfxbacGl0YHA62qTO9/KIs8qXp8to+qLy+w0pmyBX23a90YAzyS
4tn+lM+4c0QUZxnYe5JbO5Fy7vOYyuN8TKgPRdg8ody5WN3rlTATV1Kahd9R
lvJ+IS8lxcTbLO3jPynb1O76+K8SEwvqFWfGKIcqjwc+12TC06xGnYdDotg/
Wkd0FRN6NL8gMcqDjarf95kycfGBcLAcZSVWZXTheibumVWz1Ck7XNi5RnAr
E4+7P0SzKF/qYA847WLie8X+2/qUXxhfSnq0jwnnvkqX1ZTJ+GXWC4eZ2Hte
uvX/1hx8PmPny4R4XjbNgLKLpeODjCAmjNSyJnQpX0sZ3TV1gQnlmTV3NCnX
TkYJWccxYXIthF+Z8vxWlZLkW0xU6kezllDWf1DuOZrOxPiSk9I0yp48DlLm
j5iQCt5aO0PVm+w88iahiIljOUZEH+XPhZF+vyup9VrNg5soC4goq/9Ty0Tx
xqhLlZTXeJZ9jfnMhJaxonsWZZ+q7REdbUx87VNgxFBuO3GhO3yYiebIos/b
KIvWKSa0TDKRR/qTupQt1UottLiEUaMgMMqknNcymP5JQhjZ2e9PVlH90KUX
Ya8iJ4zpcH2eRMrSlxR4TqkJQ/lXpc8RyqGmdvtkjIWxULBv8v/9t8nlzriR
uTDoq7rKWqj+FAkZPO9gI4zngU+F7lJOronIinMTxrLL663VKbv3fDHKOyyM
9m4Ri16q/7UEld598BWGperKT/col1iXDQpcFMbKgOiHUpSDjwoGqV4TRony
O656an42XN4hYp4ijJn6w5xQyk2fR/SCnggj17mnrJOaP/auZX6cb8LgdiSl
o6h5febvIyjeLYyKizvualM+l1xxc8WIMCROfGyuo+ad+Wtn+b88Ivj57NR+
IcoanjFcv7REoBVwY8UBKj9cTk1cqgsQgZf8uwf5VB6pJZrLDUSIoM7OYo9e
z//n/0quYJwI1p1BTy6VX/5zmg3mGSJYM339fDqVb9fPuywurRPB7y1euif+
o86b+Ld3M+VF8bS8dWXud6qfCiRX1miIYuMfBQcG5d1f91X/Wkn9vpb/hCeV
v33Sc92yG0Tx89Fo6tI2ErypelpXvUTh2j/EPNhCzXfercJzL0SRZCI6mErl
vWVL/fxIrSiGZqdThhpI2HLxbXT9IgrF+eU5hpTd7b2+ET2iOCuc0PS6ntrP
AOXgEH4xfMqYSG6gzhcfxcl767TF8CLjl+Ot11S+e94drvETgxeZvIqHOt+s
5kwkAgPEsExPgyb3jER9XJOhQYgYdNw1DxkUU/lRSgvJuCgGo90WtW6FJEYY
vhIRyWKQNYk1vp9P9VP+JqMN1WJgtq9bwqHO06PTYyG1wuI4bLWgGHaTquf4
wSW9EuKYO/y6YFciCaGBtoe80uIwpAlUs26QyGyvaV6rIg4jD8sdjddI/Ky8
rlNkKA6THhl/5hUSWyNMWtNcxWG1lFfBOIKaP4lQ3YAn4uDn87IMpt4vZrTF
frIcJGD0bGZGxoLEZIpM6KrdEmg/JxSZvo7KA1E1VRNXCVhUeY4tB/X8HJPD
lv9KIE7Na7++GZVn5e6Tu4MkcCpvqtHIiMT7zc9EojIlwL/n929hbep944gL
0TkhAc+2xWtHxEmYPnyUeuPGIrjo5XsXf+dgTMLazbFaElfHaI4aPhx0x7g5
nhBcgqnJs3rzI+OwGj1t1WMoBQXDEr4Hx8Yx5C50sjBYGpfOVabc/jZGfW9K
8URWL0Vi6FLTgHVjkPiofjl/VAYakjMpTnlsyEU93mZoKIeQJfOnmmls3NQ2
EVvkKY9pkwZXmdYRvJdZt5oTr4Bygd//Zt4exj9y1XG6zYo4rUS7sdxsCCK8
6b77wpTAWef6gY89AIVQRVMndWUsvnrEWjW0HzS1PcX2b5WxyjDmGJdkH1aY
LX18eq8KAubN52fLe3Hip0SNNdcydKxNijpj2YNRToyD1c1lqCmojZbp6cJG
3TdJVixVoC1y67nYTlRy1sxO1aviYo5GZLbsf/DS0W/77KEGw0Tt5GVXOmA2
cqDJiaaOhSnbvU0V37FeVXqLcLo6SpJd9pjotWF5yKUz1UYa+K9CbSr+TQu0
PExeqLVp4CKfX//SjV/hUXkovPD4cmht35CUI9GIF6lNB8YWa+KU9w5a4dcG
kPcXpnSfaeJg5Rr7hFsf4a72kJa0RQvVa87TsmTeY0zrmuFTthaCv9d+lMt8
g5KM2f8morRhcNLpx8HSGuy2XIY1Cjo4lLk2qkj1JWSPRZauqNLBMRHTv02b
K7CYfvTJlp0sVFj3+W3VLUWGRZA/24mFsu0WKTIKpdAPumxxbQ8L9NWDD0eZ
pbBl539t3cdCoZLX6WcDJbjQPDHjfpSFVfO7AiuySjCdHmzuH8pCwZeI3lSl
ErStudaY9ZAF7U2Z5k9ln+HQqYxkqzwWDoWkGRUxnmEyr8hjKJ8F3ZGeipez
xZBQaZ1aWczCPe4NJ6fai7FZSF6uooqF1dpOBl+Ti/G8KetA41cWMn+13N2p
VAxrkRKWXysLW7dynMfFitG68d2kdDsLncz4wBvcxSDLBqNcfrEgYCD0609n
EVhpern9AyzwHWv+tSqrCM/b1vnFDFP1xk4cX5pYBGvJ7YQum4VfAVx2QlFF
OBh56rPvBAt5wZeHuQ8Xgay6kCQ1zcIkeSST6VyEsD+J7mV/WBiY7L+rZFME
MYMHOnvnWXAqWt1mZlaEO8fKJhYWWJB0C7Q7sKII/wOwnUOP
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Uwn/0XHYw79ivp7TKKD7yfCGy3ScZKS9/lXYNPIbH6d7XKXjnA6/nZyJ06jw
zVbra/F03Ca6FJlUMY36mwwn7t2mY61Q/pky2gyy42kzH35Mx9uld4tyKs0g
k6XMD/E5dOxYGK+5y2AGVR7dmKmaR753WOrYD5cZdECzxHtNMR332Kq0cuTP
oNjDPfxuNXR8fb1pqaX1LEJflzapdtKxZrvdts3HZlH9ZuNtRd0kHhEezWqB
s0j9i7+VYS8dc7YkDHHfm0VWuUYqVD8dBwb3Sr8dnkXxCz5fvMfoWHLtzMPc
5VkU0pI3kj1Bx4WfeXXSROaQ0egFr44pOh5V1LII0p9Djd/6rRX/0fHh+tBz
ehFziOOTuqopG4VZzyRwKyfOod1zp7gNVlA4VS4rQezxHCo5bXNtNSeFW3w+
Phn7OIfunfmt281D4Z2Sch3Z0v+QQxrfx3kahXXdSjfT8/8hpOfLaJOlcLPg
x3eCNf9QmFS4tK08hb2LeqwXW/4hT7pF/Uc6hR/z8Xq2Lf1DcZw7fj5ZTWH5
PNvUBLN5FNSSJ0epULjswEnV8IPz6LjKNx1vVQrbc4QW+njPo0Z54YFiNQon
2D5stLw5j+6/5kzYrEFh7uWpJe6eeTRstDKRW5vCmVk8l2cm59ENha+7NHUo
bGQlu/IX1wL63m52dM8GCp/LNNF8y1hAqruWuKL1KDxqHu8U9N8CqWfKDrw2
pHBr0rrKMdoiquWszD9jTOHk5mwhP6VFJNkiO+RpQtYjuMbpn8EiytkqIHt4
K4X/Fy67xHZoEVWLfKky2kbhbk/eTWIFi6h1zGR/sxmF7z2KvJz0bhEdsMi+
kWNOYdc+lnaZTjL+3a0noiwo3Gc3858S1xJ6LXWJUrekcL9J30tduyV0p+9n
5J49FH4U4sRV6rGEFrbH7Ba1orB7Sdt+FLaE/guGDU3Ew5qfp7ZlLyFHr+jI
bfvI90iVa9stLiGtUM13wjYUnh1NfBZ4bxntGlqyWedA4WI10eXlgmU0j4tW
vCcOOBJrGfF+GQWk/UpwOUjhhfaIkSsTy4jiTrx4yZHCob1F4h8VWKBo/lB3
lTOFIxoz93b7skDnbyX93sNk/ScOBSqEsMAkLMY6uVF4Kw91//BFFtgeJ2Db
RsxpkjLef4cF1o7+PFh/hMLRxdevjdWwQC3Xxanbxyh8OSPkI9sqVuAxqptY
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
U8vLDOgUX32Nhfj/nLoS5g==
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
R1GCOBFQaqkRMoFUGHu0WlMkCIuwuKyhmAnk8OGy7v0KCcLgtg97QtoEStLj
WfvTLUEopqgUsnyeQIlOjDG6YpLEZH2CRJPIJLr39HrTZJgk0d/s5x2qOImi
7rBcP/RMkmjuPtSgqTOJBLxjhg6USBJF03xBiScm0aLthXyBMUniikRgn+vL
SWRYFTHeZCZFCLkey2DXm0JCJ1jFBdekCEX2pKr9h6dQNq+KMPc6aQKe/el9
6DKFdtmxmj9UlCZcW93ElWOmUExwTWWAhTRRuftS5P7fU+hx5q6iiCRpoq3r
/fOHC1Pop6t+rk2+NDHux/yxl3caNbhVJ9XVSBMSuTdWvLZPo6sKJSV3hqUJ
L8mH7g/DplFdquLItIgMcaPg143eR9OI89OE4pS0DPHkoEyaUs40kgyOMa3e
JEPUX0/retc6jZKGa+amtssQcrNv9vcqzCBa33DAuYMyxLeGpq1K9TNo5cIR
21uhMsTAaWEzr+4ZlGs28GZHhAyxymLj8m56BqWsLqOqaBlCUbsnyUxyFu2t
ysY5JkOEpI0JebnPIlMWVs3obBkiVneb2ruQWXTQ/I6VyWsZIqvDx4TtwSxS
OGauPVYgQ7QJrobGvp9FFiey3Ps+yBBbg3jmSihzSCqXfWt8kwyxV3y/IJv8
HMp56Sdys1mGsMu/q2qmNYfCzB3andvweIfFnHuOz6GWtKQ/bT0yRK+Vwk/W
V3PIQkGOoXRMhpifcp0xrZ5DBDL9yTwlQ/DdyqHGts+h+rC5LdtnZYgdHzWM
FFnm0X87ONhOLMsQd9QMik0t59GKwabYHnYaodpuvUfHeR41jv9YceaiEfVX
3b4p+c+j6+x20r08NIKtNeYfx9N5ZN1tV5VBpRH+l/vEK4bnkcq0etRjMRoh
unkuLXdtHh2mBH0tkqAR+V+51J8ILCBIushZL0UjxuW27gvQXEDcWh+sP8nS
CIdPQZc0ri4gJ/8u692KNILRO4Zj44MFNCNfK8uhTCMSpJ7HCGUsoGaRtNoP
dBrReq7xxUTjAtKJl48SUaMRJqJSHZnii8il1a/JXINGDH1QOx2nsoh+PP3k
8kmTRoS76M+EE4toOmouVHsHjSgvdeV1OrWIbJkq5pl0aMR2x2IdmVeL6GsQ
atqmSyO+8TXW8lUt4vPNNg83PRrhUdBrudK6iNa5Hx1P3E0jMri53NtWF5GC
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
WVujw+mrL8uysP8H2uwr/w==
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#8"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#9"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
OI2tEQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#10"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
vZ3JKVRM86jmLi1RcIvlYMrTJCr+D+5SsGs=
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#11"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
8N+BSw==
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#12"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
tL5OgXGXqyqDd6jwP0gLb+k=
       "]]},
     Annotation[#, "Charting`Private`Tag$6175083#13"]& ]}, {{{}, {
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 4466.323346926669}], 
           Offset[{0, 0}, {15.3, 4466.323346926669}], 
           Offset[{0., 0.}, {15.45625, 4466.323346926669}], 
           Offset[{0., 0.}, {15.45625, 4466.323346926669}], 
           Offset[{0., 0.}, {15.6125, 4466.323346926669}], 
           Offset[{0, 0}, {16.5125, 114209.37968303646`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            114209.37968303646`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            114209.37968303646`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            114209.37968303646`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 4466.323346926669}], 
           Offset[{0, 0}, {15.3, 4466.323346926669}], 
           Offset[{0., 0.}, {15.45625, 4466.323346926669}], 
           Offset[{0., 0.}, {15.45625, 4466.323346926669}], 
           Offset[{0., 0.}, {15.6125, 4466.323346926669}], 
           Offset[{0, 0}, {16.5125, 114209.37968303646`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            114209.37968303646`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            114209.37968303646`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            114209.37968303646`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{105., 12.000000000000023`}, {16.5125, 114209.37968303646`}],
            Offset[{105., -11.999999999999977`}, {16.5125, 
            114209.37968303646`}], 
           Offset[{10., -11.999999999999998`}, {16.5125, 
            114209.37968303646`}], 
           Offset[{10., 12.000000000000002`}, {16.5125, 
            114209.37968303646`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["boundEGFReceptor", TextForm]], "InlineText",
              ExpressionUUID->"b9dbad75-5bf1-43c8-8bc8-4f4cb42dbfad"],
             Text[$CellContext`boundEGFReceptor]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{57.5, 1.27675647831893*^-14}, {16.5125, 114209.37968303646}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 3.0513622264407343`}], 
           Offset[{0, 0}, {15.3, 3.0513622264407343`}], 
           Offset[{0., 0.}, {15.45625, 3.0513622264407343`}], 
           Offset[{0., 0.}, {15.45625, 3.0513622264407343`}], 
           Offset[{0., 0.}, {15.6125, 3.0513622264407343`}], 
           Offset[{0, 0}, {16.5125, 16614.18455496231}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            16614.18455496231}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            16614.18455496231}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            16614.18455496231}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 3.0513622264407343`}], 
           Offset[{0, 0}, {15.3, 3.0513622264407343`}], 
           Offset[{0., 0.}, {15.45625, 3.0513622264407343`}], 
           Offset[{0., 0.}, {15.45625, 3.0513622264407343`}], 
           Offset[{0., 0.}, {15.6125, 3.0513622264407343`}], 
           Offset[{0, 0}, {16.5125, 16614.18455496231}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            16614.18455496231}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            16614.18455496231}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            16614.18455496231}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{95., 12.000000000000021`}, {16.5125, 16614.18455496231}], 
           Offset[{95., -11.999999999999979`}, {16.5125, 16614.18455496231}], 
           Offset[{10., -11.999999999999996`}, {16.5125, 16614.18455496231}], 
           Offset[{10., 12.000000000000004`}, {16.5125, 
            16614.18455496231}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["freeEGFReceptor", TextForm]], "InlineText",
              ExpressionUUID->"0f4f8f14-1c76-4920-9acc-128d1566bfde"],
             Text[$CellContext`freeEGFReceptor]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{52.5, 1.1657341758564144*^-14}, \
{16.5125, 16614.18455496231}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 1489.8970348399084`}], 
           Offset[{0, 0}, {15.3, 1489.8970348399084`}], 
           Offset[{0., 0.}, {15.45625, 1489.8970348399084`}], 
           Offset[{0., 0.}, {15.45625, 1489.8970348399084`}], 
           Offset[{0., 0.}, {15.6125, 1489.8970348399084`}], 
           Offset[{0, 0}, {16.5125, 41914.52170914804}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            41914.52170914804}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            41914.52170914804}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            41914.52170914804}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 1489.8970348399084`}], 
           Offset[{0, 0}, {15.3, 1489.8970348399084`}], 
           Offset[{0., 0.}, {15.45625, 1489.8970348399084`}], 
           Offset[{0., 0.}, {15.45625, 1489.8970348399084`}], 
           Offset[{0., 0.}, {15.6125, 1489.8970348399084`}], 
           Offset[{0, 0}, {16.5125, 41914.52170914804}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            41914.52170914804}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            41914.52170914804}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            41914.52170914804}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{60., 12.000000000000012`}, {16.5125, 41914.52170914804}], 
           Offset[{60., -11.999999999999988`}, {16.5125, 41914.52170914804}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {16.5125, 
            41914.52170914804}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {16.5125, 
            41914.52170914804}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["SosActive", TextForm]], "InlineText",ExpressionUUID->
              "7d8d8f24-7509-41d6-afcd-0d9778c17640"],
             Text[$CellContext`SosActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{35., 7.771561172376096*^-15}, {16.5125, 41914.52170914804}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 33285.358862281115`}], 
           Offset[{0, 0}, {15.3, 33285.358862281115`}], 
           Offset[{0., 0.}, {15.45625, 33285.358862281115`}], 
           Offset[{0., 0.}, {15.45625, 33285.358862281115`}], 
           Offset[{0., 0.}, {15.6125, 33285.358862281115`}], 
           Offset[{0, 0}, {16.5125, 308767.0258865219}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            308767.0258865219}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            308767.0258865219}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            308767.0258865219}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 33285.358862281115`}], 
           Offset[{0, 0}, {15.3, 33285.358862281115`}], 
           Offset[{0., 0.}, {15.45625, 33285.358862281115`}], 
           Offset[{0., 0.}, {15.45625, 33285.358862281115`}], 
           Offset[{0., 0.}, {15.6125, 33285.358862281115`}], 
           Offset[{0, 0}, {16.5125, 308767.0258865219}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            308767.0258865219}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            308767.0258865219}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            308767.0258865219}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{61., 12.000000000000012`}, {16.5125, 308767.0258865219}], 
           Offset[{61., -11.999999999999988`}, {16.5125, 308767.0258865219}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {16.5125, 
            308767.0258865219}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {16.5125, 
            308767.0258865219}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["RasActive", TextForm]], "InlineText",ExpressionUUID->
              "4a436cf1-3468-4f65-bc8c-7c455441b90a"],
             Text[$CellContext`RasActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{35.5, 7.882583474838611*^-15}, {16.5125, 308767.0258865219}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 5422.39186837526}], 
           Offset[{0, 0}, {15.3, 5422.39186837526}], 
           Offset[{0., 0.}, {15.45625, 5422.39186837526}], 
           Offset[{0., 0.}, {15.45625, 5422.39186837526}], 
           Offset[{0., 0.}, {15.6125, 5422.39186837526}], 
           Offset[{0, 0}, {16.5125, 150012.78878853383`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            150012.78878853383`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            150012.78878853383`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            150012.78878853383`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 5422.39186837526}], 
           Offset[{0, 0}, {15.3, 5422.39186837526}], 
           Offset[{0., 0.}, {15.45625, 5422.39186837526}], 
           Offset[{0., 0.}, {15.45625, 5422.39186837526}], 
           Offset[{0., 0.}, {15.6125, 5422.39186837526}], 
           Offset[{0, 0}, {16.5125, 150012.78878853383`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            150012.78878853383`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            150012.78878853383`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            150012.78878853383`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {16.5125, 150012.78878853383`}], 
           Offset[{64., -11.999999999999986`}, {16.5125, 
            150012.78878853383`}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {16.5125, 
            150012.78878853383`}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {16.5125, 
            150012.78878853383`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["Raf1Active", TextForm]], "InlineText",ExpressionUUID->
              "928215af-f1ea-4b39-b33f-b40ffa0e9015"],
             Text[$CellContext`Raf1Active]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, {16.5125, 150012.78878853383}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 554368.2834708055}], 
           Offset[{0, 0}, {15.3, 554368.2834708055}], 
           Offset[{0., 0.}, {15.45625, 554368.2834708055}], 
           Offset[{0., 0.}, {15.45625, 554368.2834708055}], 
           Offset[{0., 0.}, {15.6125, 554368.2834708055}], 
           Offset[{0, 0}, {16.5125, 533687.5059425666}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            533687.5059425666}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            533687.5059425666}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            533687.5059425666}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 554368.2834708055}], 
           Offset[{0, 0}, {15.3, 554368.2834708055}], 
           Offset[{0., 0.}, {15.45625, 554368.2834708055}], 
           Offset[{0., 0.}, {15.45625, 554368.2834708055}], 
           Offset[{0., 0.}, {15.6125, 554368.2834708055}], 
           Offset[{0, 0}, {16.5125, 533687.5059425666}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            533687.5059425666}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            533687.5059425666}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            533687.5059425666}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{62., 12.000000000000014`}, {16.5125, 533687.5059425666}], 
           Offset[{62., -11.999999999999986`}, {16.5125, 533687.5059425666}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {16.5125, 
            533687.5059425666}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {16.5125, 
            533687.5059425666}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["MekActive", TextForm]], "InlineText",ExpressionUUID->
              "0f81fdd9-cbc6-49da-b83b-342f2c8d8bfa"],
             Text[$CellContext`MekActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{36., 7.993605777301127*^-15}, {16.5125, 533687.5059425666}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 571607.3763238314}], 
           Offset[{0, 0}, {15.3, 571607.3763238314}], 
           Offset[{0., 0.}, {15.45625, 571607.3763238314}], 
           Offset[{0., 0.}, {15.45625, 571607.3763238314}], 
           Offset[{0., 0.}, {15.6125, 571607.3763238314}], 
           Offset[{0, 0}, {16.5125, 580093.0297721232}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            580093.0297721232}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            580093.0297721232}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            580093.0297721232}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 571607.3763238314}], 
           Offset[{0, 0}, {15.3, 571607.3763238314}], 
           Offset[{0., 0.}, {15.45625, 571607.3763238314}], 
           Offset[{0., 0.}, {15.45625, 571607.3763238314}], 
           Offset[{0., 0.}, {15.6125, 571607.3763238314}], 
           Offset[{0, 0}, {16.5125, 580093.0297721232}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            580093.0297721232}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            580093.0297721232}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            580093.0297721232}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{58., 12.000000000000012`}, {16.5125, 580093.0297721232}], 
           Offset[{58., -11.999999999999988`}, {16.5125, 580093.0297721232}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {16.5125, 
            580093.0297721232}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {16.5125, 
            580093.0297721232}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["ErkActive", TextForm]], "InlineText",ExpressionUUID->
              "ea52675c-bbd1-4418-81f7-56a9b618a97e"],
             Text[$CellContext`ErkActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{34., 7.549516567451064*^-15}, {16.5125, 580093.0297721232}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 20906.664453021935`}], 
           Offset[{0, 0}, {15.3, 20906.664453021935`}], 
           Offset[{0., 0.}, {15.45625, 20906.664453021935`}], 
           Offset[{0., 0.}, {15.45625, 20906.664453021935`}], 
           Offset[{0., 0.}, {15.6125, 20906.664453021935`}], 
           Offset[{0, 0}, {16.5125, 230393.7443324391}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            230393.7443324391}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            230393.7443324391}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            230393.7443324391}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 20906.664453021935`}], 
           Offset[{0, 0}, {15.3, 20906.664453021935`}], 
           Offset[{0., 0.}, {15.45625, 20906.664453021935`}], 
           Offset[{0., 0.}, {15.45625, 20906.664453021935`}], 
           Offset[{0., 0.}, {15.6125, 20906.664453021935`}], 
           Offset[{0, 0}, {16.5125, 230393.7443324391}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            230393.7443324391}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            230393.7443324391}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            230393.7443324391}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{78., 12.000000000000018`}, {16.5125, 230393.7443324391}], 
           Offset[{78., -11.999999999999982`}, {16.5125, 230393.7443324391}], 
           Offset[{10., -11.999999999999996`}, {16.5125, 230393.7443324391}], 
           Offset[{10., 12.000000000000004`}, {16.5125, 
            230393.7443324391}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["P90RskActive", TextForm]], "InlineText",ExpressionUUID->
              "382c4500-fc02-49d0-8ed0-3d2362b59e49"],
             Text[$CellContext`P90RskActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{44., 9.769962616701378*^-15}, {16.5125, 230393.7443324391}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 118509.84563111704`}], 
           Offset[{0, 0}, {15.3, 118509.84563111704`}], 
           Offset[{0., 0.}, {15.45625, 118509.84563111704`}], 
           Offset[{0., 0.}, {15.45625, 118509.84563111704`}], 
           Offset[{0., 0.}, {15.6125, 118509.84563111704`}], 
           Offset[{0, 0}, {16.5125, 434295.13726224354`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            434295.13726224354`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            434295.13726224354`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            434295.13726224354`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 118509.84563111704`}], 
           Offset[{0, 0}, {15.3, 118509.84563111704`}], 
           Offset[{0., 0.}, {15.45625, 118509.84563111704`}], 
           Offset[{0., 0.}, {15.45625, 118509.84563111704`}], 
           Offset[{0., 0.}, {15.6125, 118509.84563111704`}], 
           Offset[{0, 0}, {16.5125, 434295.13726224354`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            434295.13726224354`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            434295.13726224354`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            434295.13726224354`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{65., 12.000000000000014`}, {16.5125, 434295.13726224354`}], 
           Offset[{65., -11.999999999999986`}, {16.5125, 
            434295.13726224354`}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {16.5125, 
            434295.13726224354`}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {16.5125, 
            434295.13726224354`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["PI3KActive", TextForm]], "InlineText",ExpressionUUID->
              "448c8daa-1080-42ae-a4ad-9ac81e47d8d1"],
             Text[$CellContext`PI3KActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37.5, 8.326672684688674*^-15}, \
{16.5125, 434295.13726224354}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 14074.332067618641`}], 
           Offset[{0, 0}, {15.3, 14074.332067618641`}], 
           Offset[{0., 0.}, {15.45625, 14074.332067618641`}], 
           Offset[{0., 0.}, {15.45625, 14074.332067618641`}], 
           Offset[{0., 0.}, {15.6125, 14074.332067618641`}], 
           Offset[{0, 0}, {16.5125, 190791.43842906939`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            190791.43842906939`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            190791.43842906939`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            190791.43842906939`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 14074.332067618641`}], 
           Offset[{0, 0}, {15.3, 14074.332067618641`}], 
           Offset[{0., 0.}, {15.45625, 14074.332067618641`}], 
           Offset[{0., 0.}, {15.45625, 14074.332067618641`}], 
           Offset[{0., 0.}, {15.6125, 14074.332067618641`}], 
           Offset[{0, 0}, {16.5125, 190791.43842906939`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            190791.43842906939`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            190791.43842906939`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            190791.43842906939`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{58., 12.000000000000012`}, {16.5125, 190791.43842906939`}], 
           Offset[{58., -11.999999999999988`}, {16.5125, 
            190791.43842906939`}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {16.5125, 
            190791.43842906939`}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {16.5125, 
            190791.43842906939`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["AktActive", TextForm]], "InlineText",ExpressionUUID->
              "3454255c-81a8-41a5-8583-546366ea5d9c"],
             Text[$CellContext`AktActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{34., 7.549516567451064*^-15}, {16.5125, 190791.43842906939}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 21082.49382837966}], 
           Offset[{0, 0}, {15.3, 21082.49382837966}], 
           Offset[{0., 0.}, {15.45625, 21082.49382837966}], 
           Offset[{0., 0.}, {15.45625, 21082.49382837966}], 
           Offset[{0., 0.}, {15.6125, 21082.49382837966}], 
           Offset[{0, 0}, {16.5125, 265692.74776930833`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            265692.74776930833`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            265692.74776930833`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            265692.74776930833`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 21082.49382837966}], 
           Offset[{0, 0}, {15.3, 21082.49382837966}], 
           Offset[{0., 0.}, {15.45625, 21082.49382837966}], 
           Offset[{0., 0.}, {15.45625, 21082.49382837966}], 
           Offset[{0., 0.}, {15.6125, 21082.49382837966}], 
           Offset[{0, 0}, {16.5125, 265692.74776930833`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            265692.74776930833`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            265692.74776930833`}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            265692.74776930833`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {16.5125, 265692.74776930833`}], 
           Offset[{64., -11.999999999999986`}, {16.5125, 
            265692.74776930833`}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {16.5125, 
            265692.74776930833`}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {16.5125, 
            265692.74776930833`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["C3GActive", TextForm]], "InlineText",ExpressionUUID->
              "8b203dea-f47f-4961-b9e9-34b4de5f63d6"],
             Text[$CellContext`C3GActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, {16.5125, 265692.74776930833}],
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 4132.269182419193}], 
           Offset[{0, 0}, {15.3, 4132.269182419193}], 
           Offset[{0., 0.}, {15.45625, 4132.269182419193}], 
           Offset[{0., 0.}, {15.45625, 4132.269182419193}], 
           Offset[{0., 0.}, {15.6125, 4132.269182419193}], 
           Offset[{0, 0}, {16.5125, 78808.0929159124}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            78808.0929159124}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 78808.0929159124}],
            Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            78808.0929159124}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 4132.269182419193}], 
           Offset[{0, 0}, {15.3, 4132.269182419193}], 
           Offset[{0., 0.}, {15.45625, 4132.269182419193}], 
           Offset[{0., 0.}, {15.45625, 4132.269182419193}], 
           Offset[{0., 0.}, {15.6125, 4132.269182419193}], 
           Offset[{0, 0}, {16.5125, 78808.0929159124}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            78808.0929159124}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 78808.0929159124}],
            Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            78808.0929159124}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{67., 12.000000000000016`}, {16.5125, 78808.0929159124}], 
           Offset[{67., -11.999999999999984`}, {16.5125, 78808.0929159124}], 
           Offset[{10.000000000000004`, -11.999999999999998`}, {16.5125, 
            78808.0929159124}], 
           Offset[{9.999999999999996, 12.000000000000002`}, {16.5125, 
            78808.0929159124}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["Rap1Active", TextForm]], "InlineText",ExpressionUUID->
              "fb4da1d4-4a27-478c-96e9-60b23c2d90b5"],
             Text[$CellContext`Rap1Active]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{38.5, 8.548717289613705*^-15}, {16.5125, 78808.0929159124}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 92349.6363510002}], 
           Offset[{0, 0}, {15.3, 92349.6363510002}], 
           Offset[{0., 0.}, {15.45625, 92349.6363510002}], 
           Offset[{0., 0.}, {15.45625, 92349.6363510002}], 
           Offset[{0., 0.}, {15.6125, 92349.6363510002}], 
           Offset[{0, 0}, {16.5125, 382136.3159872287}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            382136.3159872287}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            382136.3159872287}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            382136.3159872287}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {15.3, 92349.6363510002}], 
           Offset[{0, 0}, {15.3, 92349.6363510002}], 
           Offset[{0., 0.}, {15.45625, 92349.6363510002}], 
           Offset[{0., 0.}, {15.45625, 92349.6363510002}], 
           Offset[{0., 0.}, {15.6125, 92349.6363510002}], 
           Offset[{0, 0}, {16.5125, 382136.3159872287}], 
           Offset[{5., 1.1102230246251565`*^-15}, {16.5125, 
            382136.3159872287}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            382136.3159872287}], 
           Offset[{10., 2.220446049250313*^-15}, {16.5125, 
            382136.3159872287}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{64., 12.000000000000014`}, {16.5125, 382136.3159872287}], 
           Offset[{64., -11.999999999999986`}, {16.5125, 382136.3159872287}], 
           Offset[{10.000000000000004`, -11.999999999999996`}, {16.5125, 
            382136.3159872287}], 
           Offset[{9.999999999999996, 12.000000000000004`}, {16.5125, 
            382136.3159872287}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           StyleBox[
            InterpretationBox[Cell[BoxData[
              FormBox["bRafActive", TextForm]], "InlineText",ExpressionUUID->
              "5b4e3ba3-4906-4fd2-a107-fd5c2aea913b"],
             Text[$CellContext`bRafActive]],
            StripOnInput->False,
            FontSize->10],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{37., 8.215650382226158*^-15}, {16.5125, 382136.3159872287}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 137.8}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 15}, {2.074041264695567*^-43, 576219.1398945074}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.855393989095943*^9, 3.855394197160483*^9, 3.855916242483119*^9, 
   3.8566050146559887`*^9, 3.872849060755395*^9, {3.8728491304744596`*^9, 
   3.87284915687532*^9}, {3.87284989028336*^9, 3.872849890700605*^9}, 
   3.872851664317897*^9, 3.873879807954802*^9, 3.87389017564141*^9},
 CellLabel->
  "Out[509]=",ExpressionUUID->"88e5a08a-c0f1-4773-9725-c2fdebdf8132"]
}, Open  ]],

Cell["\<\
And a roughly 75% steady state activation rate of BRAF, compared to a very \
low one in the non-mutant model.\
\>", "Text",
 CellChangeTimes->{{3.805525372587502*^9, 
  3.8055254285470543`*^9}},ExpressionUUID->"d6fa5bcf-74ef-464f-b318-\
a188805c1a88"],

Cell[CellGroupData[{

Cell[BoxData[{
 FractionBox[
  RowBox[{"RasActive", "/.", 
   RowBox[{"ss", "[", 
    RowBox[{"sys", ",", "parsRAS"}], "]"}]}], 
  RowBox[{"RasTot", "/.", "parsRAS"}]], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"RasActive", "/.", 
   RowBox[{"ss", "[", 
    RowBox[{"sys", ",", "pars"}], "]"}]}], 
  RowBox[{"RasTot", "/.", "pars"}]]}], "Input",
 CellChangeTimes->{{3.805525330723435*^9, 3.80552536347414*^9}, {
  3.805525393529332*^9, 3.80552540816026*^9}, {3.872848609165509*^9, 
  3.8728486122213163`*^9}, {3.872848683893346*^9, 3.872848701644862*^9}},
 CellLabel->
  "In[510]:=",ExpressionUUID->"c1b19abf-81f2-4f0d-a93e-f268ea7c4c69"],

Cell[BoxData["0.01921620782732241`"], "Output",
 CellChangeTimes->{3.855394008918529*^9, 3.855394199353986*^9, 
  3.855916244000971*^9, 3.856605017609839*^9, 3.872849162881369*^9, 
  3.872851664378281*^9, 3.8738798080068617`*^9, 3.873890175693657*^9},
 CellLabel->
  "Out[510]=",ExpressionUUID->"6621aeb7-7f60-4224-9887-4e77fdf84531"],

Cell[BoxData["0.0008334477199879624`"], "Output",
 CellChangeTimes->{3.855394008918529*^9, 3.855394199353986*^9, 
  3.855916244000971*^9, 3.856605017609839*^9, 3.872849162881369*^9, 
  3.872851664378281*^9, 3.8738798080068617`*^9, 3.873890175719936*^9},
 CellLabel->
  "Out[511]=",ExpressionUUID->"a92880fe-c0a0-4ee5-bb8d-86cd99c73869"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The ground truth values", "Subsubsection",
 CellChangeTimes->{{3.80553295500884*^9, 
  3.8055329735138693`*^9}},ExpressionUUID->"a5278414-ba8d-4e60-9983-\
335e33329c6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rlocRas", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "\[Equal]", 
         RowBox[{"ToString", "[", "j", "]"}]}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"Chop", "[", 
         RowBox[{
          RowBox[{"rij", "[", 
           RowBox[{"sys", ",", "parsRAS", ",", "i", ",", "j"}], "]"}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], 
   ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{"rDSRas", " ", "=", " ", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToString", "/@", 
            RowBox[{"vars", "\[LeftDoubleBracket]", 
             RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
           RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], 
         ",", "#"}], "]"}], "&"}], "/@", "rlocRas"}]}], "\[IndentingNewLine]",
     "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/rloc-ras-true.tsv\>\"", ",", 
   "\[IndentingNewLine]", "rDSRas"}], "]"}]}], "Input",
 CellChangeTimes->{{3.805532976735959*^9, 3.805532990152102*^9}, {
   3.805533024084016*^9, 3.805533045297851*^9}, {3.8055362897540407`*^9, 
   3.80553629053553*^9}, {3.8553940392751427`*^9, 3.855394042074938*^9}, 
   3.855394089760758*^9, 3.8728486158237963`*^9, {3.872848708046687*^9, 
   3.872848732742099*^9}, {3.872849404136181*^9, 3.872849405871211*^9}},
 CellLabel->
  "In[512]:=",ExpressionUUID->"117d0fdc-8fab-4e3b-86cf-4586307a8b1f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Sos" -> <|
        "Sos" -> -1, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, 
         "P90Rsk" -> -0.955423325456904, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Ras" -> <|
        "Sos" -> 0.9970313170888131, "Ras" -> -1, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Raf1" -> <|
        "Sos" -> 0, "Ras" -> 1.0317132814301304`, "Raf1" -> -1, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, 
         "Akt" -> -0.42377190354000416`, "C3G" -> 0, "Rap1" -> 0, "bRaf" -> 
         0|>, "Mek" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0.3124868635345946, "Mek" -> -1, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0.6899515856369846|>, 
       "Erk" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0.9396687380105805, 
         "Erk" -> -1, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "P90Rsk" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 
         0.7671771230395954, "P90Rsk" -> -1, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 
         0, "Rap1" -> 0, "bRaf" -> 0|>, 
       "PI3K" -> <|
        "Sos" -> 0, "Ras" -> 0.0038868351183246196`, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> -1, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0, "bRaf" -> 0|>, 
       "Akt" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0.3950953420734062, "Akt" -> -1, "C3G" -> 0, "Rap1" -> 
         0, "bRaf" -> 0|>, 
       "C3G" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> -1, "Rap1" -> 0, "bRaf" -> 0|>, 
       "Rap1" -> <|
        "Sos" -> 0, "Ras" -> 0, "Raf1" -> 0, "Mek" -> 0, "Erk" -> 0, "P90Rsk" -> 
         0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0.9993602219089815, 
         "Rap1" -> -1, "bRaf" -> 0|>, 
       "bRaf" -> <|
        "Sos" -> 0, "Ras" -> 0.9155959199208717, "Raf1" -> 0, "Mek" -> 0, 
         "Erk" -> 0, "P90Rsk" -> 0, "PI3K" -> 0, "Akt" -> 0, "C3G" -> 0, 
         "Rap1" -> 0.20531492593304285`, "bRaf" -> -1|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Path" -> {}, "DisplayedRowCount" -> 
     11, "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, 
     "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sos"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sos"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Ras"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Ras"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Raf1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Raf1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mek"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mek"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Erk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Erk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "P90Rsk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "P90Rsk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PI3K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PI3K"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Akt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Akt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C3G"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C3G"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rap1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rap1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.955423"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ras"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.997031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raf1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.03171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.423772"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mek"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.312487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Erk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.939669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P90Rsk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.767177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PI3K"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00388684"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Akt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.395095"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C3G"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Rap1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["bRaf", 
                  Style[
                  "bRaf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bRaf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.915596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.205315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{766., {189.134033203125, 194.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{766., {189.134033203125, 194.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.855394207256833*^9, 3.855916250172557*^9, 3.856605024643928*^9, 
   3.858834040180842*^9, 3.858834088720339*^9, 3.872849172610186*^9, {
   3.8728496660995417`*^9, 3.872849674742256*^9}, 3.872851667305009*^9, 
   3.8738798101678123`*^9, 3.873890178398603*^9},
 CellLabel->
  "Out[513]=",ExpressionUUID->"253d4bdc-1d0d-4016-b244-eab9af331c68"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/rloc-ras-true.tsv\"\>"], \
"Output",
 CellChangeTimes->{
  3.855394207256833*^9, 3.855916250172557*^9, 3.856605024643928*^9, 
   3.858834040180842*^9, 3.858834088720339*^9, 3.872849172610186*^9, {
   3.8728496660995417`*^9, 3.872849674742256*^9}, 3.872851667305009*^9, 
   3.8738798101678123`*^9, 3.8738901787352123`*^9},
 CellLabel->
  "Out[514]=",ExpressionUUID->"dfe0256e-08df-4cb1-be32-efa35381727c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["r"], "Input",
 CellChangeTimes->{3.85883407240149*^9},
 CellLabel->
  "In[515]:=",ExpressionUUID->"239087ef-ad3a-403b-a71f-bf44e672be58"],

Cell[BoxData["r"], "Output",
 CellChangeTimes->{3.8728496751218977`*^9, 3.872851667749762*^9, 
  3.873879810540399*^9, 3.873890178822266*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"e84db87a-c056-43fd-8d49-51a18680b7d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "rloc", "]"}], ",", " ", 
      RowBox[{"Flatten", "[", "rlocRas", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<rloc unperturbed\>\"", ",", " ", "\"\<rloc RAS mutant\>\""}], " ", 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.858834050817049*^9, 3.858834068186494*^9}, {
  3.858834144052763*^9, 3.858834228078637*^9}, {3.872848738294608*^9, 
  3.8728487403110733`*^9}, {3.87284939807216*^9, 3.872849398406444*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"0dadada1-973c-4675-9feb-0f5c92094d96"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1:eJxTTMoPSmViYGCoBGIQDQEf9qPS5IPDDllJcZdf7v/UIfrh8qR3FJuHDmSS
1j759++9PXd9vcW65+/tIaLUcz+twRdpV90trB/sj5dqnnza+IHq7t/pEW07
q+XmfqcDqwxE5G9TPTzc2Ju+swVus699dPnZif+X6R7+7pM6WaQt39r7erNE
ioo8sydV/1SGiXKXd7+3L22P0jki+G7IpZ9Pzy2WGc99Z3/MYhvn9p4XdHe/
rOfNm05S6vYLhX5v87ieT3L4YwdDJ/w/z+K4kRx50167zOGnrefNIZd+sIOh
4/7g7Qc8D/16bw+jIaLEu/9vVtEBNvuj9okavRf6fd5SKf0SD6TCDzoZlr22
X7ZGMe+Q+ykM9wMA04iRGw==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"rloc RAS mutant\"", TraditionalForm], None}, {
     FormBox["\"rloc unperturbed\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.0013925331456877`}, {-1., 1.0317132814301304`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.858834068719397*^9, 3.858834092308823*^9}, 
   3.858834147429008*^9, {3.858834183291819*^9, 3.858834228528819*^9}, 
   3.872849181104488*^9, 3.8728496752492743`*^9, 3.8728516678208237`*^9, 
   3.873879810627799*^9, 3.8738901788619547`*^9},
 CellLabel->
  "Out[516]=",ExpressionUUID->"0e62d7fa-fb91-44ce-8e91-0c1d9c200667"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.858834032993826*^9, 3.858834047421773*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"adcf780a-5da5-456a-9176-21e0b6be266e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sRasDS", " ", "=", " ", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToString", "/@", 
             RowBox[{"vars", "\[LeftDoubleBracket]", 
              RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ",", " ", 
            RowBox[{"\"\<Active\>\"", "\[Rule]", "  ", "\"\<\>\""}]}], "]"}], 
          ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"Length", "[", 
         RowBox[{"vars", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], "]"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"si", "[", 
          RowBox[{"sys", ",", " ", "parsRAS", ",", " ", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/stot-ras-true.tsv\>\"", ",", 
   "\[IndentingNewLine]", "sRasDS"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.855394232944809*^9, {3.872848747000895*^9, 3.872848755902426*^9}, {
   3.8728493615786457`*^9, 3.872849364675473*^9}, {3.872849436352021*^9, 
   3.872849437959725*^9}},
 CellLabel->
  "In[518]:=",ExpressionUUID->"d55d7eaa-e203-41a8-aa19-2a1987a66ea1"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 518, 48, 19523447014334880740, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873879810875876*^9, 3.873890179103918*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"49730ae7-5538-4301-ad24-5a510f518e4b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Sos" -> <|
        "Sos" -> 0.9808051361995089, "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Ras" -> <|
        "Sos" -> 0., "Ras" -> 0.2376964226130205, "Raf1" -> 0., "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Raf1" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0.3532512328244826, "Mek" -> 0., 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Mek" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0.9002222801465675, 
         "Erk" -> 0., "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., 
         "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Erk" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 
         0.6927481322095572, "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "P90Rsk" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0.9193403146730775, "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "PI3K" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0.9843101444345193, "Akt" -> 0., "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Akt" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0.974274245575161, "C3G" -> 
         0., "Rap1" -> 0., "bRaf" -> 0.|>, 
       "C3G" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 
         0.9814683181427526, "Rap1" -> 0., "bRaf" -> 0.|>, 
       "Rap1" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., "Rap1" -> 
         0.23198446799693204`, "bRaf" -> 0.|>, 
       "bRaf" -> <|
        "Sos" -> 0., "Ras" -> 0., "Raf1" -> 0., "Mek" -> 0., "Erk" -> 0., 
         "P90Rsk" -> 0., "PI3K" -> 0., "Akt" -> 0., "C3G" -> 0., "Rap1" -> 0.,
          "bRaf" -> 0.38417790709579563`|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "Sos"} -> 
        1, {All, "Ras"} -> 1, {All, "Raf1"} -> 1, {All, "Mek"} -> 
        1, {All, "Erk"} -> 1, {All, "P90Rsk"} -> 1, {All, "PI3K"} -> 
        1, {All, "Akt"} -> 1, {All, "C3G"} -> 1, {All, "Rap1"} -> 
        1, {All, "bRaf"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Sos" -> TypeSystem`PackageScope`AtomShape[60], "Ras" -> 
             TypeSystem`PackageScope`AtomShape[60], "Raf1" -> 
             TypeSystem`PackageScope`AtomShape[60], "Mek" -> 
             TypeSystem`PackageScope`AtomShape[60], "Erk" -> 
             TypeSystem`PackageScope`AtomShape[60], "P90Rsk" -> 
             TypeSystem`PackageScope`AtomShape[60], "PI3K" -> 
             TypeSystem`PackageScope`AtomShape[60], "Akt" -> 
             TypeSystem`PackageScope`AtomShape[60], "C3G" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rap1" -> 
             TypeSystem`PackageScope`AtomShape[60], "bRaf" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 11, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Sos", "Ras", "Raf1", "Mek", "Erk", "P90Rsk", "PI3K", "Akt", "C3G", 
         "Rap1", "bRaf"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 11], "Path" -> {}, "DisplayedRowCount" -> 
     11, "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, 
     "DataColumnCount" -> 11, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sos"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sos"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Ras"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Ras"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Raf1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Raf1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mek"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mek"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Erk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Erk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "P90Rsk"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "P90Rsk"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PI3K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PI3K"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Akt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Akt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C3G"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C3G"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rap1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rap1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sos", 
                  Style[
                  "Sos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.980805"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sos"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ras", 
                  Style[
                  "Ras", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ras"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.237696"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ras"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raf1", 
                  Style[
                  "Raf1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raf1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.353251"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raf1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mek", 
                  Style[
                  "Mek", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mek"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.900222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mek"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Erk", 
                  Style[
                  "Erk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Erk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.692748"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Erk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["P90Rsk", 
                  Style[
                  "P90Rsk", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["P90Rsk"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.91934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["P90Rsk"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PI3K", 
                  Style[
                  "PI3K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PI3K"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.98431"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PI3K"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Akt", 
                  Style[
                  "Akt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Akt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.974274"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Akt"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C3G", 
                  Style[
                  "C3G", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C3G"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.981468"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["C3G"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rap1", 
                  Style[
                  "Rap1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Rap1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.231984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Rap1"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["bRaf", 
                  Style[
                  "bRaf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["bRaf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Sos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Ras"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Raf1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Mek"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Erk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["P90Rsk"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["PI3K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Akt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["C3G"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["bRaf"], 
                 Key["Rap1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{758., {189.134033203125, 194.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{758., {189.134033203125, 194.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.855394233879134*^9, 3.855916253016868*^9, 
  3.856605027430077*^9, 3.872849191453196*^9, 3.8728496756173077`*^9, 
  3.872851668209016*^9, 3.87387981095231*^9, 3.87389017918476*^9},
 CellLabel->
  "Out[518]=",ExpressionUUID->"719676ec-ce71-4fa3-9b19-402fcb365f82"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/stot-ras-true.tsv\"\>"], \
"Output",
 CellChangeTimes->{3.855394233879134*^9, 3.855916253016868*^9, 
  3.856605027430077*^9, 3.872849191453196*^9, 3.8728496756173077`*^9, 
  3.872851668209016*^9, 3.87387981095231*^9, 3.873890179502368*^9},
 CellLabel->
  "Out[519]=",ExpressionUUID->"665fdf4c-eddc-4a9b-ad97-b741491493d5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate the RAS mutant population", "Subsubsection",
 CellChangeTimes->{{3.806394654022737*^9, 3.806394672601839*^9}, {
  3.872848570506106*^9, 
  3.872848570609654*^9}},ExpressionUUID->"07093239-e765-48b9-a074-\
e259380bf1f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"popRas", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRAS", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "10000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.805536818912614*^9, 3.8055368262913218`*^9}, 
   3.85660503196642*^9, {3.872848873075007*^9, 3.8728488784902287`*^9}, 
   3.872849446939892*^9},
 CellLabel->
  "In[520]:=",ExpressionUUID->"104e9ea8-9c44-4231-a6a7-ffe6491bd16e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"populationRas", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", "popRas"}], "//",
     "Quiet"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.805536872093893*^9, 3.805536872373172*^9}, {
  3.805536913449567*^9, 3.805536913742216*^9}, {3.8063946331224833`*^9, 
  3.806394637674746*^9}, {3.872848859315086*^9, 3.872848869529244*^9}},
 CellLabel->
  "In[521]:=",ExpressionUUID->"92157d5d-2c7a-4aa7-93cd-9a821403e9c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfRas", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRas"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-RASmut.\
tsv\>\"", ",", "dfRas"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8055369002596188`*^9, 3.8055369235640697`*^9}, {
  3.806396287898901*^9, 3.8063962882783747`*^9}, {3.855394282346374*^9, 
  3.8553942874970284`*^9}, {3.872848864938684*^9, 3.872848884986384*^9}, {
  3.872848968468239*^9, 3.872848970691695*^9}, {3.872849289766182*^9, 
  3.872849293103134*^9}, {3.8738893243146057`*^9, 3.873889324936205*^9}},
 CellLabel->
  "In[522]:=",ExpressionUUID->"1f43c366-d076-477e-a4e1-0ddd355bc0ef"],

Cell[BoxData["\<\"results/orton-bmcsysbio-2009/simulations/steady-state-sigma=\
0.1-RASmut.tsv\"\>"], "Output",
 CellChangeTimes->{3.805536933815209*^9, 3.806394442438147*^9, 
  3.806396314905242*^9, 3.85539431383175*^9, 3.856605234206653*^9, 
  3.8728492126476793`*^9, 3.872849296353277*^9, 3.872849663343717*^9, 
  3.872849889668972*^9, 3.873879999987908*^9, 3.8738904110951567`*^9},
 CellLabel->
  "Out[523]=",ExpressionUUID->"92fdc193-1135-46b5-beab-1f434957305c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate the RAS mutant population with Inhibitors", "Subsubsection",
 CellChangeTimes->{{3.806394654022737*^9, 3.806394699812145*^9}, 
   3.806395038427825*^9, {3.855394344898385*^9, 3.855394347858378*^9}, {
   3.872848572746725*^9, 
   3.8728485728739433`*^9}},ExpressionUUID->"34afc081-50b7-459a-9df2-\
4805c3ae0dd3"],

Cell[TextData[StyleBox["",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8553943518585052`*^9, 3.8553943832032557`*^9}, 
   3.873889889852992*^9},ExpressionUUID->"22e9eab6-5157-4ace-9891-\
549cd788db7c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.806394964091214*^9, 3.806394978518753*^9}, {
   3.8559161761132927`*^9, 3.8559161766982327`*^9}, {3.8559162696331244`*^9, 
   3.855916269769703*^9}, {3.8559165058463993`*^9, 3.8559165512738237`*^9}, 
   3.8559166027650623`*^9, 3.8566047569461937`*^9, {3.870354245173346*^9, 
   3.870354245863205*^9}, {3.872848635383576*^9, 3.872848643374591*^9}, {
   3.872848892510951*^9, 3.872848945013768*^9}, {3.873889892061081*^9, 
   3.873889896524049*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"1c17fb27-1f32-47d1-9b56-51f09cee661e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.873889898844069*^9, 3.873889902015484*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"c52cf981-fa94-44ec-92ef-9e0f16af0074"],

Cell[TextData[StyleBox["RAS Inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8559161834034777`*^9, 
  3.855916192706253*^9}},ExpressionUUID->"c23655e1-02da-4e36-928d-\
9edc38682c01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasRasi", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction3Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"vars", "\[Rule]", 
    RowBox[{"Log2", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vars", "/.", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", " ", "parsRasRasi"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"vars", "/.", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasRasi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasRasi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRasRasi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRasRasi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasRasi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Rasi.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8063950354509706`*^9, 3.806395074131691*^9}, {
   3.855394405190608*^9, 3.855394416605527*^9}, {3.85591645196957*^9, 
   3.855916469082217*^9}, {3.855916573547298*^9, 3.855916598962418*^9}, 
   3.856604759402844*^9, {3.8566053914386463`*^9, 3.856605392548016*^9}, 
   3.870354249813944*^9, {3.872849792794043*^9, 3.8728498066739807`*^9}, {
   3.872851264912959*^9, 3.872851291697978*^9}, 3.8728515639796753`*^9, 
   3.873889770992128*^9, 3.873889918896181*^9},
 CellLabel->
  "In[526]:=",ExpressionUUID->"5efef59b-e9fa-4149-9b02-67aee02f65a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.16459799749608486`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.24975958086162844`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.25689180757786584`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.23410171375817881`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.22114769091999975`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.1727557636963936`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.0008946635995042892`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.0003535495261485288`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "6.406853007629834`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.22313349943697183`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8553944214832973`*^9, 3.855916282227358*^9, 3.8559164856758223`*^9, {
   3.855916578859078*^9, 3.8559165876512136`*^9}, 3.8566052717643747`*^9, 
   3.8566054326957903`*^9, 3.8738800398859367`*^9, 3.8738904112139797`*^9},
 CellLabel->
  "Out[527]=",ExpressionUUID->"156b28e7-893d-4538-9f94-6aa3f3fbe70b"]
}, Open  ]],

Cell[TextData[StyleBox["Sos inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.85479145257563*^9, 
  3.854791463342978*^9}},ExpressionUUID->"76946b80-a6ae-48cf-9275-\
5e7e81f65a2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasSosi", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction1Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasSosi"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasSosi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasSosi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRasSosi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRasSosi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasSosi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Sosi.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.854791442674402*^9, 3.854791442998208*^9}, {
   3.8547915547752934`*^9, 3.854791567484654*^9}, {3.855916335489736*^9, 
   3.8559163582936697`*^9}, {3.8559163998958473`*^9, 3.855916400300241*^9}, {
   3.855916741855133*^9, 3.855916741992611*^9}, 3.856604763984522*^9, {
   3.856605340942487*^9, 3.856605343246015*^9}, 3.870354252535709*^9, {
   3.872849811336873*^9, 3.872849820594275*^9}, {3.872851302706317*^9, 
   3.872851316339336*^9}, 3.872851562499523*^9, {3.873882745533826*^9, 
   3.8738827483338346`*^9}, 3.873889773869516*^9, 3.873889926782968*^9},
 CellLabel->
  "In[532]:=",ExpressionUUID->"8a13202d-b3d1-4bdb-9750-d15b533cc916"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", 
    RowBox[{"-", "0.2502357204193242`"}]}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.24955630421762326`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.2566832074445055`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.23391454783410012`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.22097000249792006`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.17261454905836932`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.0008939941595312978`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.00035328492583069655`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.22295638310305912`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.854791568992671*^9, 3.855390767237349*^9, {3.855916391145156*^9, 
   3.8559164008666477`*^9}, 3.8559167473559723`*^9, 3.856605315110261*^9, 
   3.856605477694738*^9, 3.873880079646111*^9, 3.8738904534254704`*^9},
 CellLabel->
  "Out[533]=",ExpressionUUID->"08d82280-8058-45d4-a29f-56878f720d54"]
}, Open  ]],

Cell[TextData[StyleBox["Raf1 inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.855916768067503*^9, 
  3.855916773478572*^9}},ExpressionUUID->"8a4f4832-6a8c-49ec-b1dd-\
5e743e440b0f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasaf1i", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction5Kcat", ",", " ", 
     RowBox[{"-", ".25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasaf1i"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasRaf1i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasaf1i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRasRaf1i", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRasRaf1i"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasRaf1i"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Raf1i.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.855916798340674*^9, 3.855916887309113*^9}, {
   3.855916919158341*^9, 3.8559169231091843`*^9}, 3.8566047670405703`*^9, {
   3.8566054701317787`*^9, 3.856605473478475*^9}, 3.870354255359243*^9, {
   3.8728498286389723`*^9, 3.8728498473631*^9}, {3.872851326770618*^9, 
   3.8728513445736303`*^9}, 3.872851559963398*^9, 3.873889776958379*^9, 
   3.87388994350268*^9},
 CellLabel->
  "In[538]:=",ExpressionUUID->"1a8586e6-2cca-4892-ad17-eae0ec8f4514"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.050352632690791446`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.05020038321823042`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", 
    RowBox[{"-", "0.3751079001919966`"}]}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.07262264842328633`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.06835852074417224`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.05274532960029082`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00019839339587771009`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.00007838082149511699`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.04618901990743883`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855916928497978*^9, 3.856605357043082*^9, 
  3.856605518867835*^9, 3.87388011944564*^9, 3.8738904966559877`*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"d33ba154-9d19-4c7e-bb24-f57d0a284c25"]
}, Open  ]],

Cell[TextData[StyleBox["Mek inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.855916679731929*^9},ExpressionUUID->"fa11c8ce-36e9-4938-aa80-\
2814d514be17"],

Cell["\<\
Mek is activated by both Raf1 (reaction 7) and bRaf (reaction 27),so we need \
to reduce both kcats.\
\>", "Text",
 CellChangeTimes->{
  3.855389812565415*^9},ExpressionUUID->"f7cd3c68-03bc-430d-b783-\
e28abb18ddca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasMeki", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction7Kcat", ",", " ", "reaction27kcat"}], "}"}], ",", " ", 
     
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasMeki"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasMeki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasMeki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRasMeki", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popRasMeki"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasMeki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Meki.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.855389215736013*^9, 3.855389295238365*^9}, {
   3.8553893569240913`*^9, 3.855389370872231*^9}, {3.855389409783628*^9, 
   3.855389495656188*^9}, {3.855389532183825*^9, 3.855389566454815*^9}, {
   3.8553896094711733`*^9, 3.855389624885113*^9}, {3.855389685916925*^9, 
   3.855389699688253*^9}, {3.855389796546981*^9, 3.855389814708454*^9}, {
   3.8559166966187773`*^9, 3.855916698351169*^9}, {3.855916955861102*^9, 
   3.8559169885241823`*^9}, 3.856604770349285*^9, 3.8703542591625853`*^9, {
   3.872849851714038*^9, 3.872849858891138*^9}, {3.872851358339848*^9, 
   3.872851375269998*^9}, 3.872851558115425*^9, 3.873889779629603*^9, 
   3.8738899619035177`*^9},
 CellLabel->
  "In[544]:=",ExpressionUUID->"2207952f-6935-450c-b121-1a0c4caeec62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.174570320745036`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.1740177199217436`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.17975701262343133`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.24799895694272317`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.2343449038705073`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.18325446634278839`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.0007167467023315227`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.00028313733079613705`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "0.`"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.16205553705217812`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.855389427782592*^9, {3.8553894644679623`*^9, 3.85538948340195*^9}, {
   3.855389533144988*^9, 3.8553895675819283`*^9}, {3.855389614517271*^9, 
   3.855389625598071*^9}, 3.855389700952539*^9, 3.855389815187583*^9, 
   3.855390787181408*^9, 3.855916991148444*^9, 3.8566053956176243`*^9, 
   3.873880158935102*^9, 3.873890537632194*^9},
 CellLabel->
  "Out[545]=",ExpressionUUID->"bdd98895-ad28-4ed0-a2c0-752aa1538a78"]
}, Open  ]],

Cell[TextData[StyleBox["Erk inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856605105570888*^9, 
  3.856605113147437*^9}},ExpressionUUID->"fc34a8a1-3103-4626-a11d-\
8c065f605742"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasErki", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction9Kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasErki"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasErki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasErki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRasErki", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popRasErki"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasErki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Erki.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.85660514283215*^9, 3.856605168963479*^9}, {
   3.85660523144774*^9, 3.856605253509123*^9}, 3.856607145311761*^9, {
   3.8566074800884333`*^9, 3.856607485117146*^9}, 3.870354261461327*^9, {
   3.872849862402914*^9, 3.872849873500062*^9}, {3.8728513819244137`*^9, 
   3.872851406926132*^9}, 3.872851555560733*^9, 3.873889782269947*^9, 
   3.8738899725611763`*^9},
 CellLabel->
  "In[550]:=",ExpressionUUID->"a3b72348-8dcf-429c-9edb-2678e379dd5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.17415220099671647`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.1736010095300717`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.179325729683062`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.16762062790369525`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.23379199371528403`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.18281419950162522`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.0007149303640418128`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.00028241993705152606`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.16166091287300116`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856607485799061*^9, 3.873880198684474*^9, 
  3.873890581760933*^9},
 CellLabel->
  "Out[551]=",ExpressionUUID->"2de3d7ba-cd13-479b-9f43-d5a4474b5823"]
}, Open  ]],

Cell[TextData[StyleBox["p90 inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856605516706634*^9, 
  3.856605523255095*^9}},ExpressionUUID->"540445b0-9cc2-437a-a27d-\
321fb7ddf29e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasp90Rski", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction11Kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasp90Rski"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasp90Rski", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasp90Rski", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRasp90Rski", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popRasp90Rski"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasp90Rski"}], ")"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-p90Rski.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856605532625456*^9, 3.856605611664048*^9}, 
   3.856607141075502*^9, 3.870354265617528*^9, {3.872849879283168*^9, 
   3.872849888396455*^9}, {3.872851412117491*^9, 3.872851426127404*^9}, 
   3.872851554259427*^9, 3.873889785230955*^9, 3.87388999668847*^9},
 CellLabel->
  "In[556]:=",ExpressionUUID->"49abfbf3-f4ee-4eb8-aa1f-665db2b23f9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.18510024835351063`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.18451201197017159`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.1906196612744146`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.17829166758172268`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.1667801838281371`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.1943443814713012`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.0007626531263864527`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.0003012686581831075`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.17200409131083247`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.85660559895737*^9, 3.856607207913753*^9, 
  3.873880239092279*^9, 3.8738906211981173`*^9},
 CellLabel->
  "Out[557]=",ExpressionUUID->"c6d1b398-7053-4b5d-9155-72277865dfa2"]
}, Open  ]],

Cell[TextData[StyleBox["PI3K inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8566059579901323`*^9, 
  3.856605963210279*^9}},ExpressionUUID->"e0ac1da9-2ee8-47f6-b31e-\
2ae662e15b74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasPI3Ki", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction13Kcat", ",", " ", "reaction14Kcat"}], "}"}], ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasPI3Ki"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasPI3Ki", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasPI3Ki", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRasPI3Ki", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popRasPI3Ki"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasPI3Ki"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-PI3Ki.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856605970516412*^9, 3.85660601649296*^9}, 
   3.856607136969934*^9, 3.8703542686904497`*^9, {3.872849893195237*^9, 
   3.872849901918664*^9}, {3.8728514316859837`*^9, 3.872851454391958*^9}, 
   3.872851552147254*^9, {3.8738900117117767`*^9, 3.873890015823559*^9}},
 CellLabel->
  "In[562]:=",ExpressionUUID->"48720a85-dcda-484d-966c-0f341fd1eeca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.23813087847286216`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.2373589448755802`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.2587623700494398`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.23445481024279033`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.21898464838216147`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", "0.16477585410010812`"}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.07725677997665995`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.031062069665843118`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "6.406853007629834`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", "0.22241009945643966`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856606018426796*^9, 3.856607173254949*^9, 
  3.8738802776330357`*^9, 3.873890659339301*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"70edf6cb-1fb5-42b0-8b75-ecce917ae75b"]
}, Open  ]],

Cell[TextData[StyleBox["Akt inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856606708865156*^9, 
  3.856606715258945*^9}},ExpressionUUID->"dd39eccd-583a-479f-acdf-\
d70aab68fe91"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasAkti", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction17Kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasAkti"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasAkti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasAkti", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationRasAkti", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
    "popRasAkti"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasAkti"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Akti.tsv\>\"", ",", "df"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856606724132073*^9, 3.856606728577445*^9}, {
   3.856606867041391*^9, 3.856606895652705*^9}, 3.85660713335814*^9, 
   3.870354271621909*^9, {3.8728499167895823`*^9, 3.872849925045685*^9}, {
   3.872851458910433*^9, 3.872851474305011*^9}, 3.872851550971156*^9, 
   3.873889788958613*^9, 3.873890033616728*^9},
 CellLabel->
  "In[568]:=",ExpressionUUID->"19b91a7d-b2e1-49b0-95da-354828204d48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", 
    RowBox[{"-", "0.009722262921085393`"}]}], ",", 
   RowBox[{"RasActive", "\[Rule]", 
    RowBox[{"-", "0.0096935022936389`"}]}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.06354990985136093`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", "0.014134253900707525`"}], ",", 
   RowBox[{"ErkActive", "\[Rule]", "0.013276973762359883`"}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", "0.010174263442195294`"}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", 
    RowBox[{"-", "0.00003755654078605636`"}]}], ",", 
   RowBox[{"AktActive", "\[Rule]", 
    RowBox[{"-", "0.1797678605429334`"}]}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "6.406853007629834`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.008866928953830068`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.856606899819615*^9, 3.856607133972495*^9, 
  3.873880315532299*^9, 3.873890697647028*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"6c66b3a4-b153-437d-a456-3d1d84907987"]
}, Open  ]],

Cell[TextData[StyleBox["C3G inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856606928510048*^9, 3.85660693708611*^9}},
 FontWeight->"Plain",ExpressionUUID->"bf1aab5e-a853-401e-a306-3dbacba50fce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasC3Gi", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction21kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasC3Gi"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasC3Gi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasC3Gi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRasC3Gi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRasC3Gi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasC3Gi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-C3Gi.tsv\>\"", ",", "df"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.856605650914042*^9, 3.856605651110766*^9}, {
   3.856605718818692*^9, 3.856605719091151*^9}, {3.856605947442759*^9, 
   3.8566059527768784`*^9}, {3.8566067191912403`*^9, 
   3.8566067206275663`*^9}, {3.8566069418007383`*^9, 3.8566070034015417`*^9}, 
   3.8566070742694387`*^9, {3.8566071207723923`*^9, 3.856607156585929*^9}, 
   3.856607387643003*^9, {3.856607611405005*^9, 3.856607611826476*^9}, 
   3.8566077092751913`*^9, {3.8566077436842957`*^9, 3.8566077712051573`*^9}, {
   3.8566078483102818`*^9, 3.856607877950519*^9}, {3.856608067752399*^9, 
   3.856608069585573*^9}, 3.8703542742359962`*^9, {3.8728499328446493`*^9, 
   3.872849946479388*^9}, {3.872851479623241*^9, 3.872851493361731*^9}, 
   3.872851548523138*^9, 3.873889791357398*^9, 3.873890064321061*^9},
 CellLabel->
  "In[574]:=",ExpressionUUID->"b2c4880e-76cd-4cdf-8c4f-62c173b2cfc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "9.61027951144475`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "6.406853007629834`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.02095121072247649`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.020888537515085542`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.021542034831848574`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.03033376543073466`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.02852437961782372`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.021936169398019217`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00008175348002336309`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.000032299839321947146`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", 
    RowBox[{"-", "0.40726225202095667`"}]}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "0.4070355453139649`"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.05434900618549593`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856607612575294*^9, {3.856607699217852*^9, 3.856607710190269*^9}, 
   3.856607775669684*^9, 3.856607850351481*^9, 3.8566081430526876`*^9, 
   3.873880355780974*^9, 3.873890736496464*^9},
 CellLabel->
  "Out[575]=",ExpressionUUID->"a7848311-47ba-4b70-a1b0-d049b91543ea"]
}, Open  ]],

Cell[TextData[StyleBox["Rap1 inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856607354745454*^9, 
  3.856607361925695*^9}},ExpressionUUID->"a2012384-0cb3-48a3-b320-\
0c971d2b5637"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasRap1i", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", "reaction23kcat", ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasRap1i"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasRap1i", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasRap1i", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRasRap1i", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRasRap1i"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasRap1i"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-Rap1i.tsv\>\"", ",", "df"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.856607367440412*^9, 3.856607374192069*^9}, {
   3.856607404892475*^9, 3.856607433078891*^9}, {3.856607870405488*^9, 
   3.856607884059362*^9}, {3.856608060510192*^9, 3.8566080626489563`*^9}, 
   3.87035427706923*^9, {3.8728499548797483`*^9, 3.872849962783597*^9}, {
   3.872851501087613*^9, 3.8728515158180656`*^9}, 3.872851547187011*^9, 
   3.873889793676094*^9, 3.873890065871852*^9},
 CellLabel->
  "In[580]:=",ExpressionUUID->"c7a39fe7-64bf-410e-a32f-f97d7c95936b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "0.`"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.021297234602746382`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.0212335182730321`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.021897886698647385`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.030833336888504547`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.02899449555908904`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.022298586649487456`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.00008311316120235102`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.00003283702323088236`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "0.`"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", 
    RowBox[{"-", "0.414807061759222`"}]}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.05525535168179233`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.856607439306748*^9, 3.856607904417766*^9, 
  3.856608096231311*^9, 3.8738803980299883`*^9, 3.873890775348083*^9},
 CellLabel->
  "Out[581]=",ExpressionUUID->"a2b2a61e-d28c-4514-a841-913d597fc077"]
}, Open  ]],

Cell[TextData[StyleBox["Braf inhibition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.856607167093768*^9, 
  3.856607172260557*^9}},ExpressionUUID->"9e2dca6a-25f0-403d-b852-\
099b3c3325f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsRasbRafi", " ", "=", 
   RowBox[{"perturbPar", "[", 
    RowBox[{"parsRAS", ",", " ", 
     RowBox[{"{", 
      RowBox[{"reaction25kcat", ",", " ", "reaction30kcat"}], "}"}], ",", " ", 
     RowBox[{"-", "0.25"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"vars", "\[Rule]", 
   RowBox[{"Log2", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRasbRafi"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"vars", "/.", 
       RowBox[{"ss", "[", 
        RowBox[{"sys", ",", " ", "parsRAS"}], "]"}]}], ")"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popRasbRafi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"generateStochasticProteinAmounts", "[", 
      RowBox[{"parsRasbRafi", ",", " ", "0", ",", " ", ".1"}], "]"}], ",", 
     "2000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populationRasbRafi", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ss", "[", 
         RowBox[{"sys", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
     "popRasbRafi"}]}], ";"}], "//", "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
          "totalProteins"}], "]"}], "/.", "populationRasbRafi"}], ")"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"vars", "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;"}], "\[RightDoubleBracket]"}], ",", 
        "totalProteins"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/orton-bmcsysbio-2009/simulations/steady-state-sigma=0.1-\
RASmut-bRafi.tsv\>\"", ",", "df"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8566071632310247`*^9, 3.856607238574957*^9}, 
   3.8566073238796387`*^9, {3.856608032386874*^9, 3.856608051458823*^9}, 
   3.8703542814837227`*^9, {3.872849966695245*^9, 3.872849991919682*^9}, {
   3.872851520440336*^9, 3.872851543088479*^9}, 3.8738897956354933`*^9, 
   3.873890068240028*^9},
 CellLabel->
  "In[586]:=",ExpressionUUID->"95bbe3fd-4b48-4b68-86e8-37ae31eb0123"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"boundEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"freeEGFReceptor", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"SosActive", "\[Rule]", "0.12604350780081616`"}], ",", 
   RowBox[{"RasActive", "\[Rule]", "0.12565163716194477`"}], ",", 
   RowBox[{"Raf1Active", "\[Rule]", "0.12972686520587412`"}], ",", 
   RowBox[{"MekActive", "\[Rule]", 
    RowBox[{"-", "0.1800855709773907`"}]}], ",", 
   RowBox[{"ErkActive", "\[Rule]", 
    RowBox[{"-", "0.169922443350775`"}]}], ",", 
   RowBox[{"P90RskActive", "\[Rule]", 
    RowBox[{"-", "0.13220185782664212`"}]}], ",", 
   RowBox[{"PI3KActive", "\[Rule]", "0.0005092199335992035`"}], ",", 
   RowBox[{"AktActive", "\[Rule]", "0.00020116726549341868`"}], ",", 
   RowBox[{"C3GActive", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"Rap1Active", "\[Rule]", "3.203426503814917`*^-16"}], ",", 
   RowBox[{"bRafActive", "\[Rule]", 
    RowBox[{"-", "0.3450932944410414`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856607292291016*^9, 3.856607325312992*^9, {3.856608033266902*^9, 
   3.8566080530414*^9}, 3.873880439889902*^9, 3.873890814546732*^9},
 CellLabel->
  "Out[587]=",ExpressionUUID->"8ede5b72-85e3-424c-8d41-0293e2350e00"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1524, 979},
WindowMargins->{{34, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b41b0894-200a-48fc-894f-3c758fe8cdc3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2007, 34, 136, "Input",ExpressionUUID->"a53e8fb2-b43f-4a72-bdd3-af2ff5780968"],
Cell[CellGroupData[{
Cell[2590, 58, 163, 3, 67, "Section",ExpressionUUID->"81977dc5-1250-4cb9-92f9-69081d5b42f1"],
Cell[2756, 63, 453, 9, 52, "Input",ExpressionUUID->"22cba57e-5028-4056-92e4-b7c7a510f4da"],
Cell[3212, 74, 27313, 647, 3139, "Input",ExpressionUUID->"d7a6ecc5-109f-4e34-a318-2e4a1f6cd4b6"],
Cell[CellGroupData[{
Cell[30550, 725, 280, 6, 30, "Input",ExpressionUUID->"be5e864e-4740-4e25-adcf-24f4f65d28fe"],
Cell[30833, 733, 940, 17, 34, "Output",ExpressionUUID->"9c10d157-f5b1-4675-a37e-aad5ff6ff79f"]
}, Open  ]],
Cell[31788, 753, 436, 11, 30, "Input",ExpressionUUID->"1aa3da3e-94d8-4bd9-84be-4ec7e4097c84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32261, 769, 154, 3, 67, "Section",ExpressionUUID->"daf320ca-eeb2-4721-a6ea-65eaf7a63be0"],
Cell[CellGroupData[{
Cell[32440, 776, 190, 3, 54, "Subsection",ExpressionUUID->"65c9bd97-da81-4c7e-bba0-93b2c86d59f6"],
Cell[32633, 781, 466, 11, 73, "Input",ExpressionUUID->"4d940341-b63d-46b8-a330-7e370aee995f"],
Cell[CellGroupData[{
Cell[33124, 796, 2005, 40, 157, "Input",ExpressionUUID->"0ddef444-feb5-438d-a8df-a5a101c04e5f"],
Cell[35132, 838, 3130, 45, 70, "Output",ExpressionUUID->"7559d7ed-c5ed-4295-8fe8-dca552519a74"]
}, Open  ]],
Cell[38277, 886, 830, 21, 52, "Input",ExpressionUUID->"8e703ca8-a3e2-4b7f-950e-a25cc823c111"],
Cell[CellGroupData[{
Cell[39132, 911, 3812, 79, 346, "Input",ExpressionUUID->"c545e61d-526c-40c8-8857-27297e308b74"],
Cell[42947, 992, 3415, 49, 70, "Output",ExpressionUUID->"8bbd82a4-ad6e-4c58-868e-ba2e4c149820"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46411, 1047, 178, 3, 54, "Subsection",ExpressionUUID->"dfec77a8-ed1e-45ca-862f-46b934e65828"],
Cell[46592, 1052, 4479, 100, 408, "Input",ExpressionUUID->"689dd2fc-d2bf-42af-92d0-fe9fe1a43a5f"],
Cell[51074, 1154, 4688, 115, 493, "Input",ExpressionUUID->"f28fef82-e595-4148-900b-582e1f6bcff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55799, 1274, 169, 3, 54, "Subsection",ExpressionUUID->"98c1e72b-ca77-427c-9119-17f7a6e53f0e"],
Cell[CellGroupData[{
Cell[55993, 1281, 1341, 32, 115, "Input",ExpressionUUID->"721fcabb-071b-4123-a443-53689f0228e5"],
Cell[57337, 1315, 2599, 37, 70, "Output",ExpressionUUID->"1f80567d-3981-4062-ae3a-ac294188c202"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59973, 1357, 1216, 32, 52, "Input",ExpressionUUID->"89070ae3-6bbf-4a33-9f33-9153df014b24"],
Cell[61192, 1391, 1271, 19, 70, "Output",ExpressionUUID->"07a87382-a69e-4e21-adff-aa3ef464fd70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62500, 1415, 1066, 25, 73, "Input",ExpressionUUID->"9650946d-9a2d-4249-87a7-49d1526de989"],
Cell[63569, 1442, 720, 11, 70, "Output",ExpressionUUID->"1758e228-7991-44bc-92e2-929465e6985c"]
}, Open  ]],
Cell[64304, 1456, 3596, 92, 472, "Input",ExpressionUUID->"55b5ae0f-c660-4cba-a942-90739eeb2ace"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[67949, 1554, 180, 3, 53, "Section",ExpressionUUID->"b1b9003a-cc49-43bd-b011-7d10c49c5245"],
Cell[CellGroupData[{
Cell[68154, 1561, 164, 3, 54, "Subsection",ExpressionUUID->"7786a800-0401-466b-b972-9bca6efddee6"],
Cell[CellGroupData[{
Cell[68343, 1568, 1494, 35, 157, "Input",ExpressionUUID->"cca4dad6-73b7-4497-90b1-10d5ff46002d"],
Cell[69840, 1605, 112558, 2046, 150, "Output",ExpressionUUID->"6a6067ab-cad9-4702-9f96-1cbd42cb9c06"]
}, Open  ]],
Cell[182413, 3654, 549, 12, 104, "Text",ExpressionUUID->"9df1116f-1d28-498b-9c51-e272ef71ae7d"],
Cell[CellGroupData[{
Cell[182987, 3670, 197, 3, 30, "Input",ExpressionUUID->"f3d0f751-7ba8-4232-a694-dc5806316019"],
Cell[183187, 3675, 1704, 41, 77, "Output",ExpressionUUID->"a5006ecc-7066-4b33-9d9a-7c906a973c24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184928, 3721, 730, 19, 50, "Input",ExpressionUUID->"50d447ea-ad81-4e56-83ec-9f305671fac2"],
Cell[185661, 3742, 1510, 33, 56, "Output",ExpressionUUID->"30b2654a-ded6-4781-b394-98e9201f24f5"]
}, Open  ]],
Cell[187186, 3778, 257, 6, 35, "Text",ExpressionUUID->"ae555601-8a08-432c-8520-feb1f46c7f82"],
Cell[CellGroupData[{
Cell[187468, 3788, 1153, 31, 51, "Input",ExpressionUUID->"25a1af78-4bf0-44eb-a1f7-36050fdd4758"],
Cell[188624, 3821, 1342, 31, 56, "Output",ExpressionUUID->"ea55bf35-5a1c-41ef-b41e-6ecb7d333138"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190015, 3858, 198, 4, 54, "Subsection",ExpressionUUID->"b11acb72-1b4b-45d7-be92-b9082bf9ad49"],
Cell[CellGroupData[{
Cell[190238, 3866, 1189, 31, 54, "Input",ExpressionUUID->"6537e9ba-67c4-4e0f-a852-9ff3303f5c15"],
Cell[191430, 3899, 2547, 53, 212, "Output",ExpressionUUID->"9dd80535-6753-4d37-b5cd-cbe993c9f110"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194014, 3957, 1559, 33, 199, "Input",ExpressionUUID->"3ac8bdd8-c836-484f-bc94-7dd01a0cb239"],
Cell[195576, 3992, 135604, 2748, 403, "Output",ExpressionUUID->"fcc21fbc-daf6-40dc-8364-1c4e26714b4b"],
Cell[331183, 6742, 627, 9, 34, "Output",ExpressionUUID->"0f2ea14a-9675-4275-96de-3e9ff8daa3f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331847, 6756, 2099, 47, 199, "Input",ExpressionUUID->"16368f94-1fa2-46a2-b7cc-29712ad1845a"],
Cell[333949, 6805, 135850, 2750, 403, "Output",ExpressionUUID->"40edfbc4-cf03-4000-8cae-1db5d3a5fe56"],
Cell[469802, 9557, 634, 10, 34, "Output",ExpressionUUID->"fce2aa26-5b8a-48ee-b0a3-a71213164768"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[470485, 9573, 202, 3, 54, "Subsection",ExpressionUUID->"796ee17a-0575-4207-b627-e79682a99425"],
Cell[470690, 9578, 469, 11, 30, "Input",ExpressionUUID->"6798d13e-ad93-4652-9c30-c60b5130c07c"],
Cell[CellGroupData[{
Cell[471184, 9593, 1802, 41, 238, "Input",ExpressionUUID->"653d4040-d3a4-494e-85a1-008851377a34"],
Cell[472989, 9636, 34442, 1003, 70, "Output",ExpressionUUID->"e1ddcd92-786c-4b5b-a9c2-a25a095d9868"],
Cell[507434, 10641, 294, 4, 70, "Output",ExpressionUUID->"6e2271d7-721f-4cd3-a0b8-fbe61abae0c5"]
}, Open  ]],
Cell[507743, 10648, 354, 8, 77, "Text",ExpressionUUID->"1ffabaa0-448e-44c4-800e-d5c059c024fd"],
Cell[508100, 10658, 523, 14, 30, "Input",ExpressionUUID->"127a9214-dd55-4d8f-8de9-ff0832ec13cf"],
Cell[CellGroupData[{
Cell[508648, 10676, 1844, 44, 258, "Input",ExpressionUUID->"c7f452ec-6e46-436f-9cab-8c7bba53147f"],
Cell[510495, 10722, 204681, 3376, 70, "Output",ExpressionUUID->"dae502cf-ed33-40ad-9e92-a2fc0918ad2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715213, 14103, 437, 11, 30, "Input",ExpressionUUID->"b6a4485f-da09-422b-a4bd-658876158b5d"],
Cell[715653, 14116, 263, 4, 70, "Output",ExpressionUUID->"dabb219a-70ab-46d5-88de-7013d04df8a7"]
}, Open  ]],
Cell[715931, 14123, 214, 5, 35, "Text",ExpressionUUID->"57145b2e-bbd5-4e4b-b35e-813869655c81"],
Cell[CellGroupData[{
Cell[716170, 14132, 1698, 42, 258, "Input",ExpressionUUID->"f35f9849-8ff6-481a-b276-175daab6d32b"],
Cell[717871, 14176, 207409, 3421, 70, "Output",ExpressionUUID->"b718e0a8-8bc8-433f-a4cd-35f029f2008b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[925317, 17602, 387, 10, 30, "Input",ExpressionUUID->"7c73fee1-fea8-4e88-974c-a648a46d1719"],
Cell[925707, 17614, 266, 4, 70, "Output",ExpressionUUID->"cfd3b5cc-0726-4738-ac3a-835df57b9b19"]
}, Open  ]],
Cell[925988, 17621, 1342, 32, 157, "Input",ExpressionUUID->"e697323b-0451-410d-bf4d-53cefdfb7754"]
}, Closed]],
Cell[CellGroupData[{
Cell[927367, 17658, 237, 4, 38, "Subsection",ExpressionUUID->"d49b6860-6283-4192-ad9a-9792dbad07ed"],
Cell[927607, 17664, 569, 10, 58, "Text",ExpressionUUID->"ecc89a28-2fe9-41f2-a349-1955263addc1"],
Cell[CellGroupData[{
Cell[928201, 17678, 167, 3, 45, "Subsubsection",ExpressionUUID->"e6d7e0b3-60f5-4215-892f-1ddce310ceef"],
Cell[928371, 17683, 213, 5, 35, "Text",ExpressionUUID->"ccbe69d9-b373-4942-9ff6-8a19be1bd2f2"],
Cell[CellGroupData[{
Cell[928609, 17692, 1299, 33, 73, "Input",ExpressionUUID->"a0f1ace9-bff6-4fed-8fa3-5ef39c37d3ed"],
Cell[929911, 17727, 1626, 32, 56, "Output",ExpressionUUID->"c1acb102-f21f-4c57-8f04-479b9b937758"]
}, Open  ]],
Cell[CellGroupData[{
Cell[931574, 17764, 1770, 46, 159, "Input",ExpressionUUID->"41ec78d9-29c3-48e7-a42a-cb167edca7a4"],
Cell[933347, 17812, 1971, 49, 249, "Output",ExpressionUUID->"dabae6c9-b42e-4cd0-88ae-e65971d1d0cc"]
}, Open  ]],
Cell[935333, 17864, 795, 21, 52, "Input",ExpressionUUID->"b89a4955-9ad5-442b-93e0-f891e3ba2f13"],
Cell[CellGroupData[{
Cell[936153, 17889, 1169, 27, 157, "Input",ExpressionUUID->"02f9dc75-e1f6-48dc-94cb-c26149508b8a"],
Cell[937325, 17918, 263, 3, 34, "Output",ExpressionUUID->"69cae8c7-30d0-4faa-9467-0726fd474814"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[937637, 17927, 216, 4, 45, "Subsubsection",ExpressionUUID->"2f22b345-d4c5-43d4-9395-9981a8c5df39"],
Cell[937856, 17933, 213, 5, 35, "Text",ExpressionUUID->"be793ee0-03fe-48c4-83df-683899c8dbc6"],
Cell[CellGroupData[{
Cell[938094, 17942, 1506, 35, 73, "Input",ExpressionUUID->"5e68b22b-7279-44ee-aedd-337d9e6afd61"],
Cell[939603, 17979, 1449, 26, 56, "Output",ExpressionUUID->"b514432d-522d-4105-8210-cde97fed0d66"]
}, Open  ]],
Cell[941067, 18008, 850, 22, 52, "Input",ExpressionUUID->"5a5da485-664b-462f-9eac-83db2a66b8fb"],
Cell[CellGroupData[{
Cell[941942, 18034, 1768, 45, 159, "Input",ExpressionUUID->"06a10124-58c4-42fc-b509-9de6dee57372"],
Cell[943713, 18081, 1870, 48, 249, "Output",ExpressionUUID->"d0a2b4bd-6d86-40b6-a6fa-83f7834a4b6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[945620, 18134, 1273, 28, 157, "Input",ExpressionUUID->"bf9fe8e6-cc33-4714-82f4-52ea751a329d"],
Cell[946896, 18164, 310, 4, 34, "Output",ExpressionUUID->"612fe5e8-9cfd-400f-8056-4e783eaac097"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[947255, 18174, 164, 3, 45, "Subsubsection",ExpressionUUID->"2587dab7-ec73-486c-a5f2-3f00cdd0b785"],
Cell[CellGroupData[{
Cell[947444, 18181, 1159, 30, 73, "Input",ExpressionUUID->"5de9cb08-62e7-422c-86d0-33eae0305f67"],
Cell[948606, 18213, 1275, 27, 56, "Output",ExpressionUUID->"f3c3f350-c0bb-4298-b710-d0f2656c8fba"]
}, Open  ]],
Cell[949896, 18243, 691, 19, 52, "Input",ExpressionUUID->"4a5f28cb-75f9-4490-a4b5-cacc1ee875d7"],
Cell[CellGroupData[{
Cell[950612, 18266, 1121, 26, 157, "Input",ExpressionUUID->"6077e9cc-b178-4387-9579-a843896247cf"],
Cell[951736, 18294, 312, 4, 34, "Output",ExpressionUUID->"93850ff1-e04b-4f40-bdfa-ced8833fd63f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[952097, 18304, 168, 3, 45, "Subsubsection",ExpressionUUID->"93900cc2-4111-4dc6-bc70-952653269707"],
Cell[CellGroupData[{
Cell[952290, 18311, 1162, 30, 73, "Input",ExpressionUUID->"67297e7a-89cf-4c83-aae3-214e7b490937"],
Cell[953455, 18343, 1293, 26, 60, "Output",ExpressionUUID->"769cb3b4-590a-4efe-8da3-f50fa2d9c538"]
}, Open  ]],
Cell[954763, 18372, 699, 19, 52, "Input",ExpressionUUID->"ac2699ed-a90d-418a-a8ce-4a76811e48e6"],
Cell[CellGroupData[{
Cell[955487, 18395, 1169, 27, 157, "Input",ExpressionUUID->"d64d06ac-3884-4b73-93dd-e5e13e035cd9"],
Cell[956659, 18424, 315, 4, 34, "Output",ExpressionUUID->"cdc2db1f-0dbd-496c-a3d3-c301139de74e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957023, 18434, 169, 3, 45, "Subsubsection",ExpressionUUID->"eeba47c9-6560-4ff0-ac97-6a772d306069"],
Cell[957195, 18439, 249, 6, 35, "Text",ExpressionUUID->"0b46c25c-3955-4535-a13a-21925f3c320f"],
Cell[CellGroupData[{
Cell[957469, 18449, 1569, 40, 73, "Input",ExpressionUUID->"63311ff7-7ff0-4f8f-bef9-6d884bbcae5c"],
Cell[959041, 18491, 1426, 27, 56, "Output",ExpressionUUID->"b19e5a0d-6aab-4c99-84ba-ecd351bab2a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[960504, 18523, 1715, 44, 220, "Input",ExpressionUUID->"cca7c1ce-66f8-438d-beff-169e12847361"],
Cell[962222, 18569, 243, 3, 34, "Output",ExpressionUUID->"6ed24a8e-34a7-4581-ba7e-dd6301ab5ce8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[962514, 18578, 165, 3, 45, "Subsubsection",ExpressionUUID->"d9000377-b5ff-4706-886f-3e4cf9b014df"],
Cell[CellGroupData[{
Cell[962704, 18585, 1187, 31, 73, "Input",ExpressionUUID->"d8723258-9139-467b-9e01-165aa5e748a5"],
Cell[963894, 18618, 1255, 23, 60, "Output",ExpressionUUID->"bc98d480-7ec4-42b6-91bd-51bfab844524"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965186, 18646, 1830, 45, 220, "Input",ExpressionUUID->"474f056a-b836-4c8e-bede-25efc87c133f"],
Cell[967019, 18693, 313, 4, 34, "Output",ExpressionUUID->"de35bb17-6251-4d11-bc97-b7f2e588554e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[967381, 18703, 219, 4, 45, "Subsubsection",ExpressionUUID->"7e80140f-d6f8-4f71-b90c-4d1cde45458c"],
Cell[CellGroupData[{
Cell[967625, 18711, 1173, 31, 73, "Input",ExpressionUUID->"214877d0-449e-47b2-bd47-644570cac179"],
Cell[968801, 18744, 1094, 20, 56, "Output",ExpressionUUID->"1ebd5771-7e5b-490c-a49e-8e4b3f5d0f6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[969932, 18769, 2032, 51, 241, "Input",ExpressionUUID->"0bfea90d-99ed-49c3-9313-d6622b0e2167"],
Cell[971967, 18822, 297, 5, 34, "Output",ExpressionUUID->"2afb896e-6317-494f-8725-887949de355f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[972313, 18833, 192, 4, 45, "Subsubsection",ExpressionUUID->"402f0481-63b3-4619-a136-54a3ad6fc76f"],
Cell[972508, 18839, 257, 6, 35, "Text",ExpressionUUID->"309f7f0b-cfd7-46c0-a46a-82df39942ce2"],
Cell[CellGroupData[{
Cell[972790, 18849, 1451, 39, 94, "Input",ExpressionUUID->"da35af8c-9a10-46a0-a9f4-eb09e96baf1c"],
Cell[974244, 18890, 1157, 23, 60, "Output",ExpressionUUID->"800720f2-86b6-49a7-8a51-9b4b8cd8c7dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975438, 18918, 1992, 51, 241, "Input",ExpressionUUID->"4e19bbd5-efed-4847-b0ba-f1e05abccf2a"],
Cell[977433, 18971, 292, 5, 34, "Output",ExpressionUUID->"314358d7-9c58-4613-9e66-777b3336faaf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[977774, 18982, 165, 3, 45, "Subsubsection",ExpressionUUID->"0e57abc4-01a4-4da3-8bd8-96c1546e34c6"],
Cell[CellGroupData[{
Cell[977964, 18989, 1165, 32, 73, "Input",ExpressionUUID->"e9adaf94-bd3e-434b-8906-a994e3a6e5e9"],
Cell[979132, 19023, 1340, 28, 81, "Output",ExpressionUUID->"7fe96936-1a86-4664-888d-f311949a2c97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980509, 19056, 1908, 49, 241, "Input",ExpressionUUID->"6a55c6aa-21f4-4b6e-9103-34f15a61d7e5"],
Cell[982420, 19107, 305, 5, 34, "Output",ExpressionUUID->"ac872db6-6949-4a92-acc3-82be7c23487b"],
Cell[982728, 19114, 316, 5, 34, "Output",ExpressionUUID->"bdf8c983-c11b-46d2-94b0-17d2e145b0ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[983093, 19125, 165, 3, 45, "Subsubsection",ExpressionUUID->"b5d0c1e1-af9f-472c-a899-6663a9ed1fff"],
Cell[CellGroupData[{
Cell[983283, 19132, 1119, 31, 73, "Input",ExpressionUUID->"c73c4fb8-61ad-48ab-8221-7ed021071846"],
Cell[984405, 19165, 1210, 25, 56, "Output",ExpressionUUID->"92bf2c0a-1740-417f-8f43-66267bebd47f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985652, 19195, 1949, 51, 241, "Input",ExpressionUUID->"b4f4bb6a-e605-48ca-9c7b-e32fd9e6c67f"],
Cell[987604, 19248, 296, 5, 34, "Output",ExpressionUUID->"c08ade41-1806-4498-a539-2fd4f71cdd9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[987949, 19259, 168, 3, 45, "Subsubsection",ExpressionUUID->"57ec704c-4635-4367-b1d0-5e37a2276cc6"],
Cell[CellGroupData[{
Cell[988142, 19266, 1197, 32, 94, "Input",ExpressionUUID->"7e16fe5e-c594-450b-948b-55fc1e0a0ad2"],
Cell[989342, 19300, 1312, 27, 60, "Output",ExpressionUUID->"609d2b07-90e1-407a-a7af-23a2390abcfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[990691, 19332, 2025, 51, 241, "Input",ExpressionUUID->"f367b48b-7f66-4899-a464-d538a306799a"],
Cell[992719, 19385, 319, 5, 34, "Output",ExpressionUUID->"de07aedf-1249-4126-9ddc-aa4ac1368286"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[993087, 19396, 166, 3, 45, "Subsubsection",ExpressionUUID->"25d22b79-d42e-469c-9283-7f1a4d58a58a"],
Cell[CellGroupData[{
Cell[993278, 19403, 1360, 38, 94, "Input",ExpressionUUID->"ba2bea0d-4b87-4b46-bedb-6051699e77cf"],
Cell[994641, 19443, 1234, 25, 60, "Output",ExpressionUUID->"6194c0de-9052-4cab-85ed-fd914aa5620b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[995912, 19473, 1801, 48, 159, "Input",ExpressionUUID->"78b08aac-dd24-4807-a5af-907ac35da7f0"],
Cell[997716, 19523, 1872, 50, 249, "Output",ExpressionUUID->"3cd062e7-3516-4dc7-a447-640cf49fe5d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999625, 19578, 1956, 51, 241, "Input",ExpressionUUID->"25cf1c55-4032-41e1-b3e7-6ad365c216ca"],
Cell[1001584, 19631, 292, 5, 34, "Output",ExpressionUUID->"86731869-e144-4f24-953a-5fcc8513ad81"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001925, 19642, 245, 4, 45, "Subsubsection",ExpressionUUID->"df73d4e0-c65f-4070-b9ac-8b4fb2acdb59"],
Cell[1002173, 19648, 1057, 20, 127, "Text",ExpressionUUID->"3da787fe-f706-4552-a7f1-a59078feea01"],
Cell[CellGroupData[{
Cell[1003255, 19672, 1340, 32, 220, "Input",ExpressionUUID->"5d1d1bda-68c2-49f9-b434-08b14ae96da1"],
Cell[1004598, 19706, 294849, 4907, 246, "Output",ExpressionUUID->"de5fb8a1-0ded-4799-b60b-aa7ffc57a7dd"]
}, Open  ]],
Cell[1299462, 24616, 295, 6, 35, "Text",ExpressionUUID->"e912cdfc-6797-4ec1-8a81-928f58317a08"],
Cell[1299760, 24624, 1969, 55, 56, "Input",ExpressionUUID->"734f7995-d9ac-454c-8565-73fe1c760e8b"],
Cell[CellGroupData[{
Cell[1301754, 24683, 1612, 41, 220, "Input",ExpressionUUID->"d8886505-1903-4153-b5ce-92e8944b56d1"],
Cell[1303369, 24726, 10748, 244, 251, "Output",ExpressionUUID->"f9a59153-28e1-46fd-b922-cd9d2adf911e"]
}, Open  ]],
Cell[1314132, 24973, 251, 4, 35, "Text",ExpressionUUID->"c0a859eb-8923-42e9-af40-1212ea45f866"],
Cell[CellGroupData[{
Cell[1314408, 24981, 822, 23, 52, "Input",ExpressionUUID->"a278a236-4d0d-44b6-b499-f83396d4cbb7"],
Cell[1315233, 25006, 196, 3, 34, "Output",ExpressionUUID->"89ab2c1f-9ef0-4fc8-8e4c-8013bd4424fd"],
Cell[1315432, 25011, 194, 3, 34, "Output",ExpressionUUID->"4b037ccf-f0d2-4043-b667-4ebd765c42ef"]
}, Open  ]],
Cell[1315641, 25017, 263, 6, 35, "Text",ExpressionUUID->"9549199c-5a01-4afe-b307-4fd8ec6eb32f"],
Cell[CellGroupData[{
Cell[1315929, 25027, 1248, 31, 220, "Input",ExpressionUUID->"b9a720d7-d575-409c-9497-29059421709b"],
Cell[1317180, 25060, 287026, 4780, 252, "Output",ExpressionUUID->"069d4b86-8939-42f3-b352-c37143a86f22"]
}, Open  ]],
Cell[1604221, 29843, 510, 9, 58, "Text",ExpressionUUID->"254eadc2-75b9-429c-a6c8-670259c4dbaa"],
Cell[1604734, 29854, 403, 10, 30, "Input",ExpressionUUID->"000c241d-7edd-4521-92c7-664c4d03b802"],
Cell[CellGroupData[{
Cell[1605162, 29868, 2321, 60, 348, "Input",ExpressionUUID->"63f10090-4b91-4347-b615-8ab3d65b6020"],
Cell[1607486, 29930, 24547, 421, 252, "Output",ExpressionUUID->"58893ce3-90df-406f-90d2-c3eb8edaa6b1"]
}, Open  ]],
Cell[1632048, 30354, 332, 7, 35, "Text",ExpressionUUID->"982ef389-c71b-45e8-aab1-ef54aad673c4"],
Cell[CellGroupData[{
Cell[1632405, 30365, 4900, 129, 642, "Input",ExpressionUUID->"ef4101d8-02b0-4b8e-8412-f61c1ca3bb77"],
Cell[1637308, 30496, 53867, 939, 267, "Output",ExpressionUUID->"ca51d76a-1109-4739-ac64-a9514a8c3b17"]
}, Open  ]],
Cell[1691190, 31438, 1272, 30, 178, "Input",ExpressionUUID->"37ee15e0-a45f-4f1f-9006-984488a0eccb"],
Cell[1692465, 31470, 429, 8, 58, "Text",ExpressionUUID->"b62114ad-106a-4fff-8aff-9f6113ef3249"],
Cell[1692897, 31480, 10185, 235, 267, "Output",ExpressionUUID->"56d30f0f-e8c8-4ef8-8e9a-048ddbbae186"],
Cell[1703085, 31717, 199, 3, 35, "Text",ExpressionUUID->"e4a673ee-01aa-4e8f-98b5-56f4ddfb2309"],
Cell[CellGroupData[{
Cell[1703309, 31724, 4404, 123, 621, "Input",ExpressionUUID->"09f9a0b9-020b-4528-ac14-83664fef4dde"],
Cell[1707716, 31849, 53874, 939, 268, "Output",ExpressionUUID->"b2bf756a-39fe-4314-9ded-199418e8f10d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1761627, 32793, 1072, 27, 178, "Input",ExpressionUUID->"724827d5-9a10-4a80-a409-549a5b0cf71a"],
Cell[1762702, 32822, 10915, 247, 264, "Output",ExpressionUUID->"b81e8ee1-bd91-4d2f-87c7-672d0770be37"]
}, Open  ]],
Cell[1773632, 33072, 165, 3, 35, "Text",ExpressionUUID->"e946bb30-0255-4801-8d5d-0cbf97d982fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1773846, 33081, 178, 3, 54, "Subsection",ExpressionUUID->"9c98e5f9-426a-4c3c-ba0a-dec6552d212a"],
Cell[1774027, 33086, 233, 6, 35, "Text",ExpressionUUID->"6fb07f29-5393-4b23-bdd9-edd57f140277"],
Cell[1774263, 33094, 509, 12, 30, "Input",ExpressionUUID->"feed1a01-7c3e-441e-bcc5-a4165d495b44"],
Cell[1774775, 33108, 192, 3, 35, "Text",ExpressionUUID->"dad23b04-1447-4ca5-add2-c86a14bb3393"],
Cell[CellGroupData[{
Cell[1774992, 33115, 1118, 29, 178, "Input",ExpressionUUID->"a807930e-bfae-4d1c-b3dd-2a817923cf90"],
Cell[1776113, 33146, 107417, 1966, 147, "Output",ExpressionUUID->"ce37d131-7de1-49c7-94c3-fcf6c46e6d20"]
}, Open  ]],
Cell[1883545, 35115, 261, 6, 35, "Text",ExpressionUUID->"f79b261f-7bdc-4b52-83e7-f6197d7506f3"],
Cell[CellGroupData[{
Cell[1883831, 35125, 553, 14, 96, "Input",ExpressionUUID->"2b5a2182-6b66-4b65-a4c1-5686f548aaae"],
Cell[1884387, 35141, 261, 4, 34, "Output",ExpressionUUID->"9e388da2-197a-412d-aea0-320900f16894"],
Cell[1884651, 35147, 267, 4, 34, "Output",ExpressionUUID->"a5872636-b5d9-44d7-a50c-3d3b0fbc518e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1884955, 35156, 175, 3, 45, "Subsubsection",ExpressionUUID->"f9e9664b-6d7c-4961-8730-aa939ef8f52c"],
Cell[CellGroupData[{
Cell[1885155, 35163, 2468, 60, 222, "Input",ExpressionUUID->"17202739-2bd6-40c1-85ae-cc8a50886863"],
Cell[1887626, 35225, 135280, 2744, 403, "Output",ExpressionUUID->"da8d3f23-dfa6-4728-8e1d-c66b8966b091"],
Cell[2022909, 37971, 324, 6, 34, "Output",ExpressionUUID->"3d47730d-a05d-47c3-8842-0a309572ae13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2023270, 37982, 151, 3, 30, "Input",ExpressionUUID->"b4b5efcf-7956-44f8-bfbe-faada20eff64"],
Cell[2023424, 37987, 155, 3, 34, "Output",ExpressionUUID->"1f38d4b1-2155-4a99-bb54-043980871f15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2023616, 37995, 939, 23, 136, "Input",ExpressionUUID->"8b936ac3-e1ad-4fcd-a192-58c8b5cbf96b"],
Cell[2024558, 38020, 1851, 48, 249, "Output",ExpressionUUID->"1f0a6091-cc57-4763-abda-91607fcac431"]
}, Open  ]],
Cell[2026424, 38071, 175, 3, 30, "Input",ExpressionUUID->"96e84f8e-244f-4c62-927a-38a529050116"],
Cell[CellGroupData[{
Cell[2026624, 38078, 1837, 44, 199, "Input",ExpressionUUID->"76d40d93-bd86-4256-a85e-29188675f6b0"],
Cell[2028464, 38124, 135483, 2744, 403, "Output",ExpressionUUID->"2ac7b0d9-e3f7-4c12-9321-a4f5fb9d1b8e"],
Cell[2163950, 40870, 278, 5, 34, "Output",ExpressionUUID->"a738232f-8b88-4049-b140-0f0f06707e4a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2164277, 40881, 186, 3, 45, "Subsubsection",ExpressionUUID->"068b3f0a-5e0b-43c2-8fc9-9678ffc64f2b"],
Cell[2164466, 40886, 434, 11, 30, "Input",ExpressionUUID->"8bfeb8cf-792f-4339-84df-ecc5ca10c7d6"],
Cell[2164903, 40899, 546, 15, 30, "Input",ExpressionUUID->"b318f294-f6f1-45b8-83be-7dc3f2141cb2"],
Cell[CellGroupData[{
Cell[2165474, 40918, 1179, 28, 157, "Input",ExpressionUUID->"af0dfddd-b9d8-4145-83f1-7863b13d0456"],
Cell[2166656, 40948, 352, 6, 70, "Output",ExpressionUUID->"90c01553-c76d-4fea-9b60-639fbbc8e41b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2167057, 40960, 275, 4, 37, "Subsubsection",ExpressionUUID->"3b91e678-9c49-4272-837f-8bf73cee31b4"],
Cell[2167335, 40966, 201, 4, 35, "Text",ExpressionUUID->"61579732-b217-43dd-93ac-2d8dde2edbb5"],
Cell[CellGroupData[{
Cell[2167561, 40974, 2571, 66, 262, "Input",ExpressionUUID->"53f09db6-b74b-4bc9-ad35-08917c01dced"],
Cell[2170135, 41042, 1148, 21, 60, "Output",ExpressionUUID->"5f18bc2c-bdea-4f32-a454-edca1879b5ab"]
}, Open  ]],
Cell[2171298, 41066, 199, 4, 35, "Text",ExpressionUUID->"839a8902-31d0-4b73-9e80-70da804eeea2"],
Cell[CellGroupData[{
Cell[2171522, 41074, 2590, 67, 262, "Input",ExpressionUUID->"ab8614d1-47f8-46ef-af87-531ebbbfb003"],
Cell[2174115, 41143, 1515, 33, 81, "Output",ExpressionUUID->"a76746de-70b4-4344-a343-bc65922bc5fa"]
}, Open  ]],
Cell[2175645, 41179, 196, 4, 35, "Text",ExpressionUUID->"2419a9d5-77b9-435a-8c7e-ff4229847105"],
Cell[CellGroupData[{
Cell[2175866, 41187, 2596, 66, 241, "Input",ExpressionUUID->"5436eac8-0637-4449-8337-39adc6570d54"],
Cell[2178465, 41255, 1385, 30, 60, "Output",ExpressionUUID->"8d5901df-5f46-4c08-a680-41f663a1cd70"]
}, Open  ]],
Cell[2179865, 41288, 198, 4, 35, "Text",ExpressionUUID->"40c319ba-596e-4c42-b380-4a6d9df50d42"],
Cell[CellGroupData[{
Cell[2180088, 41296, 2458, 64, 241, "Input",ExpressionUUID->"26a095c3-6e5f-4ae2-83c9-41940ca2002d"],
Cell[2182549, 41362, 1339, 28, 81, "Output",ExpressionUUID->"037b26be-e7a3-43e3-9faa-338693b4b4a8"]
}, Open  ]],
Cell[2183903, 41393, 173, 4, 35, "Text",ExpressionUUID->"67ff275c-0eba-4c81-9773-81f7204c2b8b"],
Cell[2184079, 41399, 226, 6, 35, "Text",ExpressionUUID->"d448a2d9-2776-4cfd-b175-eaf588b2ae1f"],
Cell[CellGroupData[{
Cell[2184330, 41409, 2788, 70, 241, "Input",ExpressionUUID->"fd78ed9a-1cdc-4b6f-9734-f3e0d95a8e83"],
Cell[2187121, 41481, 1375, 27, 60, "Output",ExpressionUUID->"980bd3d1-0ac1-4d6e-a931-4004c6c7c0b5"]
}, Open  ]],
Cell[2188511, 41511, 197, 4, 35, "Text",ExpressionUUID->"d964dcf8-ea23-4903-9dc5-ccbd06c90147"],
Cell[CellGroupData[{
Cell[2188733, 41519, 2387, 63, 241, "Input",ExpressionUUID->"8fbede87-7375-4c28-97ac-469a2651c3c6"],
Cell[2191123, 41584, 1133, 23, 60, "Output",ExpressionUUID->"c963b64b-4140-490b-a82b-12ba0b8a16de"],
Cell[2192259, 41609, 623, 12, 46, "Message",ExpressionUUID->"99c0aebb-016d-4451-ba0e-c8974d4da164"]
}, Closed]],
Cell[2192897, 41624, 197, 4, 31, "Text",ExpressionUUID->"cc5ec8f5-07be-4a12-b217-7ad2d11b3e76"],
Cell[CellGroupData[{
Cell[2193119, 41632, 2316, 62, 241, "Input",ExpressionUUID->"ff40314d-bbe5-48ed-aba9-78f2334350bb"],
Cell[2195438, 41696, 1071, 20, 60, "Output",ExpressionUUID->"e218e844-713a-4ea0-941a-39635ec094b6"]
}, Closed]],
Cell[2196524, 41719, 200, 4, 31, "Text",ExpressionUUID->"a04e9741-23db-49df-bc7e-65dc941effea"],
Cell[CellGroupData[{
Cell[2196749, 41727, 2372, 64, 241, "Input",ExpressionUUID->"07684e36-b298-4b27-a2be-f8c27201f412"],
Cell[2199124, 41793, 1229, 25, 60, "Output",ExpressionUUID->"0a08a1e4-0d5d-4a21-bc27-ca055d597201"],
Cell[2200356, 41820, 599, 12, 46, "Message",ExpressionUUID->"b9b0d429-eaed-4883-9532-e7d203129b34"]
}, Closed]],
Cell[2200970, 41835, 197, 4, 31, "Text",ExpressionUUID->"23bb5a54-0e30-4923-a045-5b3b3a047ece"],
Cell[CellGroupData[{
Cell[2201192, 41843, 2337, 62, 241, "Input",ExpressionUUID->"7e8a68a6-3ef5-4c05-85e9-62751a79393e"],
Cell[2203532, 41907, 1180, 24, 60, "Output",ExpressionUUID->"2826b5e6-92c5-4d28-a5fc-6fedbf7f0662"],
Cell[2204715, 41933, 599, 12, 46, "Message",ExpressionUUID->"beeeb08e-bd88-4222-91e0-db07a1e563ae"],
Cell[2205317, 41947, 599, 12, 46, "Message",ExpressionUUID->"1b09001a-bb50-4f95-a904-bf55eafadb66"]
}, Closed]],
Cell[2205931, 41962, 213, 3, 31, "Text",ExpressionUUID->"09d79c83-c9cb-437c-afbc-354978d8adca"],
Cell[CellGroupData[{
Cell[2206169, 41969, 2903, 72, 283, "Input",ExpressionUUID->"05f11cac-a243-4351-a015-591080c5db10"],
Cell[2209075, 42043, 1272, 26, 108, "Output",ExpressionUUID->"b6db989d-8d20-4988-8edf-0ff6002f6039"]
}, Closed]],
Cell[2210362, 42072, 198, 4, 31, "Text",ExpressionUUID->"e28deba5-19b2-4dbb-b816-c796db4e13bd"],
Cell[CellGroupData[{
Cell[2210585, 42080, 2483, 65, 262, "Input",ExpressionUUID->"7c4e0f5d-b829-4743-a7f9-7c67551e51be"],
Cell[2213071, 42147, 1201, 25, 60, "Output",ExpressionUUID->"ecd90fcb-2585-4dde-bc3c-022791f4af8e"]
}, Closed]],
Cell[2214287, 42175, 198, 4, 31, "Text",ExpressionUUID->"060f08f8-ece8-4c11-853c-d90588cd6f22"],
Cell[CellGroupData[{
Cell[2214510, 42183, 2485, 66, 262, "Input",ExpressionUUID->"a7bb5999-7015-4f4c-ba80-bcaf2382330b"],
Cell[2216998, 42251, 1314, 28, 60, "Output",ExpressionUUID->"6e271123-3f50-4485-b09a-946c288fc59b"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2218373, 42286, 228, 4, 54, "Subsection",ExpressionUUID->"edcfddd6-935f-44b6-8857-4525fb278a1d"],
Cell[2218604, 42292, 301, 7, 35, "Text",ExpressionUUID->"d785f79e-8cdb-4612-acce-031c8e9d9aeb"],
Cell[2218908, 42301, 656, 14, 30, "Input",ExpressionUUID->"bbc276a8-258d-4b44-9f03-f5b61aaa581c"],
Cell[2219567, 42317, 169, 3, 35, "Text",ExpressionUUID->"4b1683db-38a1-46d0-a4be-59e9bba1d3f4"],
Cell[CellGroupData[{
Cell[2219761, 42324, 1287, 31, 178, "Input",ExpressionUUID->"d1f18b7a-211a-4c6b-9732-2bf1a706877e"],
Cell[2221051, 42357, 111028, 2043, 146, "Output",ExpressionUUID->"88e5a08a-c0f1-4773-9725-c2fdebdf8132"]
}, Open  ]],
Cell[2332094, 44403, 261, 6, 35, "Text",ExpressionUUID->"d6fa5bcf-74ef-464f-b318-a188805c1a88"],
Cell[CellGroupData[{
Cell[2332380, 44413, 644, 15, 96, "Input",ExpressionUUID->"c1b19abf-81f2-4f0d-a93e-f268ea7c4c69"],
Cell[2333027, 44430, 334, 5, 34, "Output",ExpressionUUID->"6621aeb7-7f60-4224-9887-4e77fdf84531"],
Cell[2333364, 44437, 336, 5, 34, "Output",ExpressionUUID->"a92880fe-c0a0-4ee5-bb8d-86cd99c73869"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2333737, 44447, 175, 3, 45, "Subsubsection",ExpressionUUID->"a5278414-ba8d-4e60-9983-335e33329c6e"],
Cell[CellGroupData[{
Cell[2333937, 44454, 2578, 60, 222, "Input",ExpressionUUID->"117d0fdc-8fab-4e3b-86cf-4586307a8b1f"],
Cell[2336518, 44516, 135419, 2746, 403, "Output",ExpressionUUID->"253d4bdc-1d0d-4016-b244-eab9af331c68"],
Cell[2471940, 47264, 451, 8, 34, "Output",ExpressionUUID->"dfe0256e-08df-4cb1-be32-efa35381727c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2472428, 47277, 151, 3, 30, "Input",ExpressionUUID->"239087ef-ad3a-403b-a71f-bf44e672be58"],
Cell[2472582, 47282, 224, 4, 34, "Output",ExpressionUUID->"e84db87a-c056-43fd-8d49-51a18680b7d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2472843, 47291, 1033, 24, 136, "Input",ExpressionUUID->"0dadada1-973c-4675-9feb-0f5c92094d96"],
Cell[2473879, 47317, 1961, 49, 249, "Output",ExpressionUUID->"0e62d7fa-fb91-44ce-8e91-0c1d9c200667"]
}, Open  ]],
Cell[2475855, 47369, 175, 3, 30, "Input",ExpressionUUID->"adcf780a-5da5-456a-9176-21e0b6be266e"],
Cell[CellGroupData[{
Cell[2476055, 47376, 1975, 46, 199, "Input",ExpressionUUID->"d55d7eaa-e203-41a8-aa19-2a1987a66ea1"],
Cell[2478033, 47424, 621, 12, 46, "Message",ExpressionUUID->"49730ae7-5538-4301-ad24-5a510f518e4b"],
Cell[2478657, 47438, 135576, 2745, 403, "Output",ExpressionUUID->"719676ec-ce71-4fa3-9b19-402fcb365f82"],
Cell[2614236, 50185, 369, 6, 34, "Output",ExpressionUUID->"665fdf4c-eddc-4a9b-ad97-b741491493d5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2614654, 50197, 234, 4, 45, "Subsubsection",ExpressionUUID->"07093239-e765-48b9-a074-e259380bf1f8"],
Cell[2614891, 50203, 506, 12, 30, "Input",ExpressionUUID->"104e9ea8-9c44-4231-a6a7-ffe6491bd16e"],
Cell[2615400, 50217, 590, 15, 30, "Input",ExpressionUUID->"92157d5d-2c7a-4aa7-93cd-9a821403e9c8"],
Cell[CellGroupData[{
Cell[2616015, 50236, 1367, 30, 157, "Input",ExpressionUUID->"1f43c366-d076-477e-a4e1-0ddd355bc0ef"],
Cell[2617385, 50268, 468, 7, 34, "Output",ExpressionUUID->"92fdc193-1135-46b5-beab-1f434957305c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2617902, 50281, 326, 5, 45, "Subsubsection",ExpressionUUID->"34afc081-50b7-459a-9df2-4805c3ae0dd3"],
Cell[2618231, 50288, 210, 4, 35, "Text",ExpressionUUID->"22e9eab6-5157-4ace-9891-549cd788db7c"],
Cell[2618444, 50294, 579, 9, 30, "Input",ExpressionUUID->"1c17fb27-1f32-47d1-9b56-51f09cee661e"],
Cell[2619026, 50305, 175, 3, 30, InheritFromParent,ExpressionUUID->"c52cf981-fa94-44ec-92ef-9e0f16af0074"],
Cell[2619204, 50310, 199, 4, 35, "Text",ExpressionUUID->"c23655e1-02da-4e36-928d-9edc38682c01"],
Cell[CellGroupData[{
Cell[2619428, 50318, 2750, 69, 262, "Input",ExpressionUUID->"5efef59b-e9fa-4149-9b02-67aee02f65a6"],
Cell[2622181, 50389, 1447, 29, 60, "Output",ExpressionUUID->"156b28e7-893d-4538-9f94-6aa3f3fbe70b"]
}, Open  ]],
Cell[2623643, 50421, 196, 4, 35, "Text",ExpressionUUID->"76946b80-a6ae-48cf-9275-5e7e81f65a2d"],
Cell[CellGroupData[{
Cell[2623864, 50429, 2804, 69, 241, "Input",ExpressionUUID->"8a13202d-b3d1-4bdb-9750-d15b533cc916"],
Cell[2626671, 50500, 1459, 30, 60, "Output",ExpressionUUID->"08d82280-8058-45d4-a29f-56878f720d54"]
}, Open  ]],
Cell[2628145, 50533, 198, 4, 35, "Text",ExpressionUUID->"8a4f4832-6a8c-49ec-b1dd-5e743e440b0f"],
Cell[CellGroupData[{
Cell[2628368, 50541, 2616, 67, 241, "Input",ExpressionUUID->"1a8586e6-2cca-4892-ad17-eae0ec8f4514"],
Cell[2630987, 50610, 1262, 24, 60, "Output",ExpressionUUID->"d33ba154-9d19-4c7e-bb24-f57d0a284c25"]
}, Open  ]],
Cell[2632264, 50637, 173, 4, 35, "Text",ExpressionUUID->"fa11c8ce-36e9-4938-aa80-2814d514be17"],
Cell[2632440, 50643, 226, 6, 35, "Text",ExpressionUUID->"f7cd3c68-03bc-430d-b783-e28abb18ddca"],
Cell[CellGroupData[{
Cell[2632691, 50653, 2950, 73, 241, "Input",ExpressionUUID->"2207952f-6935-450c-b121-1a0c4caeec62"],
Cell[2635644, 50728, 1421, 27, 60, "Output",ExpressionUUID->"bdd98895-ad28-4ed0-a2c0-752aa1538a78"]
}, Open  ]],
Cell[2637080, 50758, 197, 4, 35, "Text",ExpressionUUID->"fc34a8a1-3103-4626-a11d-8c065f605742"],
Cell[CellGroupData[{
Cell[2637302, 50766, 2573, 66, 241, "Input",ExpressionUUID->"a3b72348-8dcf-429c-9edb-2678e379dd5f"],
Cell[2639878, 50834, 1173, 22, 60, "Output",ExpressionUUID->"2de3d7ba-cd13-479b-9f43-d5a4474b5823"]
}, Open  ]],
Cell[2641066, 50859, 197, 4, 35, "Text",ExpressionUUID->"540445b0-9cc2-437a-a27d-321fb7ddf29e"],
Cell[CellGroupData[{
Cell[2641288, 50867, 2493, 64, 241, "Input",ExpressionUUID->"49abfbf3-f4ee-4eb8-aa1f-665db2b23f9f"],
Cell[2643784, 50933, 1155, 21, 60, "Output",ExpressionUUID->"c6d1b398-7053-4b5d-9155-72277865dfa2"]
}, Open  ]],
Cell[2644954, 50957, 200, 4, 35, "Text",ExpressionUUID->"e0ac1da9-2ee8-47f6-b31e-2ae662e15b74"],
Cell[CellGroupData[{
Cell[2645179, 50965, 2556, 66, 241, "Input",ExpressionUUID->"48720a85-dcda-484d-966c-0f341fd1eeca"],
Cell[2647738, 51033, 1194, 22, 60, "Output",ExpressionUUID->"70edf6cb-1fb5-42b0-8b75-ecce917ae75b"]
}, Open  ]],
Cell[2648947, 51058, 197, 4, 35, "Text",ExpressionUUID->"dd39eccd-583a-479f-acdf-d70aab68fe91"],
Cell[CellGroupData[{
Cell[2649169, 51066, 2521, 65, 241, "Input",ExpressionUUID->"19b91a7d-b2e1-49b0-95da-354828204d48"],
Cell[2651693, 51133, 1256, 24, 60, "Output",ExpressionUUID->"6c66b3a4-b153-437d-a456-3d1d84907987"]
}, Open  ]],
Cell[2652964, 51160, 213, 3, 35, "Text",ExpressionUUID->"bf1aab5e-a853-401e-a306-3dbacba50fce"],
Cell[CellGroupData[{
Cell[2653202, 51167, 3083, 74, 283, "Input",ExpressionUUID->"b2c4880e-76cd-4cdf-8c4f-62c173b2cfc3"],
Cell[2656288, 51243, 1372, 27, 60, "Output",ExpressionUUID->"a7848311-47ba-4b70-a1b0-d049b91543ea"]
}, Open  ]],
Cell[2657675, 51273, 198, 4, 35, "Text",ExpressionUUID->"a2012384-0cb3-48a3-b320-0c971d2b5637"],
Cell[CellGroupData[{
Cell[2657898, 51281, 2669, 68, 262, "Input",ExpressionUUID->"c7a39fe7-64bf-410e-a32f-f97d7c95936b"],
Cell[2660570, 51351, 1218, 24, 56, "Output",ExpressionUUID->"a2b2a61e-d28c-4514-a841-913d597fc077"]
}, Open  ]],
Cell[2661803, 51378, 198, 4, 35, "Text",ExpressionUUID->"9e2dca6a-25f0-403d-b852-099b3c3325f7"],
Cell[CellGroupData[{
Cell[2662026, 51386, 2647, 69, 262, "Input",ExpressionUUID->"95bbe3fd-4b48-4b68-86e8-37ae31eb0123"],
Cell[2664676, 51457, 1279, 24, 108, "Output",ExpressionUUID->"8ede5b72-85e3-424c-8d41-0293e2350e00"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

